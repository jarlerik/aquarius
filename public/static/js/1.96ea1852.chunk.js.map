{"version":3,"sources":["webpack:///static/js/1.96ea1852.chunk.js","webpack:///./~/pdfjs-dist/lib/core/primitives.js","webpack:///./~/pdfjs-dist/lib/core/stream.js","webpack:///./~/pdfjs-dist/lib/core/colorspace.js","webpack:///./~/pdfjs-dist/lib/core/encodings.js","webpack:///./~/pdfjs-dist/lib/core/parser.js","webpack:///./~/pdfjs-dist/lib/core/glyphlist.js","webpack:///./~/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./~/pdfjs-dist/lib/core/operator_list.js","webpack:///./~/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./~/pdfjs-dist/lib/core/ccitt.js","webpack:///./~/pdfjs-dist/lib/core/cff_parser.js","webpack:///./~/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./~/pdfjs-dist/lib/core/crypto.js","webpack:///./~/pdfjs-dist/lib/core/function.js","webpack:///./~/pdfjs-dist/lib/core/jpx.js","webpack:///./~/pdfjs-dist/lib/core/obj.js","webpack:///./~/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./~/pdfjs-dist/lib/core/unicode.js","webpack:///./~/pdfjs-dist/lib/core/annotation.js","webpack:///./~/pdfjs-dist/lib/core/bidi.js","webpack:///./~/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./~/pdfjs-dist/lib/core/charsets.js","webpack:///./~/pdfjs-dist/lib/core/cmap.js","webpack:///./~/pdfjs-dist/lib/core/document.js","webpack:///./~/pdfjs-dist/lib/core/evaluator.js","webpack:///./~/pdfjs-dist/lib/core/font_renderer.js","webpack:///./~/pdfjs-dist/lib/core/fonts.js","webpack:///./~/pdfjs-dist/lib/core/image.js","webpack:///./~/pdfjs-dist/lib/core/jbig2.js","webpack:///./~/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./~/pdfjs-dist/lib/core/jpg.js","webpack:///./~/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./~/pdfjs-dist/lib/core/metrics.js","webpack:///./~/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./~/pdfjs-dist/lib/core/pattern.js","webpack:///./~/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./~/pdfjs-dist/lib/core/ps_parser.js","webpack:///./~/pdfjs-dist/lib/core/type1_parser.js","webpack:///./~/pdfjs-dist/lib/core/worker.js","webpack:///./~/pdfjs-dist/lib/pdf.worker.js"],"names":["webpackJsonp","20","module","exports","isEOF","v","EOF","isName","name","Name","undefined","isCmd","cmd","Cmd","isDict","type","Dict","get","isRef","Ref","isRefsEqual","v1","v2","num","gen","isStream","_typeof","getBytes","Object","defineProperty","value","Symbol","iterator","obj","constructor","prototype","this","nameCache","create","nameValue","cmdCache","cmdValue","xref","_map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","Promise","resolve","getArray","Array","isArray","slice","i","ii","length","fetch","getRaw","key","getKeys","keys","set","has","forEach","callback","empty","merge","dictArray","mergedDict","dict","keyName","toString","str","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","call","clear","24","__webpack_require__","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","start","bytes","Uint8Array","pos","end","isEmpty","getByte","getUint16","b0","b1","getInt32","b2","b3","strEnd","subarray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","buffer","stringToBytes","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","stream","shift","chunk","newLength","baseStreams","Util","appendToArray","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","chunkSize","hasMoreData","input","TILDA_CHAR","Z_LOWER_CHAR","isSpace","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","Math","min","log","97","ColorSpace","resizeRgbImage","src","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","unreachable","getRgb","srcOffset","rgb","getRgbItem","destOffset","getRgbBuffer","count","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","comps","rgbBuf","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","arguments","colorSpaces","resCS","mode","altIR","altCS","warn","createIR","isDefaultDecode","decode","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","tintFn","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","isString","charCodeAt","outputDelta","lookupPos","r","g","convertToRgb","srcScale","m","y","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","max","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToD65","LMS_D65","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","tempConvertMatrix2","XYZ_Black","XYZ_D65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","98","getEncoding","encodingName","WinAnsiEncoding","StandardEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","ExpertEncoding","MacExpertEncoding","122","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_LENGTH_TO_CACHE","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","e","MissingDataException","cipherTransform","makeInlineImage","array","push","makeStream","Number","isInteger","decryptString","findDefaultInlineStreamEnd","E","I","SPACE","LF","CR","NUL","startPos","state","maybeEIPos","assert","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","StreamType","FLATE","LZW","DCT","JpegStream","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","ex","knownCommands","strBuf","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","Error","getHints","hintsLength","item","hints","index","parser","obj1","obj2","obj3","isNum","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","179","getLookupTableFactory","getGlyphsUnicode","getDingbatsGlyphsUnicode","180","_jpg","configurable","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transform","transformNeeded","maxValue","decodeTransform","colorTransform","data","getData","drawWidth","drawHeight","getIR","forceDataSchema","createObjectURL","181","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","handlePaintSolidColorImageMask","iFirstSave","fnArray","argsArray","iFirstPIMXO","arg","imageMask","OPS","paintSolidColorImageMask","queue","context","iCurr","match","lastProcessed","InitialState","save","paintInlineImageXObject","restore","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","offset","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","iFirstPIXO","firstPIXOArg0","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","iterate","flush","NullOptimizer","getTransfers","transfers","cached","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","CHUNK_SIZE","CHUNK_SIZE_ABOUT","totalLength","addOp","addDependency","dependency","addDependencies","addOpList","opList","extendObj","lastChunk","send","operatorList","401","ArithmeticDecoder","bp","dataEnd","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","readBit","contexts","d","cx_index","cx_mps","qeTableIcx","qeIcx","402","CCITTFaxDecoder","options","next","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","readNextChar","refPos","blackPixels","err","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","403","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","MAX_SUBR_NESTING","file","properties","seacAnalysisEnabled","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","cff","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","topDict","createDict","strings","names","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","fontBBox","ascent","descent","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","NaN","parseFloat","operands","entries","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","add","bytesToString","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","isNaN","valid","firstStackClearing","_ref","charstring","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","removeByName","privateDictEnd","dictData","subrsOffset","relativeOffset","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","readSupplement","supplementsCount","sid","indexOf","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","first","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","entry","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","output","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","parseInt","encodeFloat","encodeInteger","exec","epsilon","nibbles","out","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","outputLength","subrs","offsetTracker","jj","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","404","ChunkedStreamManager","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","begin","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","reject","readChunk","arrayByteLength","read","then","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","sort","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","abort","cancelAllRequests","405","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","CipherTransformFactory","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","s","keyLength","encryptBlock","tmp2","decryptBlock","hash","h0","h3","paddedLength","padded","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","mode384","tmp3","tmp1","NullCipher","expandKey128","cipherKey","t3","t4","rcon","decrypt128","u","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","lastBlock","psLen","encrypt","cipher","expandKey256","decrypt256","encrypt256","compareByteArrays","array1","array2","checkOwnerPassword","password","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","fileId","flags","encryptMetadata","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","PasswordException","PasswordResponses","NEED_PASSWORD","decodedPassword","INCORRECT_PASSWORD","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","406","_classCallCheck","instance","Constructor","TypeError","isPDFFunction","fnDict","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","_createClass","defineProperties","target","props","descriptor","enumerable","writable","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","_ref2","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","arr","domain","inputSize","encode","samples","_ref7","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","bounds","_ref11","fnsIR","clip","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache","MAX_CACHE_SIZE","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","MAX_STACK_SIZE","pop","copy","roll","l","operators","operator","counter","abs","isBool","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","407","JpxImage","_arithmetic_decoder","JpxError","msg","message","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","componentsCount","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","dataLength","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","gainLog2","SubbandsGainLog2","items","calculate","top","transformComponents","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","LL","LH","HL","HH","head","readUint16","parseCodestream","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","qcc","cqcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","Int8Array","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","symbol","Transform","u0","v0","ll","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","K_","408","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","subtype","stringToUTF8String","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","toRoman","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","promises","all","translatedFonts","font","translated","getPage","_this2","getPageDict","createPage","nodesToVisit","currentNode","currentPageIndex","fetchAsync","kids","last","getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","node","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","actionName","urlDict","remoteDest","baseUrl","split","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","absoluteUrl","createValidAbsoluteUrl","href","xrefstms","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","token","LT","skipUntil","TAB","PERCENT","objRegExp","endobjRegExp","nestedObjRegExp","CHECK_CONTENT_LENGTH","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","XRefParseException","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","409","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","410","mapSpecialUnicodeValues","getSpecialPUASymbols","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","getUnicodeRangeFor","UnicodeRanges","isRTLRangeFor","reverseIfRtl","chars","charsLength","getNormalizedUnicodes","684","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","getTransformMatrix","rect","bbox","getAxialAlignedBoundingBox","minX","minY","maxY","AnnotationFactory","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_obj","_operator_list","idFactory","createObjId","parameters","LinkAnnotation","TextAnnotation","fieldType","getInheritableProperty","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","resources","objectLoader","task","renderForms","appearanceDict","resourcesPromise","loadResources","beginAnnotation","getOperatorList","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","validNumber","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","_this4","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","DEFAULT_ICON_SIZE","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","viewable","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","685","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","vertical","dir","bidi","startLevel","strLength","numBidi","charCode","charType","baseTypes","arabicTypes","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","686","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","687","688","CMapFactory","IdentityCMap","CMap","BUILT_IN_CMAPS","builtInCMap","codespaceRanges","numCodespaceRanges","useCMap","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","getMap","readCharCode","codespaceRangesLen","codespaceRange","charcode","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","processBinaryCMap","cMap","readByte","MAX_NUM_SIZE","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","sp","process","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","fetchBuiltInCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","compressionType","CMapCompressionType","BINARY","NONE","parsedCMap","689","PDFDocument","Page","_annotation","_evaluator","_function","isAnnotationRenderable","annotation","printable","pageDict","evaluatorOptions","uniquePrefix","idCounters","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","MAX_LOOP_COUNT","mediaBox","cropBox","userUnit","view","intersection","intersect","getContentStream","ensure","handler","renderInteractiveForms","contentStreamPromise","partialEvaluator","PartialEvaluator","dataPromises","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","extractTextContent","normalizeWhitespace","sink","combineTextItems","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","isArrayBuffer","find","needle","backwards","lastIndexOf","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","setup","version","catalog","pdfFormatVersion","acroForm","xfa","fields","linearization","step","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fingerprint","fileID","idArray","hex","690","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","NativeImageDecoder","_ref$forceDataSchema","_ref2$options","DefaultPartialEvaluatorOptions","cachedCMap","sendWithPromise","TimeSlotManager","normalizeBlendMode","maxImageSize","disableFontFace","nativeImageDecoderSupport","NativeImageDecoding","DECODE","ignoreErrors","canDecode","image","isDecodable","colorSpace","decodePromise","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","checked","endTime","Date","now","deferred","TILING_PATTERN","SHADING_PATTERN","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","inline","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","mask","SMALL_IMAGE_DIMENSIONS","imageObj","isInline","createImageData","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","catch","reason","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","featureId","UNSUPPORTED_FEATURES","unknown","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","docId","translatedPromise","translateFont","translatedFont","fontType","xrefFontStats","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patterns","patternName","shading","Pattern","parseShading","closePendingRestoreOPS","argument","preprocessor","savedStatesDepth","_ref3$initialState","EvalState","xobjs","StateManager","EvaluatorPreprocessor","timeSlotManager","promiseBody","ensureNotTerminated","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","ensureTextContentItem","textContentItem","textState","seenStyles","textContent","styles","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","Infinity","replaceWhitespace","WhitespaceRegexp","runBidiTransform","textChunk","bidiResult","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","TextState","skipEmptyXObjs","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","desiredSize","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","ucs2CMapName","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","stdFontMap","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","prev","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","opMap","getOPMap","nonProcessedArgs","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opSpec","argsLength","preprocessCommand","691","FontRendererFactory","_cff_parser","getLong","getUshort","parseCmap","segCount","idDelta","idOffset","groups","parseCff","gsubrs","parseGlyfTable","glyf","loca","isGlyphLocationsLong","itemSize","itemDecode","startOffset","endOffset","lookupCmap","glyphId","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scaleX","scaleY","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","repeat","startPoint","endPoint","contour","compileCharString","bezierCurveTo","xb","yb","y3","subrCode","stackClean","stems","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","noop","compileGlyph","compileGlyphImpl","indexToLocFormat","unitsPerEm","numTables","tag","692","adjustWidths","adjustToUnicode","builtInEncoding","amend","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","type1FontGlyphMapping","glyphNames","charCodeToGlyphId","standardGlyphName","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","tablesNames","tableName","tableOffsets","string32","searchParams","checksum","quad","addTable","sizes","missingFile","glyphCache","toFontChar","TYPE3","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","int16","writeSignedInt16","signedInt16","int32","string16","safeString16","isTrueTypeCollectionFile","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","ID","hasOwnProperty","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","readTables","readTableEntry","VALID_TABLES","previousPosition","readOpenTypeHeader","ttf","entrySelector","readTrueTypeCollectionHeader","ttc","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionData","_readTrueTypeCollecti","potentialHeader","potentialTables","readNameTable","nameEntry","readCmapTable","platformId","encodingId","mappings","hasShortCmap","segment","potentialTable","canBreak","useTable","segIndex","segments","offsetsCount","rangeOffset","offsetIndex","firstCode","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","glyphDataLength","sanitizeHead","locaLength","numGlyphsPlusOne","sanitizeGlyphLocations","dupFirstEntry","maxSizeOfInstructions","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","hasGlyph","ttcData","cffFile","isTrueType","maxZones","glyphsInfo","metricsOverride","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","newMapping","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","mapping","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","error","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","Type1Parser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","693","_jpx","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","jpxImage","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend","694","Jbig2Image","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","bitmap","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","Reader","decodeMMRBitmap","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","huffmanInput","newSymbols","currentHeight","symbolCodeLength","tableB1","symbolWidths","getStandardTable","deltaHeight","tableDeltaHeight","currentWidth","totalWidth","firstSymbol","deltaWidth","tableDeltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","bitmapSize","tableBitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","bitmapWidth","symbolBitmap","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","logStripSize","stripT","tableDeltaT","firstS","deltaT","deltaFirstS","tableFirstS","currentS","currentT","symbolIDTable","applyRefinement","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","patternBitmap","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","decodeTablesSegment","lowestValue","highestValue","reader","prefixSizeBits","rangeSizeBits","currentRangeLow","standardTablesCache","currentByte","getCustomHuffmanTable","customTables","getTextRegionHuffmanTables","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","customIndex","getSymbolDictionaryHuffmanTables","tableAggregateInstances","endOfBlock","lookForEOFLimit","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","referredSymbols","onImmediateTextRegion","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","currentCode","currentTemp","numBits","parseChunks","695","_jbig","jbig2Image","globalsStream","globals","696","JpegError","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","offsetZ","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuRow","mcusPerLine","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","progressive","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSqrt1d2","dctSin6","dctCos6","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","697","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","698","699","seed","SEED","MASK_HIGH","MASK_LOW","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","700","xstep","ystep","paintType","tilingType","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","makeCssRgb","background","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","buildFigureFromPatch","figure","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","figureCoords","figureColors","cl","cr","c2","c3","bRow","getB","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","packData","coordsPacked","xy","colorsPacked","decodeContext","bitsPerCoordinate","bitsPerFlag","patchMesh","yi","buildB","lut","t_","701","NetworkPdfManager","LocalPdfManager","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","ensureDoc","prop","pdfDocument","ensureXRef","ensureCatalog","requestLoadedStream","sendProgressiveData","updatePassword","terminate","ensureHelper","702","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","toLowerCase","703","HINTING_ENABLED","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","decrypted","decryptAscii","digit1","digit2","isSpecial","encrypted","isBinary","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","readNumberArray","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","704","_interopRequireDefault","__esModule","default","isMessagePort","maybePort","postMessage","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","terminated","_capability","finished","finish","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","cancel","readers","headersReady","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","startWorkerTask","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","parseFailure","getPdfManager","pdfManagerCapability","pdfStream","cachedChunks","fullRequest","cancelXHRs","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","doc","pdfInfo","onFailure","pdfManagerReady","MissingPDFException","UnexpectedResponseException","UnknownErrorException","disableCreateObjectURL","newPdfManager","apiVersion","workerVersion","workerHandlerName","MessageHandler","page","rotatePromise","refPromise","userUnitPromise","viewPromise","results","pageNum","wrappedException","minimumStackMessage","onPull","onCancel","close","waitOn","destroy","initializeFromPort","window","716","pdfjsCoreWorker"],"mappings":"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A,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eA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EAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GAC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KAEAgwB,EAAAhwB,EAAA,IAEAiwB,EAAA,GACAH,GAAA,koIACAD,EAAA,WAkNA,QAAAA,GAAAK,EAAAC,EAAAC,GACA9zB,KAAA2E,MAAAivB,EAAAr0B,WACAS,KAAA6zB,aACA7zB,KAAA8zB,wBApNA,GAAAC,IAAA,MACAC,GAAA,QACArlB,IAAA,EACAslB,eAAA,EACAC,MAAA,GACG,MACHF,GAAA,QACArlB,IAAA,EACAslB,eAAA,EACAC,MAAA,IAEAF,GAAA,UACArlB,IAAA,EACAslB,eAAA,IAEAD,GAAA,UACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,UACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,UACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,YACArlB,IAAA,EACAwlB,YAAA,GACG,MACHH,GAAA,WACArlB,IAAA,EACAylB,YAAA,IAEAJ,GAAA,SACArlB,IAAA,EACAylB,YAAA,GACG,WACHJ,GAAA,UACArlB,IAAA,EACAslB,eAAA,GACG,gBACHD,GAAA,UACArlB,IAAA,EACAslB,eAAA,EACAC,MAAA,IAEAF,GAAA,WACArlB,IAAA,EACAslB,eAAA,IAEAD,GAAA,WACArlB,IAAA,EACAslB,eAAA,IAEAD,GAAA,UACArlB,IAAA,EACAslB,eAAA,IAEAD,GAAA,UACArlB,IAAA,EACAslB,eAAA,IAEAD,GAAA,UACArlB,IAAA,EACAslB,eAAA,EACAC,MAAA,IAEAF,GAAA,aACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,aACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,YACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,YACArlB,IAAA,EACAwlB,YAAA,GACG,MACHH,GAAA,YACArlB,IAAA,EACAylB,YAAA,IAEAJ,GAAA,YACArlB,IAAA,EACAwlB,YAAA,IAEAH,GAAA,YACArlB,IAAA,EACAwlB,YAAA,IAEAE,GAAA,gBACAL,GAAA,MACArlB,IAAA,EACA2lB,YAAA,IAEAN,GAAA,KACArlB,IAAA,EACA2lB,YAAA,IAEAN,GAAA,MACArlB,IAAA,EA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AAid,EAAA2hB,MACA3hB,EAAArW,KAAAzP,KAAAgoC,IAAAn/B,GACA,MACA,WACAjP,EAAAksB,EAAA2hB,MACA5+B,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAA5G,EAAAjP,EACA,MACA,WACAA,EAAAksB,EAAA2hB,MACA5+B,EAAAid,EAAA2hB,OACA,EAAA5xC,EAAAoyC,QAAAp/B,KAAA,EAAAhT,EAAAoyC,QAAAruC,GACAksB,EAAArW,KAAA5G,GAAAjP,GAEAksB,EAAArW,KAAA5G,EAAAjP,EAEA,MACA,YACAiP,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAAzP,KAAAkoC,KAAAr/B,GACA,MACA,gBACAjP,EAAAksB,EAAA2hB,MACA5+B,EAAAid,EAAA2hB,MACA5+B,EAAA,EACAid,EAAArW,KAAA5G,GAAAjP,GAEAksB,EAAArW,KAAA5G,GAAAjP,EAEA,MACA,eACAiP,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAAzP,KAAAiyB,KAAAppB,GACA,MACA,YACAA,EAAAid,EAAA2hB,MACA3hB,EAAA4hB,KAAA7+B,EACA,MACA,WACAA,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAAzP,KAAAmoC,IAAAt/B,GACA,MACA,WACAA,EAAA,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAA5G,EACA,MACA,WACA,KACA,WACAjP,EAAAksB,EAAA2hB,MACA5+B,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAA5G,EAAAjP,EACA,MACA,WACAksB,EAAA4hB,KAAA,EACA,MACA,UACA9tC,EAAAksB,EAAA2hB,MACA5+B,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAA5G,IAAAjP,EACA,MACA,YACAksB,EAAA6hB,KAAA,IACA,MACA,WACA/tC,EAAAksB,EAAA2hB,MACA5+B,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAAzP,KAAA6H,IAAAgB,EAAAjP,GACA,MACA,aACAksB,EAAArW,MAAA,EACA,MACA,aACA5G,EAAAid,EAAA2hB,MACA3hB,EAAArW,KAAAzP,KAAAsB,MAAAuH,GACA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IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,KACAp8B,IAAA,OAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA,QAEAo8B,MAAA,MACAp8B,IAAA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","file":"static/js/1.96ea1852.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 20:\n/***/ function(module, exports) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar EOF = {};\n\tvar Name = function NameClosure() {\n\t  function Name(name) {\n\t    this.name = name;\n\t  }\n\t  Name.prototype = {};\n\t  var nameCache = Object.create(null);\n\t  Name.get = function Name_get(name) {\n\t    var nameValue = nameCache[name];\n\t    return nameValue ? nameValue : nameCache[name] = new Name(name);\n\t  };\n\t  return Name;\n\t}();\n\tvar Cmd = function CmdClosure() {\n\t  function Cmd(cmd) {\n\t    this.cmd = cmd;\n\t  }\n\t  Cmd.prototype = {};\n\t  var cmdCache = Object.create(null);\n\t  Cmd.get = function Cmd_get(cmd) {\n\t    var cmdValue = cmdCache[cmd];\n\t    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n\t  };\n\t  return Cmd;\n\t}();\n\tvar Dict = function DictClosure() {\n\t  var nonSerializable = function nonSerializableClosure() {\n\t    return nonSerializable;\n\t  };\n\t  function Dict(xref) {\n\t    this._map = Object.create(null);\n\t    this.xref = xref;\n\t    this.objId = null;\n\t    this.suppressEncryption = false;\n\t    this.__nonSerializable__ = nonSerializable;\n\t  }\n\t  Dict.prototype = {\n\t    assignXref: function Dict_assignXref(newXref) {\n\t      this.xref = newXref;\n\t    },\n\t    get: function Dict_get(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n\t        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n\t        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      value = this._map[key3] || null;\n\t      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t    },\n\t    getAsync: function Dict_getAsync(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n\t        if (xref) {\n\t          return xref.fetchIfRefAsync(value, suppressEncryption);\n\t        }\n\t        return Promise.resolve(value);\n\t      }\n\t      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n\t        if (xref) {\n\t          return xref.fetchIfRefAsync(value, suppressEncryption);\n\t        }\n\t        return Promise.resolve(value);\n\t      }\n\t      value = this._map[key3] || null;\n\t      if (xref) {\n\t        return xref.fetchIfRefAsync(value, suppressEncryption);\n\t      }\n\t      return Promise.resolve(value);\n\t    },\n\t    getArray: function Dict_getArray(key1, key2, key3) {\n\t      var value = this.get(key1, key2, key3);\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (!Array.isArray(value) || !xref) {\n\t        return value;\n\t      }\n\t      value = value.slice();\n\t      for (var i = 0, ii = value.length; i < ii; i++) {\n\t        if (!isRef(value[i])) {\n\t          continue;\n\t        }\n\t        value[i] = xref.fetch(value[i], suppressEncryption);\n\t      }\n\t      return value;\n\t    },\n\t    getRaw: function Dict_getRaw(key) {\n\t      return this._map[key];\n\t    },\n\t    getKeys: function Dict_getKeys() {\n\t      return Object.keys(this._map);\n\t    },\n\t    set: function Dict_set(key, value) {\n\t      this._map[key] = value;\n\t    },\n\t    has: function Dict_has(key) {\n\t      return key in this._map;\n\t    },\n\t    forEach: function Dict_forEach(callback) {\n\t      for (var key in this._map) {\n\t        callback(key, this.get(key));\n\t      }\n\t    }\n\t  };\n\t  Dict.empty = new Dict(null);\n\t  Dict.merge = function (xref, dictArray) {\n\t    var mergedDict = new Dict(xref);\n\t    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n\t      var dict = dictArray[i];\n\t      if (!isDict(dict)) {\n\t        continue;\n\t      }\n\t      for (var keyName in dict._map) {\n\t        if (mergedDict._map[keyName] !== undefined) {\n\t          continue;\n\t        }\n\t        mergedDict._map[keyName] = dict._map[keyName];\n\t      }\n\t    }\n\t    return mergedDict;\n\t  };\n\t  return Dict;\n\t}();\n\tvar Ref = function RefClosure() {\n\t  function Ref(num, gen) {\n\t    this.num = num;\n\t    this.gen = gen;\n\t  }\n\t  Ref.prototype = {\n\t    toString: function Ref_toString() {\n\t      var str = this.num + 'R';\n\t      if (this.gen !== 0) {\n\t        str += this.gen;\n\t      }\n\t      return str;\n\t    }\n\t  };\n\t  return Ref;\n\t}();\n\tvar RefSet = function RefSetClosure() {\n\t  function RefSet() {\n\t    this.dict = Object.create(null);\n\t  }\n\t  RefSet.prototype = {\n\t    has: function RefSet_has(ref) {\n\t      return ref.toString() in this.dict;\n\t    },\n\t    put: function RefSet_put(ref) {\n\t      this.dict[ref.toString()] = true;\n\t    },\n\t    remove: function RefSet_remove(ref) {\n\t      delete this.dict[ref.toString()];\n\t    }\n\t  };\n\t  return RefSet;\n\t}();\n\tvar RefSetCache = function RefSetCacheClosure() {\n\t  function RefSetCache() {\n\t    this.dict = Object.create(null);\n\t  }\n\t  RefSetCache.prototype = {\n\t    get: function RefSetCache_get(ref) {\n\t      return this.dict[ref.toString()];\n\t    },\n\t    has: function RefSetCache_has(ref) {\n\t      return ref.toString() in this.dict;\n\t    },\n\t    put: function RefSetCache_put(ref, obj) {\n\t      this.dict[ref.toString()] = obj;\n\t    },\n\t    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n\t      this.dict[ref.toString()] = this.get(aliasRef);\n\t    },\n\t    forEach: function RefSetCache_forEach(fn, thisArg) {\n\t      for (var i in this.dict) {\n\t        fn.call(thisArg, this.dict[i]);\n\t      }\n\t    },\n\t    clear: function RefSetCache_clear() {\n\t      this.dict = Object.create(null);\n\t    }\n\t  };\n\t  return RefSetCache;\n\t}();\n\tfunction isEOF(v) {\n\t  return v === EOF;\n\t}\n\tfunction isName(v, name) {\n\t  return v instanceof Name && (name === undefined || v.name === name);\n\t}\n\tfunction isCmd(v, cmd) {\n\t  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n\t}\n\tfunction isDict(v, type) {\n\t  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n\t}\n\tfunction isRef(v) {\n\t  return v instanceof Ref;\n\t}\n\tfunction isRefsEqual(v1, v2) {\n\t  return v1.num === v2.num && v1.gen === v2.gen;\n\t}\n\tfunction isStream(v) {\n\t  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n\t}\n\texports.EOF = EOF;\n\texports.Cmd = Cmd;\n\texports.Dict = Dict;\n\texports.Name = Name;\n\texports.Ref = Ref;\n\texports.RefSet = RefSet;\n\texports.RefSetCache = RefSetCache;\n\texports.isEOF = isEOF;\n\texports.isCmd = isCmd;\n\texports.isDict = isDict;\n\texports.isName = isName;\n\texports.isRef = isRef;\n\texports.isRefsEqual = isRefsEqual;\n\texports.isStream = isStream;\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar Stream = function StreamClosure() {\n\t  function Stream(arrayBuffer, start, length, dict) {\n\t    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n\t    this.start = start || 0;\n\t    this.pos = this.start;\n\t    this.end = start + length || this.bytes.length;\n\t    this.dict = dict;\n\t  }\n\t  Stream.prototype = {\n\t    get length() {\n\t      return this.end - this.start;\n\t    },\n\t    get isEmpty() {\n\t      return this.length === 0;\n\t    },\n\t    getByte: function Stream_getByte() {\n\t      if (this.pos >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.bytes[this.pos++];\n\t    },\n\t    getUint16: function Stream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function Stream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function Stream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t        return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t        end = strEnd;\n\t      }\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t    },\n\t    peekByte: function Stream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function Stream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    skip: function Stream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function Stream_reset() {\n\t      this.pos = this.start;\n\t    },\n\t    moveStart: function Stream_moveStart() {\n\t      this.start = this.pos;\n\t    },\n\t    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n\t      return new Stream(this.bytes.buffer, start, length, dict);\n\t    }\n\t  };\n\t  return Stream;\n\t}();\n\tvar StringStream = function StringStreamClosure() {\n\t  function StringStream(str) {\n\t    var bytes = (0, _util.stringToBytes)(str);\n\t    Stream.call(this, bytes);\n\t  }\n\t  StringStream.prototype = Stream.prototype;\n\t  return StringStream;\n\t}();\n\tvar DecodeStream = function DecodeStreamClosure() {\n\t  var emptyBuffer = new Uint8Array(0);\n\t  function DecodeStream(maybeMinBufferLength) {\n\t    this.pos = 0;\n\t    this.bufferLength = 0;\n\t    this.eof = false;\n\t    this.buffer = emptyBuffer;\n\t    this.minBufferLength = 512;\n\t    if (maybeMinBufferLength) {\n\t      while (this.minBufferLength < maybeMinBufferLength) {\n\t        this.minBufferLength *= 2;\n\t      }\n\t    }\n\t  }\n\t  DecodeStream.prototype = {\n\t    get isEmpty() {\n\t      while (!this.eof && this.bufferLength === 0) {\n\t        this.readBlock();\n\t      }\n\t      return this.bufferLength === 0;\n\t    },\n\t    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n\t      var buffer = this.buffer;\n\t      if (requested <= buffer.byteLength) {\n\t        return buffer;\n\t      }\n\t      var size = this.minBufferLength;\n\t      while (size < requested) {\n\t        size *= 2;\n\t      }\n\t      var buffer2 = new Uint8Array(size);\n\t      buffer2.set(buffer);\n\t      return this.buffer = buffer2;\n\t    },\n\t    getByte: function DecodeStream_getByte() {\n\t      var pos = this.pos;\n\t      while (this.bufferLength <= pos) {\n\t        if (this.eof) {\n\t          return -1;\n\t        }\n\t        this.readBlock();\n\t      }\n\t      return this.buffer[this.pos++];\n\t    },\n\t    getUint16: function DecodeStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function DecodeStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function DecodeStream_getBytes(length) {\n\t      var end,\n\t          pos = this.pos;\n\t      if (length) {\n\t        this.ensureBuffer(pos + length);\n\t        end = pos + length;\n\t        while (!this.eof && this.bufferLength < end) {\n\t          this.readBlock();\n\t        }\n\t        var bufEnd = this.bufferLength;\n\t        if (end > bufEnd) {\n\t          end = bufEnd;\n\t        }\n\t      } else {\n\t        while (!this.eof) {\n\t          this.readBlock();\n\t        }\n\t        end = this.bufferLength;\n\t      }\n\t      this.pos = end;\n\t      return this.buffer.subarray(pos, end);\n\t    },\n\t    peekByte: function DecodeStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function DecodeStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n\t      var end = start + length;\n\t      while (this.bufferLength <= end && !this.eof) {\n\t        this.readBlock();\n\t      }\n\t      return new Stream(this.buffer, start, length, dict);\n\t    },\n\t    skip: function DecodeStream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function DecodeStream_reset() {\n\t      this.pos = 0;\n\t    },\n\t    getBaseStreams: function DecodeStream_getBaseStreams() {\n\t      if (this.str && this.str.getBaseStreams) {\n\t        return this.str.getBaseStreams();\n\t      }\n\t      return [];\n\t    }\n\t  };\n\t  return DecodeStream;\n\t}();\n\tvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n\t  function StreamsSequenceStream(streams) {\n\t    this.streams = streams;\n\t    DecodeStream.call(this, null);\n\t  }\n\t  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\t  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n\t    var streams = this.streams;\n\t    if (streams.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var stream = streams.shift();\n\t    var chunk = stream.getBytes();\n\t    var bufferLength = this.bufferLength;\n\t    var newLength = bufferLength + chunk.length;\n\t    var buffer = this.ensureBuffer(newLength);\n\t    buffer.set(chunk, bufferLength);\n\t    this.bufferLength = newLength;\n\t  };\n\t  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n\t    var baseStreams = [];\n\t    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n\t      var stream = this.streams[i];\n\t      if (stream.getBaseStreams) {\n\t        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n\t      }\n\t    }\n\t    return baseStreams;\n\t  };\n\t  return StreamsSequenceStream;\n\t}();\n\tvar FlateStream = function FlateStreamClosure() {\n\t  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\t  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n\t  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n\t  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n\t  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n\t  function FlateStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    var cmf = str.getByte();\n\t    var flg = str.getByte();\n\t    if (cmf === -1 || flg === -1) {\n\t      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if ((cmf & 0x0f) !== 0x08) {\n\t      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if (((cmf << 8) + flg) % 31 !== 0) {\n\t      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if (flg & 0x20) {\n\t      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    this.codeSize = 0;\n\t    this.codeBuf = 0;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  FlateStream.prototype = Object.create(DecodeStream.prototype);\n\t  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n\t    var str = this.str;\n\t    var codeSize = this.codeSize;\n\t    var codeBuf = this.codeBuf;\n\t    var b;\n\t    while (codeSize < bits) {\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad encoding in flate stream');\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t    }\n\t    b = codeBuf & (1 << bits) - 1;\n\t    this.codeBuf = codeBuf >> bits;\n\t    this.codeSize = codeSize -= bits;\n\t    return b;\n\t  };\n\t  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n\t    var str = this.str;\n\t    var codes = table[0];\n\t    var maxLen = table[1];\n\t    var codeSize = this.codeSize;\n\t    var codeBuf = this.codeBuf;\n\t    var b;\n\t    while (codeSize < maxLen) {\n\t      if ((b = str.getByte()) === -1) {\n\t        break;\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t    }\n\t    var code = codes[codeBuf & (1 << maxLen) - 1];\n\t    var codeLen = code >> 16;\n\t    var codeVal = code & 0xffff;\n\t    if (codeLen < 1 || codeSize < codeLen) {\n\t      throw new _util.FormatError('Bad encoding in flate stream');\n\t    }\n\t    this.codeBuf = codeBuf >> codeLen;\n\t    this.codeSize = codeSize - codeLen;\n\t    return codeVal;\n\t  };\n\t  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n\t    var n = lengths.length;\n\t    var maxLen = 0;\n\t    var i;\n\t    for (i = 0; i < n; ++i) {\n\t      if (lengths[i] > maxLen) {\n\t        maxLen = lengths[i];\n\t      }\n\t    }\n\t    var size = 1 << maxLen;\n\t    var codes = new Int32Array(size);\n\t    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n\t      for (var val = 0; val < n; ++val) {\n\t        if (lengths[val] === len) {\n\t          var code2 = 0;\n\t          var t = code;\n\t          for (i = 0; i < len; ++i) {\n\t            code2 = code2 << 1 | t & 1;\n\t            t >>= 1;\n\t          }\n\t          for (i = code2; i < size; i += skip) {\n\t            codes[i] = len << 16 | val;\n\t          }\n\t          ++code;\n\t        }\n\t      }\n\t    }\n\t    return [codes, maxLen];\n\t  };\n\t  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n\t    var buffer, len;\n\t    var str = this.str;\n\t    var hdr = this.getBits(3);\n\t    if (hdr & 1) {\n\t      this.eof = true;\n\t    }\n\t    hdr >>= 1;\n\t    if (hdr === 0) {\n\t      var b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      var blockLen = b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      blockLen |= b << 8;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      var check = b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      check |= b << 8;\n\t      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n\t        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n\t      }\n\t      this.codeBuf = 0;\n\t      this.codeSize = 0;\n\t      var bufferLength = this.bufferLength;\n\t      buffer = this.ensureBuffer(bufferLength + blockLen);\n\t      var end = bufferLength + blockLen;\n\t      this.bufferLength = end;\n\t      if (blockLen === 0) {\n\t        if (str.peekByte() === -1) {\n\t          this.eof = true;\n\t        }\n\t      } else {\n\t        for (var n = bufferLength; n < end; ++n) {\n\t          if ((b = str.getByte()) === -1) {\n\t            this.eof = true;\n\t            break;\n\t          }\n\t          buffer[n] = b;\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    var litCodeTable;\n\t    var distCodeTable;\n\t    if (hdr === 1) {\n\t      litCodeTable = fixedLitCodeTab;\n\t      distCodeTable = fixedDistCodeTab;\n\t    } else if (hdr === 2) {\n\t      var numLitCodes = this.getBits(5) + 257;\n\t      var numDistCodes = this.getBits(5) + 1;\n\t      var numCodeLenCodes = this.getBits(4) + 4;\n\t      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n\t      var i;\n\t      for (i = 0; i < numCodeLenCodes; ++i) {\n\t        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n\t      }\n\t      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\t      len = 0;\n\t      i = 0;\n\t      var codes = numLitCodes + numDistCodes;\n\t      var codeLengths = new Uint8Array(codes);\n\t      var bitsLength, bitsOffset, what;\n\t      while (i < codes) {\n\t        var code = this.getCode(codeLenCodeTab);\n\t        if (code === 16) {\n\t          bitsLength = 2;\n\t          bitsOffset = 3;\n\t          what = len;\n\t        } else if (code === 17) {\n\t          bitsLength = 3;\n\t          bitsOffset = 3;\n\t          what = len = 0;\n\t        } else if (code === 18) {\n\t          bitsLength = 7;\n\t          bitsOffset = 11;\n\t          what = len = 0;\n\t        } else {\n\t          codeLengths[i++] = len = code;\n\t          continue;\n\t        }\n\t        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n\t        while (repeatLength-- > 0) {\n\t          codeLengths[i++] = what;\n\t        }\n\t      }\n\t      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n\t      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n\t    } else {\n\t      throw new _util.FormatError('Unknown block type in flate stream');\n\t    }\n\t    buffer = this.buffer;\n\t    var limit = buffer ? buffer.length : 0;\n\t    var pos = this.bufferLength;\n\t    while (true) {\n\t      var code1 = this.getCode(litCodeTable);\n\t      if (code1 < 256) {\n\t        if (pos + 1 >= limit) {\n\t          buffer = this.ensureBuffer(pos + 1);\n\t          limit = buffer.length;\n\t        }\n\t        buffer[pos++] = code1;\n\t        continue;\n\t      }\n\t      if (code1 === 256) {\n\t        this.bufferLength = pos;\n\t        return;\n\t      }\n\t      code1 -= 257;\n\t      code1 = lengthDecode[code1];\n\t      var code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t        code2 = this.getBits(code2);\n\t      }\n\t      len = (code1 & 0xffff) + code2;\n\t      code1 = this.getCode(distCodeTable);\n\t      code1 = distDecode[code1];\n\t      code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t        code2 = this.getBits(code2);\n\t      }\n\t      var dist = (code1 & 0xffff) + code2;\n\t      if (pos + len >= limit) {\n\t        buffer = this.ensureBuffer(pos + len);\n\t        limit = buffer.length;\n\t      }\n\t      for (var k = 0; k < len; ++k, ++pos) {\n\t        buffer[pos] = buffer[pos - dist];\n\t      }\n\t    }\n\t  };\n\t  return FlateStream;\n\t}();\n\tvar PredictorStream = function PredictorStreamClosure() {\n\t  function PredictorStream(str, maybeLength, params) {\n\t    if (!(0, _primitives.isDict)(params)) {\n\t      return str;\n\t    }\n\t    var predictor = this.predictor = params.get('Predictor') || 1;\n\t    if (predictor <= 1) {\n\t      return str;\n\t    }\n\t    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n\t      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n\t    }\n\t    if (predictor === 2) {\n\t      this.readBlock = this.readBlockTiff;\n\t    } else {\n\t      this.readBlock = this.readBlockPng;\n\t    }\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    var colors = this.colors = params.get('Colors') || 1;\n\t    var bits = this.bits = params.get('BitsPerComponent') || 8;\n\t    var columns = this.columns = params.get('Columns') || 1;\n\t    this.pixBytes = colors * bits + 7 >> 3;\n\t    this.rowBytes = columns * colors * bits + 7 >> 3;\n\t    DecodeStream.call(this, maybeLength);\n\t    return this;\n\t  }\n\t  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\t  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n\t    var rowBytes = this.rowBytes;\n\t    var bufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t    var bits = this.bits;\n\t    var colors = this.colors;\n\t    var rawBytes = this.str.getBytes(rowBytes);\n\t    this.eof = !rawBytes.length;\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var inbuf = 0,\n\t        outbuf = 0;\n\t    var inbits = 0,\n\t        outbits = 0;\n\t    var pos = bufferLength;\n\t    var i;\n\t    if (bits === 1 && colors === 1) {\n\t      for (i = 0; i < rowBytes; ++i) {\n\t        var c = rawBytes[i] ^ inbuf;\n\t        c ^= c >> 1;\n\t        c ^= c >> 2;\n\t        c ^= c >> 4;\n\t        inbuf = (c & 1) << 7;\n\t        buffer[pos++] = c;\n\t      }\n\t    } else if (bits === 8) {\n\t      for (i = 0; i < colors; ++i) {\n\t        buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n\t        pos++;\n\t      }\n\t    } else if (bits === 16) {\n\t      var bytesPerPixel = colors * 2;\n\t      for (i = 0; i < bytesPerPixel; ++i) {\n\t        buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; i += 2) {\n\t        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n\t        buffer[pos++] = sum >> 8 & 0xFF;\n\t        buffer[pos++] = sum & 0xFF;\n\t      }\n\t    } else {\n\t      var compArray = new Uint8Array(colors + 1);\n\t      var bitMask = (1 << bits) - 1;\n\t      var j = 0,\n\t          k = bufferLength;\n\t      var columns = this.columns;\n\t      for (i = 0; i < columns; ++i) {\n\t        for (var kk = 0; kk < colors; ++kk) {\n\t          if (inbits < bits) {\n\t            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n\t            inbits += 8;\n\t          }\n\t          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n\t          inbits -= bits;\n\t          outbuf = outbuf << bits | compArray[kk];\n\t          outbits += bits;\n\t          if (outbits >= 8) {\n\t            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n\t            outbits -= 8;\n\t          }\n\t        }\n\t      }\n\t      if (outbits > 0) {\n\t        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n\t      }\n\t    }\n\t    this.bufferLength += rowBytes;\n\t  };\n\t  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n\t    var rowBytes = this.rowBytes;\n\t    var pixBytes = this.pixBytes;\n\t    var predictor = this.str.getByte();\n\t    var rawBytes = this.str.getBytes(rowBytes);\n\t    this.eof = !rawBytes.length;\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var bufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n\t    if (prevRow.length === 0) {\n\t      prevRow = new Uint8Array(rowBytes);\n\t    }\n\t    var i,\n\t        j = bufferLength,\n\t        up,\n\t        c;\n\t    switch (predictor) {\n\t      case 0:\n\t        for (i = 0; i < rowBytes; ++i) {\n\t          buffer[j++] = rawBytes[i];\n\t        }\n\t        break;\n\t      case 1:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          buffer[j++] = rawBytes[i];\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n\t          j++;\n\t        }\n\t        break;\n\t      case 2:\n\t        for (i = 0; i < rowBytes; ++i) {\n\t          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n\t        }\n\t        break;\n\t      case 3:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n\t          j++;\n\t        }\n\t        break;\n\t      case 4:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          up = prevRow[i];\n\t          c = rawBytes[i];\n\t          buffer[j++] = up + c;\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          up = prevRow[i];\n\t          var upLeft = prevRow[i - pixBytes];\n\t          var left = buffer[j - pixBytes];\n\t          var p = left + up - upLeft;\n\t          var pa = p - left;\n\t          if (pa < 0) {\n\t            pa = -pa;\n\t          }\n\t          var pb = p - up;\n\t          if (pb < 0) {\n\t            pb = -pb;\n\t          }\n\t          var pc = p - upLeft;\n\t          if (pc < 0) {\n\t            pc = -pc;\n\t          }\n\t          c = rawBytes[i];\n\t          if (pa <= pb && pa <= pc) {\n\t            buffer[j++] = left + c;\n\t          } else if (pb <= pc) {\n\t            buffer[j++] = up + c;\n\t          } else {\n\t            buffer[j++] = upLeft + c;\n\t          }\n\t        }\n\t        break;\n\t      default:\n\t        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n\t    }\n\t    this.bufferLength += rowBytes;\n\t  };\n\t  return PredictorStream;\n\t}();\n\tvar DecryptStream = function DecryptStreamClosure() {\n\t  function DecryptStream(str, maybeLength, decrypt) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.decrypt = decrypt;\n\t    this.nextChunk = null;\n\t    this.initialized = false;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  var chunkSize = 512;\n\t  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\t  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n\t    var chunk;\n\t    if (this.initialized) {\n\t      chunk = this.nextChunk;\n\t    } else {\n\t      chunk = this.str.getBytes(chunkSize);\n\t      this.initialized = true;\n\t    }\n\t    if (!chunk || chunk.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    this.nextChunk = this.str.getBytes(chunkSize);\n\t    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n\t    var decrypt = this.decrypt;\n\t    chunk = decrypt(chunk, !hasMoreData);\n\t    var bufferLength = this.bufferLength;\n\t    var i,\n\t        n = chunk.length;\n\t    var buffer = this.ensureBuffer(bufferLength + n);\n\t    for (i = 0; i < n; i++) {\n\t      buffer[bufferLength++] = chunk[i];\n\t    }\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return DecryptStream;\n\t}();\n\tvar Ascii85Stream = function Ascii85StreamClosure() {\n\t  function Ascii85Stream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.input = new Uint8Array(5);\n\t    if (maybeLength) {\n\t      maybeLength = 0.8 * maybeLength;\n\t    }\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\t  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n\t    var TILDA_CHAR = 0x7E;\n\t    var Z_LOWER_CHAR = 0x7A;\n\t    var EOF = -1;\n\t    var str = this.str;\n\t    var c = str.getByte();\n\t    while ((0, _util.isSpace)(c)) {\n\t      c = str.getByte();\n\t    }\n\t    if (c === EOF || c === TILDA_CHAR) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var bufferLength = this.bufferLength,\n\t        buffer;\n\t    var i;\n\t    if (c === Z_LOWER_CHAR) {\n\t      buffer = this.ensureBuffer(bufferLength + 4);\n\t      for (i = 0; i < 4; ++i) {\n\t        buffer[bufferLength + i] = 0;\n\t      }\n\t      this.bufferLength += 4;\n\t    } else {\n\t      var input = this.input;\n\t      input[0] = c;\n\t      for (i = 1; i < 5; ++i) {\n\t        c = str.getByte();\n\t        while ((0, _util.isSpace)(c)) {\n\t          c = str.getByte();\n\t        }\n\t        input[i] = c;\n\t        if (c === EOF || c === TILDA_CHAR) {\n\t          break;\n\t        }\n\t      }\n\t      buffer = this.ensureBuffer(bufferLength + i - 1);\n\t      this.bufferLength += i - 1;\n\t      if (i < 5) {\n\t        for (; i < 5; ++i) {\n\t          input[i] = 0x21 + 84;\n\t        }\n\t        this.eof = true;\n\t      }\n\t      var t = 0;\n\t      for (i = 0; i < 5; ++i) {\n\t        t = t * 85 + (input[i] - 0x21);\n\t      }\n\t      for (i = 3; i >= 0; --i) {\n\t        buffer[bufferLength + i] = t & 0xFF;\n\t        t >>= 8;\n\t      }\n\t    }\n\t  };\n\t  return Ascii85Stream;\n\t}();\n\tvar AsciiHexStream = function AsciiHexStreamClosure() {\n\t  function AsciiHexStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.firstDigit = -1;\n\t    if (maybeLength) {\n\t      maybeLength = 0.5 * maybeLength;\n\t    }\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\t  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n\t    var UPSTREAM_BLOCK_SIZE = 8000;\n\t    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n\t    if (!bytes.length) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var maxDecodeLength = bytes.length + 1 >> 1;\n\t    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n\t    var bufferLength = this.bufferLength;\n\t    var firstDigit = this.firstDigit;\n\t    for (var i = 0, ii = bytes.length; i < ii; i++) {\n\t      var ch = bytes[i],\n\t          digit;\n\t      if (ch >= 0x30 && ch <= 0x39) {\n\t        digit = ch & 0x0F;\n\t      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t        digit = (ch & 0x0F) + 9;\n\t      } else if (ch === 0x3E) {\n\t        this.eof = true;\n\t        break;\n\t      } else {\n\t        continue;\n\t      }\n\t      if (firstDigit < 0) {\n\t        firstDigit = digit;\n\t      } else {\n\t        buffer[bufferLength++] = firstDigit << 4 | digit;\n\t        firstDigit = -1;\n\t      }\n\t    }\n\t    if (firstDigit >= 0 && this.eof) {\n\t      buffer[bufferLength++] = firstDigit << 4;\n\t      firstDigit = -1;\n\t    }\n\t    this.firstDigit = firstDigit;\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return AsciiHexStream;\n\t}();\n\tvar RunLengthStream = function RunLengthStreamClosure() {\n\t  function RunLengthStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\t  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n\t    var repeatHeader = this.str.getBytes(2);\n\t    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var buffer;\n\t    var bufferLength = this.bufferLength;\n\t    var n = repeatHeader[0];\n\t    if (n < 128) {\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      buffer[bufferLength++] = repeatHeader[1];\n\t      if (n > 0) {\n\t        var source = this.str.getBytes(n);\n\t        buffer.set(source, bufferLength);\n\t        bufferLength += n;\n\t      }\n\t    } else {\n\t      n = 257 - n;\n\t      var b = repeatHeader[1];\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      for (var i = 0; i < n; i++) {\n\t        buffer[bufferLength++] = b;\n\t      }\n\t    }\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return RunLengthStream;\n\t}();\n\tvar LZWStream = function LZWStreamClosure() {\n\t  function LZWStream(str, maybeLength, earlyChange) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.cachedData = 0;\n\t    this.bitsCached = 0;\n\t    var maxLzwDictionarySize = 4096;\n\t    var lzwState = {\n\t      earlyChange: earlyChange,\n\t      codeLength: 9,\n\t      nextCode: 258,\n\t      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n\t      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n\t      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n\t      currentSequence: new Uint8Array(maxLzwDictionarySize),\n\t      currentSequenceLength: 0\n\t    };\n\t    for (var i = 0; i < 256; ++i) {\n\t      lzwState.dictionaryValues[i] = i;\n\t      lzwState.dictionaryLengths[i] = 1;\n\t    }\n\t    this.lzwState = lzwState;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  LZWStream.prototype = Object.create(DecodeStream.prototype);\n\t  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n\t    var bitsCached = this.bitsCached;\n\t    var cachedData = this.cachedData;\n\t    while (bitsCached < n) {\n\t      var c = this.str.getByte();\n\t      if (c === -1) {\n\t        this.eof = true;\n\t        return null;\n\t      }\n\t      cachedData = cachedData << 8 | c;\n\t      bitsCached += 8;\n\t    }\n\t    this.bitsCached = bitsCached -= n;\n\t    this.cachedData = cachedData;\n\t    this.lastCode = null;\n\t    return cachedData >>> bitsCached & (1 << n) - 1;\n\t  };\n\t  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n\t    var blockSize = 512;\n\t    var estimatedDecodedSize = blockSize * 2,\n\t        decodedSizeDelta = blockSize;\n\t    var i, j, q;\n\t    var lzwState = this.lzwState;\n\t    if (!lzwState) {\n\t      return;\n\t    }\n\t    var earlyChange = lzwState.earlyChange;\n\t    var nextCode = lzwState.nextCode;\n\t    var dictionaryValues = lzwState.dictionaryValues;\n\t    var dictionaryLengths = lzwState.dictionaryLengths;\n\t    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n\t    var codeLength = lzwState.codeLength;\n\t    var prevCode = lzwState.prevCode;\n\t    var currentSequence = lzwState.currentSequence;\n\t    var currentSequenceLength = lzwState.currentSequenceLength;\n\t    var decodedLength = 0;\n\t    var currentBufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t    for (i = 0; i < blockSize; i++) {\n\t      var code = this.readBits(codeLength);\n\t      var hasPrev = currentSequenceLength > 0;\n\t      if (code < 256) {\n\t        currentSequence[0] = code;\n\t        currentSequenceLength = 1;\n\t      } else if (code >= 258) {\n\t        if (code < nextCode) {\n\t          currentSequenceLength = dictionaryLengths[code];\n\t          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n\t            currentSequence[j] = dictionaryValues[q];\n\t            q = dictionaryPrevCodes[q];\n\t          }\n\t        } else {\n\t          currentSequence[currentSequenceLength++] = currentSequence[0];\n\t        }\n\t      } else if (code === 256) {\n\t        codeLength = 9;\n\t        nextCode = 258;\n\t        currentSequenceLength = 0;\n\t        continue;\n\t      } else {\n\t        this.eof = true;\n\t        delete this.lzwState;\n\t        break;\n\t      }\n\t      if (hasPrev) {\n\t        dictionaryPrevCodes[nextCode] = prevCode;\n\t        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n\t        dictionaryValues[nextCode] = currentSequence[0];\n\t        nextCode++;\n\t        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n\t      }\n\t      prevCode = code;\n\t      decodedLength += currentSequenceLength;\n\t      if (estimatedDecodedSize < decodedLength) {\n\t        do {\n\t          estimatedDecodedSize += decodedSizeDelta;\n\t        } while (estimatedDecodedSize < decodedLength);\n\t        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t      }\n\t      for (j = 0; j < currentSequenceLength; j++) {\n\t        buffer[currentBufferLength++] = currentSequence[j];\n\t      }\n\t    }\n\t    lzwState.nextCode = nextCode;\n\t    lzwState.codeLength = codeLength;\n\t    lzwState.prevCode = prevCode;\n\t    lzwState.currentSequenceLength = currentSequenceLength;\n\t    this.bufferLength = currentBufferLength;\n\t  };\n\t  return LZWStream;\n\t}();\n\tvar NullStream = function NullStreamClosure() {\n\t  function NullStream() {\n\t    Stream.call(this, new Uint8Array(0));\n\t  }\n\t  NullStream.prototype = Stream.prototype;\n\t  return NullStream;\n\t}();\n\texports.Ascii85Stream = Ascii85Stream;\n\texports.AsciiHexStream = AsciiHexStream;\n\texports.DecryptStream = DecryptStream;\n\texports.DecodeStream = DecodeStream;\n\texports.FlateStream = FlateStream;\n\texports.NullStream = NullStream;\n\texports.PredictorStream = PredictorStream;\n\texports.RunLengthStream = RunLengthStream;\n\texports.Stream = Stream;\n\texports.StreamsSequenceStream = StreamsSequenceStream;\n\texports.StringStream = StringStream;\n\texports.LZWStream = LZWStream;\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ColorSpace = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar ColorSpace = function ColorSpaceClosure() {\n\t  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n\t    var COMPONENTS = 3;\n\t    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n\t    var xRatio = w1 / w2;\n\t    var yRatio = h1 / h2;\n\t    var i,\n\t        j,\n\t        py,\n\t        newIndex = 0,\n\t        oldIndex;\n\t    var xScaled = new Uint16Array(w2);\n\t    var w1Scanline = w1 * COMPONENTS;\n\t    for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n\t    }\n\t    for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t        oldIndex = py + xScaled[j];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        newIndex += alpha01;\n\t      }\n\t    }\n\t  }\n\t  function ColorSpace() {\n\t    (0, _util.unreachable)('should not call ColorSpace constructor');\n\t  }\n\t  ColorSpace.prototype = {\n\t    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n\t      var rgb = new Uint8Array(3);\n\t      this.getRgbItem(src, srcOffset, rgb, 0);\n\t      return rgb;\n\t    },\n\t    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n\t    },\n\t    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n\t    },\n\t    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n\t      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n\t    },\n\t    isPassthrough: function ColorSpace_isPassthrough(bits) {\n\t      return false;\n\t    },\n\t    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n\t      var count = originalWidth * originalHeight;\n\t      var rgbBuf = null;\n\t      var numComponentColors = 1 << bpc;\n\t      var needsResizing = originalHeight !== height || originalWidth !== width;\n\t      var i, ii;\n\t      if (this.isPassthrough(bpc)) {\n\t        rgbBuf = comps;\n\t      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n\t        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n\t        var key;\n\t        for (i = 0; i < numComponentColors; i++) {\n\t          allColors[i] = i;\n\t        }\n\t        var colorMap = new Uint8Array(numComponentColors * 3);\n\t        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n\t        var destPos, rgbPos;\n\t        if (!needsResizing) {\n\t          destPos = 0;\n\t          for (i = 0; i < count; ++i) {\n\t            key = comps[i] * 3;\n\t            dest[destPos++] = colorMap[key];\n\t            dest[destPos++] = colorMap[key + 1];\n\t            dest[destPos++] = colorMap[key + 2];\n\t            destPos += alpha01;\n\t          }\n\t        } else {\n\t          rgbBuf = new Uint8Array(count * 3);\n\t          rgbPos = 0;\n\t          for (i = 0; i < count; ++i) {\n\t            key = comps[i] * 3;\n\t            rgbBuf[rgbPos++] = colorMap[key];\n\t            rgbBuf[rgbPos++] = colorMap[key + 1];\n\t            rgbBuf[rgbPos++] = colorMap[key + 2];\n\t          }\n\t        }\n\t      } else {\n\t        if (!needsResizing) {\n\t          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n\t        } else {\n\t          rgbBuf = new Uint8Array(count * 3);\n\t          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n\t        }\n\t      }\n\t      if (rgbBuf) {\n\t        if (needsResizing) {\n\t          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n\t        } else {\n\t          rgbPos = 0;\n\t          destPos = 0;\n\t          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            destPos += alpha01;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n\t    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n\t    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n\t  };\n\t  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n\t    var name = Array.isArray(IR) ? IR[0] : IR;\n\t    var whitePoint, blackPoint, gamma;\n\t    switch (name) {\n\t      case 'DeviceGrayCS':\n\t        return this.singletons.gray;\n\t      case 'DeviceRgbCS':\n\t        return this.singletons.rgb;\n\t      case 'DeviceCmykCS':\n\t        return this.singletons.cmyk;\n\t      case 'CalGrayCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        gamma = IR[3];\n\t        return new CalGrayCS(whitePoint, blackPoint, gamma);\n\t      case 'CalRGBCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        gamma = IR[3];\n\t        var matrix = IR[4];\n\t        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n\t      case 'PatternCS':\n\t        var basePatternCS = IR[1];\n\t        if (basePatternCS) {\n\t          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n\t        }\n\t        return new PatternCS(basePatternCS);\n\t      case 'IndexedCS':\n\t        var baseIndexedCS = IR[1];\n\t        var hiVal = IR[2];\n\t        var lookup = IR[3];\n\t        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n\t      case 'AlternateCS':\n\t        var numComps = IR[1];\n\t        var alt = IR[2];\n\t        var tintFnIR = IR[3];\n\t        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n\t      case 'LabCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        var range = IR[3];\n\t        return new LabCS(whitePoint, blackPoint, range);\n\t      default:\n\t        throw new _util.FormatError('Unknown colorspace name: ' + name);\n\t    }\n\t  };\n\t  ColorSpace.parseToIR = function (cs, xref) {\n\t    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t    var pdfFunctionFactory = arguments[3];\n\t\n\t    cs = xref.fetchIfRef(cs);\n\t    if ((0, _primitives.isName)(cs)) {\n\t      switch (cs.name) {\n\t        case 'DeviceGray':\n\t        case 'G':\n\t          return 'DeviceGrayCS';\n\t        case 'DeviceRGB':\n\t        case 'RGB':\n\t          return 'DeviceRgbCS';\n\t        case 'DeviceCMYK':\n\t        case 'CMYK':\n\t          return 'DeviceCmykCS';\n\t        case 'Pattern':\n\t          return ['PatternCS', null];\n\t        default:\n\t          if ((0, _primitives.isDict)(res)) {\n\t            var colorSpaces = res.get('ColorSpace');\n\t            if ((0, _primitives.isDict)(colorSpaces)) {\n\t              var resCS = colorSpaces.get(cs.name);\n\t              if (resCS) {\n\t                if ((0, _primitives.isName)(resCS)) {\n\t                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n\t                }\n\t                cs = resCS;\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n\t      }\n\t    }\n\t    if (Array.isArray(cs)) {\n\t      var mode = xref.fetchIfRef(cs[0]).name;\n\t      var numComps, params, alt, whitePoint, blackPoint, gamma;\n\t      switch (mode) {\n\t        case 'DeviceGray':\n\t        case 'G':\n\t          return 'DeviceGrayCS';\n\t        case 'DeviceRGB':\n\t        case 'RGB':\n\t          return 'DeviceRgbCS';\n\t        case 'DeviceCMYK':\n\t        case 'CMYK':\n\t          return 'DeviceCmykCS';\n\t        case 'CalGray':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          gamma = params.get('Gamma');\n\t          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n\t        case 'CalRGB':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          gamma = params.getArray('Gamma');\n\t          var matrix = params.getArray('Matrix');\n\t          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n\t        case 'ICCBased':\n\t          var stream = xref.fetchIfRef(cs[1]);\n\t          var dict = stream.dict;\n\t          numComps = dict.get('N');\n\t          alt = dict.get('Alternate');\n\t          if (alt) {\n\t            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n\t            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n\t            if (altCS.numComps === numComps) {\n\t              return altIR;\n\t            }\n\t            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n\t          }\n\t          if (numComps === 1) {\n\t            return 'DeviceGrayCS';\n\t          } else if (numComps === 3) {\n\t            return 'DeviceRgbCS';\n\t          } else if (numComps === 4) {\n\t            return 'DeviceCmykCS';\n\t          }\n\t          break;\n\t        case 'Pattern':\n\t          var basePatternCS = cs[1] || null;\n\t          if (basePatternCS) {\n\t            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n\t          }\n\t          return ['PatternCS', basePatternCS];\n\t        case 'Indexed':\n\t        case 'I':\n\t          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n\t          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n\t          var lookup = xref.fetchIfRef(cs[3]);\n\t          if ((0, _primitives.isStream)(lookup)) {\n\t            lookup = lookup.getBytes();\n\t          }\n\t          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n\t        case 'Separation':\n\t        case 'DeviceN':\n\t          var name = xref.fetchIfRef(cs[1]);\n\t          numComps = Array.isArray(name) ? name.length : 1;\n\t          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n\t          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n\t          return ['AlternateCS', numComps, alt, tintFnIR];\n\t        case 'Lab':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          var range = params.getArray('Range');\n\t          return ['LabCS', whitePoint, blackPoint, range];\n\t        default:\n\t          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n\t      }\n\t    }\n\t    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n\t  };\n\t  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n\t    if (!Array.isArray(decode)) {\n\t      return true;\n\t    }\n\t    if (n * 2 !== decode.length) {\n\t      (0, _util.warn)('The decode map is not the correct length');\n\t      return true;\n\t    }\n\t    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n\t      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t  ColorSpace.singletons = {\n\t    get gray() {\n\t      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n\t    },\n\t    get rgb() {\n\t      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n\t    },\n\t    get cmyk() {\n\t      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n\t    }\n\t  };\n\t  return ColorSpace;\n\t}();\n\tvar AlternateCS = function AlternateCSClosure() {\n\t  function AlternateCS(numComps, base, tintFn) {\n\t    this.name = 'Alternate';\n\t    this.numComps = numComps;\n\t    this.defaultColor = new Float32Array(numComps);\n\t    for (var i = 0; i < numComps; ++i) {\n\t      this.defaultColor[i] = 1;\n\t    }\n\t    this.base = base;\n\t    this.tintFn = tintFn;\n\t    this.tmpBuf = new Float32Array(base.numComps);\n\t  }\n\t  AlternateCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var tmpBuf = this.tmpBuf;\n\t      this.tintFn(src, srcOffset, tmpBuf, 0);\n\t      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var tintFn = this.tintFn;\n\t      var base = this.base;\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      var baseNumComps = base.numComps;\n\t      var usesZeroToOneRange = base.usesZeroToOneRange;\n\t      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n\t      var pos = isPassthrough ? destOffset : 0;\n\t      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n\t      var numComps = this.numComps;\n\t      var scaled = new Float32Array(numComps);\n\t      var tinted = new Float32Array(baseNumComps);\n\t      var i, j;\n\t      for (i = 0; i < count; i++) {\n\t        for (j = 0; j < numComps; j++) {\n\t          scaled[j] = src[srcOffset++] * scale;\n\t        }\n\t        tintFn(scaled, 0, tinted, 0);\n\t        if (usesZeroToOneRange) {\n\t          for (j = 0; j < baseNumComps; j++) {\n\t            baseBuf[pos++] = tinted[j] * 255;\n\t          }\n\t        } else {\n\t          base.getRgbItem(tinted, 0, baseBuf, pos);\n\t          pos += baseNumComps;\n\t        }\n\t      }\n\t      if (!isPassthrough) {\n\t        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n\t      }\n\t    },\n\t    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return AlternateCS;\n\t}();\n\tvar PatternCS = function PatternCSClosure() {\n\t  function PatternCS(baseCS) {\n\t    this.name = 'Pattern';\n\t    this.base = baseCS;\n\t  }\n\t  PatternCS.prototype = {};\n\t  return PatternCS;\n\t}();\n\tvar IndexedCS = function IndexedCSClosure() {\n\t  function IndexedCS(base, highVal, lookup) {\n\t    this.name = 'Indexed';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Uint8Array(this.numComps);\n\t    this.base = base;\n\t    this.highVal = highVal;\n\t    var baseNumComps = base.numComps;\n\t    var length = baseNumComps * highVal;\n\t    if ((0, _primitives.isStream)(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      var bytes = lookup.getBytes(length);\n\t      this.lookup.set(bytes);\n\t    } else if ((0, _util.isString)(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      for (var i = 0; i < length; ++i) {\n\t        this.lookup[i] = lookup.charCodeAt(i);\n\t      }\n\t    } else if (lookup instanceof Uint8Array) {\n\t      this.lookup = lookup;\n\t    } else {\n\t      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n\t    }\n\t  }\n\t  IndexedCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var numComps = this.base.numComps;\n\t      var start = src[srcOffset] * numComps;\n\t      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n\t    },\n\t    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var base = this.base;\n\t      var numComps = base.numComps;\n\t      var outputDelta = base.getOutputLength(numComps, alpha01);\n\t      var lookup = this.lookup;\n\t      for (var i = 0; i < count; ++i) {\n\t        var lookupPos = src[srcOffset++] * numComps;\n\t        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n\t        destOffset += outputDelta;\n\t      }\n\t    },\n\t    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return IndexedCS;\n\t}();\n\tvar DeviceGrayCS = function DeviceGrayCSClosure() {\n\t  function DeviceGrayCS() {\n\t    this.name = 'DeviceGray';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t  }\n\t  DeviceGrayCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var c = src[srcOffset] * 255 | 0;\n\t      c = c < 0 ? 0 : c > 255 ? 255 : c;\n\t      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n\t    },\n\t    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset,\n\t          q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t        var c = scale * src[j++] | 0;\n\t        dest[q++] = c;\n\t        dest[q++] = c;\n\t        dest[q++] = c;\n\t        q += alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceGrayCS;\n\t}();\n\tvar DeviceRgbCS = function DeviceRgbCSClosure() {\n\t  function DeviceRgbCS() {\n\t    this.name = 'DeviceRGB';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t  }\n\t  DeviceRgbCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var r = src[srcOffset] * 255 | 0;\n\t      var g = src[srcOffset + 1] * 255 | 0;\n\t      var b = src[srcOffset + 2] * 255 | 0;\n\t      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n\t      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n\t      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n\t    },\n\t    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      if (bits === 8 && alpha01 === 0) {\n\t        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n\t        return;\n\t      }\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset,\n\t          q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t        dest[q++] = scale * src[j++] | 0;\n\t        dest[q++] = scale * src[j++] | 0;\n\t        dest[q++] = scale * src[j++] | 0;\n\t        q += alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n\t      return bits === 8;\n\t    },\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceRgbCS;\n\t}();\n\tvar DeviceCmykCS = function DeviceCmykCSClosure() {\n\t  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n\t    var c = src[srcOffset + 0] * srcScale;\n\t    var m = src[srcOffset + 1] * srcScale;\n\t    var y = src[srcOffset + 2] * srcScale;\n\t    var k = src[srcOffset + 3] * srcScale;\n\t    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n\t    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n\t    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n\t    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n\t    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n\t    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n\t  }\n\t  function DeviceCmykCS() {\n\t    this.name = 'DeviceCMYK';\n\t    this.numComps = 4;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    this.defaultColor[3] = 1;\n\t  }\n\t  DeviceCmykCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(src, srcOffset, 1, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; i++) {\n\t        convertToRgb(src, srcOffset, scale, dest, destOffset);\n\t        srcOffset += 4;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength / 4 * (3 + alpha01) | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceCmykCS;\n\t}();\n\tvar CalGrayCS = function CalGrayCSClosure() {\n\t  function CalGrayCS(whitePoint, blackPoint, gamma) {\n\t    this.name = 'CalGray';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n\t    }\n\t    blackPoint = blackPoint || [0, 0, 0];\n\t    gamma = gamma || 1;\n\t    this.XW = whitePoint[0];\n\t    this.YW = whitePoint[1];\n\t    this.ZW = whitePoint[2];\n\t    this.XB = blackPoint[0];\n\t    this.YB = blackPoint[1];\n\t    this.ZB = blackPoint[2];\n\t    this.G = gamma;\n\t    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t    }\n\t    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t    }\n\t    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n\t      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n\t    }\n\t    if (this.G < 1) {\n\t      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n\t      this.G = 1;\n\t    }\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t    var A = src[srcOffset] * scale;\n\t    var AG = Math.pow(A, cs.G);\n\t    var L = cs.YW * AG;\n\t    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n\t    dest[destOffset] = val;\n\t    dest[destOffset + 1] = val;\n\t    dest[destOffset + 2] = val;\n\t  }\n\t  CalGrayCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t    },\n\t    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t        srcOffset += 1;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return CalGrayCS;\n\t}();\n\tvar CalRGBCS = function CalRGBCSClosure() {\n\t  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n\t  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n\t  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n\t  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n\t  var tempNormalizeMatrix = new Float32Array(3);\n\t  var tempConvertMatrix1 = new Float32Array(3);\n\t  var tempConvertMatrix2 = new Float32Array(3);\n\t  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n\t  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n\t    this.name = 'CalRGB';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n\t    }\n\t    blackPoint = blackPoint || new Float32Array(3);\n\t    gamma = gamma || new Float32Array([1, 1, 1]);\n\t    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\t    var XW = whitePoint[0];\n\t    var YW = whitePoint[1];\n\t    var ZW = whitePoint[2];\n\t    this.whitePoint = whitePoint;\n\t    var XB = blackPoint[0];\n\t    var YB = blackPoint[1];\n\t    var ZB = blackPoint[2];\n\t    this.blackPoint = blackPoint;\n\t    this.GR = gamma[0];\n\t    this.GG = gamma[1];\n\t    this.GB = gamma[2];\n\t    this.MXA = matrix[0];\n\t    this.MYA = matrix[1];\n\t    this.MZA = matrix[2];\n\t    this.MXB = matrix[3];\n\t    this.MYB = matrix[4];\n\t    this.MZB = matrix[5];\n\t    this.MXC = matrix[6];\n\t    this.MYC = matrix[7];\n\t    this.MZC = matrix[8];\n\t    if (XW < 0 || ZW < 0 || YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t    }\n\t    if (XB < 0 || YB < 0 || ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n\t      this.blackPoint = new Float32Array(3);\n\t    }\n\t    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n\t      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n\t      this.GR = this.GG = this.GB = 1;\n\t    }\n\t    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n\t      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n\t      this.MXA = this.MYB = this.MZC = 1;\n\t      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n\t    }\n\t  }\n\t  function matrixProduct(a, b, result) {\n\t    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n\t    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n\t  }\n\t  function convertToFlat(sourceWhitePoint, LMS, result) {\n\t    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n\t    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n\t    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n\t  }\n\t  function convertToD65(sourceWhitePoint, LMS, result) {\n\t    var D65X = 0.95047;\n\t    var D65Y = 1;\n\t    var D65Z = 1.08883;\n\t    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n\t    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n\t    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n\t  }\n\t  function sRGBTransferFunction(color) {\n\t    if (color <= 0.0031308) {\n\t      return adjustToRange(0, 1, 12.92 * color);\n\t    }\n\t    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n\t  }\n\t  function adjustToRange(min, max, value) {\n\t    return Math.max(min, Math.min(max, value));\n\t  }\n\t  function decodeL(L) {\n\t    if (L < 0) {\n\t      return -decodeL(-L);\n\t    }\n\t    if (L > 8.0) {\n\t      return Math.pow((L + 16) / 116, 3);\n\t    }\n\t    return L * DECODE_L_CONSTANT;\n\t  }\n\t  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n\t    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n\t      result[0] = XYZ_Flat[0];\n\t      result[1] = XYZ_Flat[1];\n\t      result[2] = XYZ_Flat[2];\n\t      return;\n\t    }\n\t    var zeroDecodeL = decodeL(0);\n\t    var X_DST = zeroDecodeL;\n\t    var X_SRC = decodeL(sourceBlackPoint[0]);\n\t    var Y_DST = zeroDecodeL;\n\t    var Y_SRC = decodeL(sourceBlackPoint[1]);\n\t    var Z_DST = zeroDecodeL;\n\t    var Z_SRC = decodeL(sourceBlackPoint[2]);\n\t    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n\t    var X_Offset = 1 - X_Scale;\n\t    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n\t    var Y_Offset = 1 - Y_Scale;\n\t    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n\t    var Z_Offset = 1 - Z_Scale;\n\t    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n\t    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n\t    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n\t  }\n\t  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n\t    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n\t      result[0] = XYZ_In[0];\n\t      result[1] = XYZ_In[1];\n\t      result[2] = XYZ_In[2];\n\t      return;\n\t    }\n\t    var LMS = result;\n\t    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t    var LMS_Flat = tempNormalizeMatrix;\n\t    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n\t    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n\t  }\n\t  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n\t    var LMS = result;\n\t    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t    var LMS_D65 = tempNormalizeMatrix;\n\t    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n\t    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n\t    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n\t    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n\t    var AGR = Math.pow(A, cs.GR);\n\t    var BGG = Math.pow(B, cs.GG);\n\t    var CGB = Math.pow(C, cs.GB);\n\t    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n\t    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n\t    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n\t    var XYZ = tempConvertMatrix1;\n\t    XYZ[0] = X;\n\t    XYZ[1] = Y;\n\t    XYZ[2] = Z;\n\t    var XYZ_Flat = tempConvertMatrix2;\n\t    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n\t    var XYZ_Black = tempConvertMatrix1;\n\t    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n\t    var XYZ_D65 = tempConvertMatrix2;\n\t    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n\t    var SRGB = tempConvertMatrix1;\n\t    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n\t    var sR = sRGBTransferFunction(SRGB[0]);\n\t    var sG = sRGBTransferFunction(SRGB[1]);\n\t    var sB = sRGBTransferFunction(SRGB[2]);\n\t    dest[destOffset] = Math.round(sR * 255);\n\t    dest[destOffset + 1] = Math.round(sG * 255);\n\t    dest[destOffset + 2] = Math.round(sB * 255);\n\t  }\n\t  CalRGBCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t    },\n\t    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t        srcOffset += 3;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return CalRGBCS;\n\t}();\n\tvar LabCS = function LabCSClosure() {\n\t  function LabCS(whitePoint, blackPoint, range) {\n\t    this.name = 'Lab';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n\t    }\n\t    blackPoint = blackPoint || [0, 0, 0];\n\t    range = range || [-100, 100, -100, 100];\n\t    this.XW = whitePoint[0];\n\t    this.YW = whitePoint[1];\n\t    this.ZW = whitePoint[2];\n\t    this.amin = range[0];\n\t    this.amax = range[1];\n\t    this.bmin = range[2];\n\t    this.bmax = range[3];\n\t    this.XB = blackPoint[0];\n\t    this.YB = blackPoint[1];\n\t    this.ZB = blackPoint[2];\n\t    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n\t    }\n\t    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint, falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t    }\n\t    if (this.amin > this.amax || this.bmin > this.bmax) {\n\t      (0, _util.info)('Invalid Range, falling back to defaults');\n\t      this.amin = -100;\n\t      this.amax = 100;\n\t      this.bmin = -100;\n\t      this.bmax = 100;\n\t    }\n\t  }\n\t  function fn_g(x) {\n\t    var result;\n\t    if (x >= 6 / 29) {\n\t      result = x * x * x;\n\t    } else {\n\t      result = 108 / 841 * (x - 4 / 29);\n\t    }\n\t    return result;\n\t  }\n\t  function decode(value, high1, low2, high2) {\n\t    return low2 + value * (high2 - low2) / high1;\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n\t    var Ls = src[srcOffset];\n\t    var as = src[srcOffset + 1];\n\t    var bs = src[srcOffset + 2];\n\t    if (maxVal !== false) {\n\t      Ls = decode(Ls, maxVal, 0, 100);\n\t      as = decode(as, maxVal, cs.amin, cs.amax);\n\t      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n\t    }\n\t    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n\t    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\t    var M = (Ls + 16) / 116;\n\t    var L = M + as / 500;\n\t    var N = M - bs / 200;\n\t    var X = cs.XW * fn_g(L);\n\t    var Y = cs.YW * fn_g(M);\n\t    var Z = cs.ZW * fn_g(N);\n\t    var r, g, b;\n\t    if (cs.ZW < 1) {\n\t      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n\t      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n\t      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n\t    } else {\n\t      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n\t      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n\t      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n\t    }\n\t    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n\t    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n\t    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n\t  }\n\t  LabCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var maxVal = (1 << bits) - 1;\n\t      for (var i = 0; i < count; i++) {\n\t        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n\t        srcOffset += 3;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t    },\n\t    usesZeroToOneRange: false\n\t  };\n\t  return LabCS;\n\t}();\n\texports.ColorSpace = ColorSpace;\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\tvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\n\tvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\n\tvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\n\tvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\n\tvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\n\tvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\n\tfunction getEncoding(encodingName) {\n\t  switch (encodingName) {\n\t    case 'WinAnsiEncoding':\n\t      return WinAnsiEncoding;\n\t    case 'StandardEncoding':\n\t      return StandardEncoding;\n\t    case 'MacRomanEncoding':\n\t      return MacRomanEncoding;\n\t    case 'SymbolSetEncoding':\n\t      return SymbolSetEncoding;\n\t    case 'ZapfDingbatsEncoding':\n\t      return ZapfDingbatsEncoding;\n\t    case 'ExpertEncoding':\n\t      return ExpertEncoding;\n\t    case 'MacExpertEncoding':\n\t      return MacExpertEncoding;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\texports.WinAnsiEncoding = WinAnsiEncoding;\n\texports.StandardEncoding = StandardEncoding;\n\texports.MacRomanEncoding = MacRomanEncoding;\n\texports.SymbolSetEncoding = SymbolSetEncoding;\n\texports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n\texports.ExpertEncoding = ExpertEncoding;\n\texports.getEncoding = getEncoding;\n\n/***/ },\n\n/***/ 122:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Parser = exports.Linearization = exports.Lexer = undefined;\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _ccitt_stream = __webpack_require__(686);\n\t\n\tvar _jbig2_stream = __webpack_require__(695);\n\t\n\tvar _jpeg_stream = __webpack_require__(180);\n\t\n\tvar _jpx_stream = __webpack_require__(697);\n\t\n\tvar MAX_LENGTH_TO_CACHE = 1000;\n\tvar Parser = function ParserClosure() {\n\t  function Parser(lexer, allowStreams, xref, recoveryMode) {\n\t    this.lexer = lexer;\n\t    this.allowStreams = allowStreams;\n\t    this.xref = xref;\n\t    this.recoveryMode = recoveryMode || false;\n\t    this.imageCache = Object.create(null);\n\t    this.refill();\n\t  }\n\t  Parser.prototype = {\n\t    refill: function Parser_refill() {\n\t      this.buf1 = this.lexer.getObj();\n\t      this.buf2 = this.lexer.getObj();\n\t    },\n\t    shift: function Parser_shift() {\n\t      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n\t        this.buf1 = this.buf2;\n\t        this.buf2 = null;\n\t      } else {\n\t        this.buf1 = this.buf2;\n\t        this.buf2 = this.lexer.getObj();\n\t      }\n\t    },\n\t    tryShift: function Parser_tryShift() {\n\t      try {\n\t        this.shift();\n\t        return true;\n\t      } catch (e) {\n\t        if (e instanceof _util.MissingDataException) {\n\t          throw e;\n\t        }\n\t        return false;\n\t      }\n\t    },\n\t    getObj: function Parser_getObj(cipherTransform) {\n\t      var buf1 = this.buf1;\n\t      this.shift();\n\t      if (buf1 instanceof _primitives.Cmd) {\n\t        switch (buf1.cmd) {\n\t          case 'BI':\n\t            return this.makeInlineImage(cipherTransform);\n\t          case '[':\n\t            var array = [];\n\t            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n\t              array.push(this.getObj(cipherTransform));\n\t            }\n\t            if ((0, _primitives.isEOF)(this.buf1)) {\n\t              if (!this.recoveryMode) {\n\t                throw new _util.FormatError('End of file inside array');\n\t              }\n\t              return array;\n\t            }\n\t            this.shift();\n\t            return array;\n\t          case '<<':\n\t            var dict = new _primitives.Dict(this.xref);\n\t            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n\t              if (!(0, _primitives.isName)(this.buf1)) {\n\t                (0, _util.info)('Malformed dictionary: key must be a name object');\n\t                this.shift();\n\t                continue;\n\t              }\n\t              var key = this.buf1.name;\n\t              this.shift();\n\t              if ((0, _primitives.isEOF)(this.buf1)) {\n\t                break;\n\t              }\n\t              dict.set(key, this.getObj(cipherTransform));\n\t            }\n\t            if ((0, _primitives.isEOF)(this.buf1)) {\n\t              if (!this.recoveryMode) {\n\t                throw new _util.FormatError('End of file inside dictionary');\n\t              }\n\t              return dict;\n\t            }\n\t            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n\t              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n\t            }\n\t            this.shift();\n\t            return dict;\n\t          default:\n\t            return buf1;\n\t        }\n\t      }\n\t      if (Number.isInteger(buf1)) {\n\t        var num = buf1;\n\t        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n\t          var ref = new _primitives.Ref(num, this.buf1);\n\t          this.shift();\n\t          this.shift();\n\t          return ref;\n\t        }\n\t        return num;\n\t      }\n\t      if ((0, _util.isString)(buf1)) {\n\t        var str = buf1;\n\t        if (cipherTransform) {\n\t          str = cipherTransform.decryptString(str);\n\t        }\n\t        return str;\n\t      }\n\t      return buf1;\n\t    },\n\t    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n\t      var E = 0x45,\n\t          I = 0x49,\n\t          SPACE = 0x20,\n\t          LF = 0xA,\n\t          CR = 0xD;\n\t      var n = 10,\n\t          NUL = 0x0;\n\t      var startPos = stream.pos,\n\t          state = 0,\n\t          ch = void 0,\n\t          maybeEIPos = void 0;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (state === 0) {\n\t          state = ch === E ? 1 : 0;\n\t        } else if (state === 1) {\n\t          state = ch === I ? 2 : 0;\n\t        } else {\n\t          (0, _util.assert)(state === 2);\n\t          if (ch === SPACE || ch === LF || ch === CR) {\n\t            maybeEIPos = stream.pos;\n\t            var followingBytes = stream.peekBytes(n);\n\t            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n\t              ch = followingBytes[i];\n\t              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n\t                continue;\n\t              }\n\t              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n\t                state = 0;\n\t                break;\n\t              }\n\t            }\n\t            if (state === 2) {\n\t              break;\n\t            }\n\t          } else {\n\t            state = 0;\n\t          }\n\t        }\n\t      }\n\t      if (ch === -1) {\n\t        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n\t        if (maybeEIPos) {\n\t          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n\t          stream.skip(-(stream.pos - maybeEIPos));\n\t        }\n\t      }\n\t      return stream.pos - 4 - startPos;\n\t    },\n\t\n\t    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n\t      var startPos = stream.pos,\n\t          foundEOI = false,\n\t          b,\n\t          markerLength,\n\t          length;\n\t      while ((b = stream.getByte()) !== -1) {\n\t        if (b !== 0xFF) {\n\t          continue;\n\t        }\n\t        switch (stream.getByte()) {\n\t          case 0x00:\n\t            break;\n\t          case 0xFF:\n\t            stream.skip(-1);\n\t            break;\n\t          case 0xD9:\n\t            foundEOI = true;\n\t            break;\n\t          case 0xC0:\n\t          case 0xC1:\n\t          case 0xC2:\n\t          case 0xC3:\n\t          case 0xC5:\n\t          case 0xC6:\n\t          case 0xC7:\n\t          case 0xC9:\n\t          case 0xCA:\n\t          case 0xCB:\n\t          case 0xCD:\n\t          case 0xCE:\n\t          case 0xCF:\n\t          case 0xC4:\n\t          case 0xCC:\n\t          case 0xDA:\n\t          case 0xDB:\n\t          case 0xDC:\n\t          case 0xDD:\n\t          case 0xDE:\n\t          case 0xDF:\n\t          case 0xE0:\n\t          case 0xE1:\n\t          case 0xE2:\n\t          case 0xE3:\n\t          case 0xE4:\n\t          case 0xE5:\n\t          case 0xE6:\n\t          case 0xE7:\n\t          case 0xE8:\n\t          case 0xE9:\n\t          case 0xEA:\n\t          case 0xEB:\n\t          case 0xEC:\n\t          case 0xED:\n\t          case 0xEE:\n\t          case 0xEF:\n\t          case 0xFE:\n\t            markerLength = stream.getUint16();\n\t            if (markerLength > 2) {\n\t              stream.skip(markerLength - 2);\n\t            } else {\n\t              stream.skip(-2);\n\t            }\n\t            break;\n\t        }\n\t        if (foundEOI) {\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (b === -1) {\n\t        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n\t      var TILDE = 0x7E,\n\t          GT = 0x3E;\n\t      var startPos = stream.pos,\n\t          ch,\n\t          length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (ch === TILDE && stream.peekByte() === GT) {\n\t          stream.skip();\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n\t      var GT = 0x3E;\n\t      var startPos = stream.pos,\n\t          ch,\n\t          length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (ch === GT) {\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n\t      var E = 0x45,\n\t          I = 0x49;\n\t      var state = 0,\n\t          ch;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (state === 0) {\n\t          state = ch === E ? 1 : 0;\n\t        } else if (state === 1) {\n\t          state = ch === I ? 2 : 0;\n\t        } else if (state === 2) {\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      var dict = new _primitives.Dict(this.xref);\n\t      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n\t        if (!(0, _primitives.isName)(this.buf1)) {\n\t          throw new _util.FormatError('Dictionary key must be a name object');\n\t        }\n\t        var key = this.buf1.name;\n\t        this.shift();\n\t        if ((0, _primitives.isEOF)(this.buf1)) {\n\t          break;\n\t        }\n\t        dict.set(key, this.getObj(cipherTransform));\n\t      }\n\t      var filter = dict.get('Filter', 'F'),\n\t          filterName;\n\t      if ((0, _primitives.isName)(filter)) {\n\t        filterName = filter.name;\n\t      } else if (Array.isArray(filter)) {\n\t        var filterZero = this.xref.fetchIfRef(filter[0]);\n\t        if ((0, _primitives.isName)(filterZero)) {\n\t          filterName = filterZero.name;\n\t        }\n\t      }\n\t      var startPos = stream.pos,\n\t          length,\n\t          i,\n\t          ii;\n\t      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n\t        length = this.findDCTDecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n\t        length = this.findASCII85DecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n\t        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n\t      } else {\n\t        length = this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      var imageStream = stream.makeSubStream(startPos, length, dict);\n\t      var adler32;\n\t      if (length < MAX_LENGTH_TO_CACHE) {\n\t        var imageBytes = imageStream.getBytes();\n\t        imageStream.reset();\n\t        var a = 1;\n\t        var b = 0;\n\t        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n\t          a += imageBytes[i] & 0xff;\n\t          b += a;\n\t        }\n\t        adler32 = b % 65521 << 16 | a % 65521;\n\t        var cacheEntry = this.imageCache[adler32];\n\t        if (cacheEntry !== undefined) {\n\t          this.buf2 = _primitives.Cmd.get('EI');\n\t          this.shift();\n\t          cacheEntry.reset();\n\t          return cacheEntry;\n\t        }\n\t      }\n\t      if (cipherTransform) {\n\t        imageStream = cipherTransform.createStream(imageStream, length);\n\t      }\n\t      imageStream = this.filter(imageStream, dict, length);\n\t      imageStream.dict = dict;\n\t      if (adler32 !== undefined) {\n\t        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n\t        this.imageCache[adler32] = imageStream;\n\t      }\n\t      this.buf2 = _primitives.Cmd.get('EI');\n\t      this.shift();\n\t      return imageStream;\n\t    },\n\t    makeStream: function Parser_makeStream(dict, cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      lexer.skipToNextLine();\n\t      var pos = stream.pos - 1;\n\t      var length = dict.get('Length');\n\t      if (!Number.isInteger(length)) {\n\t        (0, _util.info)('Bad ' + length + ' attribute in stream');\n\t        length = 0;\n\t      }\n\t      stream.pos = pos + length;\n\t      lexer.nextChar();\n\t      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n\t        this.shift();\n\t      } else {\n\t        stream.pos = pos;\n\t        var SCAN_BLOCK_SIZE = 2048;\n\t        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n\t        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n\t        var skipped = 0,\n\t            found = false,\n\t            i,\n\t            j;\n\t        while (stream.pos < stream.end) {\n\t          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n\t          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n\t          if (scanLength <= 0) {\n\t            break;\n\t          }\n\t          found = false;\n\t          i = 0;\n\t          while (i < scanLength) {\n\t            j = 0;\n\t            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n\t              j++;\n\t            }\n\t            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n\t              found = true;\n\t              break;\n\t            }\n\t            i++;\n\t          }\n\t          if (found) {\n\t            skipped += i;\n\t            stream.pos += i;\n\t            break;\n\t          }\n\t          skipped += scanLength;\n\t          stream.pos += scanLength;\n\t        }\n\t        if (!found) {\n\t          throw new _util.FormatError('Missing endstream');\n\t        }\n\t        length = skipped;\n\t        lexer.nextChar();\n\t        this.shift();\n\t        this.shift();\n\t      }\n\t      this.shift();\n\t      stream = stream.makeSubStream(pos, length, dict);\n\t      if (cipherTransform) {\n\t        stream = cipherTransform.createStream(stream, length);\n\t      }\n\t      stream = this.filter(stream, dict, length);\n\t      stream.dict = dict;\n\t      return stream;\n\t    },\n\t    filter: function Parser_filter(stream, dict, length) {\n\t      var filter = dict.get('Filter', 'F');\n\t      var params = dict.get('DecodeParms', 'DP');\n\t      if ((0, _primitives.isName)(filter)) {\n\t        if (Array.isArray(params)) {\n\t          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n\t        }\n\t        return this.makeFilter(stream, filter.name, length, params);\n\t      }\n\t      var maybeLength = length;\n\t      if (Array.isArray(filter)) {\n\t        var filterArray = filter;\n\t        var paramsArray = params;\n\t        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n\t          filter = this.xref.fetchIfRef(filterArray[i]);\n\t          if (!(0, _primitives.isName)(filter)) {\n\t            throw new _util.FormatError('Bad filter name: ' + filter);\n\t          }\n\t          params = null;\n\t          if (Array.isArray(paramsArray) && i in paramsArray) {\n\t            params = this.xref.fetchIfRef(paramsArray[i]);\n\t          }\n\t          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n\t          maybeLength = null;\n\t        }\n\t      }\n\t      return stream;\n\t    },\n\t    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n\t      if (maybeLength === 0) {\n\t        (0, _util.warn)('Empty \"' + name + '\" stream.');\n\t        return new _stream.NullStream();\n\t      }\n\t      try {\n\t        var xrefStreamStats = this.xref.stats.streamTypes;\n\t        if (name === 'FlateDecode' || name === 'Fl') {\n\t          xrefStreamStats[_util.StreamType.FLATE] = true;\n\t          if (params) {\n\t            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n\t          }\n\t          return new _stream.FlateStream(stream, maybeLength);\n\t        }\n\t        if (name === 'LZWDecode' || name === 'LZW') {\n\t          xrefStreamStats[_util.StreamType.LZW] = true;\n\t          var earlyChange = 1;\n\t          if (params) {\n\t            if (params.has('EarlyChange')) {\n\t              earlyChange = params.get('EarlyChange');\n\t            }\n\t            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n\t          }\n\t          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n\t        }\n\t        if (name === 'DCTDecode' || name === 'DCT') {\n\t          xrefStreamStats[_util.StreamType.DCT] = true;\n\t          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        if (name === 'JPXDecode' || name === 'JPX') {\n\t          xrefStreamStats[_util.StreamType.JPX] = true;\n\t          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        if (name === 'ASCII85Decode' || name === 'A85') {\n\t          xrefStreamStats[_util.StreamType.A85] = true;\n\t          return new _stream.Ascii85Stream(stream, maybeLength);\n\t        }\n\t        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n\t          xrefStreamStats[_util.StreamType.AHX] = true;\n\t          return new _stream.AsciiHexStream(stream, maybeLength);\n\t        }\n\t        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n\t          xrefStreamStats[_util.StreamType.CCF] = true;\n\t          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n\t        }\n\t        if (name === 'RunLengthDecode' || name === 'RL') {\n\t          xrefStreamStats[_util.StreamType.RL] = true;\n\t          return new _stream.RunLengthStream(stream, maybeLength);\n\t        }\n\t        if (name === 'JBIG2Decode') {\n\t          xrefStreamStats[_util.StreamType.JBIG] = true;\n\t          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n\t        return stream;\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n\t        return new _stream.NullStream();\n\t      }\n\t    }\n\t  };\n\t  return Parser;\n\t}();\n\tvar Lexer = function LexerClosure() {\n\t  function Lexer(stream, knownCommands) {\n\t    this.stream = stream;\n\t    this.nextChar();\n\t    this.strBuf = [];\n\t    this.knownCommands = knownCommands;\n\t  }\n\t  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t  function toHexDigit(ch) {\n\t    if (ch >= 0x30 && ch <= 0x39) {\n\t      return ch & 0x0F;\n\t    }\n\t    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t      return (ch & 0x0F) + 9;\n\t    }\n\t    return -1;\n\t  }\n\t  Lexer.prototype = {\n\t    nextChar: function Lexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    peekChar: function Lexer_peekChar() {\n\t      return this.stream.peekByte();\n\t    },\n\t    getNumber: function Lexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var eNotation = false;\n\t      var divideBy = 0;\n\t      var sign = 1;\n\t      if (ch === 0x2D) {\n\t        sign = -1;\n\t        ch = this.nextChar();\n\t        if (ch === 0x2D) {\n\t          ch = this.nextChar();\n\t        }\n\t      } else if (ch === 0x2B) {\n\t        ch = this.nextChar();\n\t      }\n\t      if (ch === 0x2E) {\n\t        divideBy = 10;\n\t        ch = this.nextChar();\n\t      }\n\t      if (ch === 0x0A || ch === 0x0D) {\n\t        do {\n\t          ch = this.nextChar();\n\t        } while (ch === 0x0A || ch === 0x0D);\n\t      }\n\t      if (ch < 0x30 || ch > 0x39) {\n\t        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n\t      }\n\t      var baseValue = ch - 0x30;\n\t      var powerValue = 0;\n\t      var powerValueSign = 1;\n\t      while ((ch = this.nextChar()) >= 0) {\n\t        if (0x30 <= ch && ch <= 0x39) {\n\t          var currentDigit = ch - 0x30;\n\t          if (eNotation) {\n\t            powerValue = powerValue * 10 + currentDigit;\n\t          } else {\n\t            if (divideBy !== 0) {\n\t              divideBy *= 10;\n\t            }\n\t            baseValue = baseValue * 10 + currentDigit;\n\t          }\n\t        } else if (ch === 0x2E) {\n\t          if (divideBy === 0) {\n\t            divideBy = 1;\n\t          } else {\n\t            break;\n\t          }\n\t        } else if (ch === 0x2D) {\n\t          (0, _util.warn)('Badly formatted number');\n\t        } else if (ch === 0x45 || ch === 0x65) {\n\t          ch = this.peekChar();\n\t          if (ch === 0x2B || ch === 0x2D) {\n\t            powerValueSign = ch === 0x2D ? -1 : 1;\n\t            this.nextChar();\n\t          } else if (ch < 0x30 || ch > 0x39) {\n\t            break;\n\t          }\n\t          eNotation = true;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (divideBy !== 0) {\n\t        baseValue /= divideBy;\n\t      }\n\t      if (eNotation) {\n\t        baseValue *= Math.pow(10, powerValueSign * powerValue);\n\t      }\n\t      return sign * baseValue;\n\t    },\n\t    getString: function Lexer_getString() {\n\t      var numParen = 1;\n\t      var done = false;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.nextChar();\n\t      while (true) {\n\t        var charBuffered = false;\n\t        switch (ch | 0) {\n\t          case -1:\n\t            (0, _util.warn)('Unterminated string');\n\t            done = true;\n\t            break;\n\t          case 0x28:\n\t            ++numParen;\n\t            strBuf.push('(');\n\t            break;\n\t          case 0x29:\n\t            if (--numParen === 0) {\n\t              this.nextChar();\n\t              done = true;\n\t            } else {\n\t              strBuf.push(')');\n\t            }\n\t            break;\n\t          case 0x5C:\n\t            ch = this.nextChar();\n\t            switch (ch) {\n\t              case -1:\n\t                (0, _util.warn)('Unterminated string');\n\t                done = true;\n\t                break;\n\t              case 0x6E:\n\t                strBuf.push('\\n');\n\t                break;\n\t              case 0x72:\n\t                strBuf.push('\\r');\n\t                break;\n\t              case 0x74:\n\t                strBuf.push('\\t');\n\t                break;\n\t              case 0x62:\n\t                strBuf.push('\\b');\n\t                break;\n\t              case 0x66:\n\t                strBuf.push('\\f');\n\t                break;\n\t              case 0x5C:\n\t              case 0x28:\n\t              case 0x29:\n\t                strBuf.push(String.fromCharCode(ch));\n\t                break;\n\t              case 0x30:\n\t              case 0x31:\n\t              case 0x32:\n\t              case 0x33:\n\t              case 0x34:\n\t              case 0x35:\n\t              case 0x36:\n\t              case 0x37:\n\t                var x = ch & 0x0F;\n\t                ch = this.nextChar();\n\t                charBuffered = true;\n\t                if (ch >= 0x30 && ch <= 0x37) {\n\t                  x = (x << 3) + (ch & 0x0F);\n\t                  ch = this.nextChar();\n\t                  if (ch >= 0x30 && ch <= 0x37) {\n\t                    charBuffered = false;\n\t                    x = (x << 3) + (ch & 0x0F);\n\t                  }\n\t                }\n\t                strBuf.push(String.fromCharCode(x));\n\t                break;\n\t              case 0x0D:\n\t                if (this.peekChar() === 0x0A) {\n\t                  this.nextChar();\n\t                }\n\t                break;\n\t              case 0x0A:\n\t                break;\n\t              default:\n\t                strBuf.push(String.fromCharCode(ch));\n\t                break;\n\t            }\n\t            break;\n\t          default:\n\t            strBuf.push(String.fromCharCode(ch));\n\t            break;\n\t        }\n\t        if (done) {\n\t          break;\n\t        }\n\t        if (!charBuffered) {\n\t          ch = this.nextChar();\n\t        }\n\t      }\n\t      return strBuf.join('');\n\t    },\n\t    getName: function Lexer_getName() {\n\t      var ch, previousCh;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t        if (ch === 0x23) {\n\t          ch = this.nextChar();\n\t          if (specialChars[ch]) {\n\t            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n\t            strBuf.push('#');\n\t            break;\n\t          }\n\t          var x = toHexDigit(ch);\n\t          if (x !== -1) {\n\t            previousCh = ch;\n\t            ch = this.nextChar();\n\t            var x2 = toHexDigit(ch);\n\t            if (x2 === -1) {\n\t              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n\t              strBuf.push('#', String.fromCharCode(previousCh));\n\t              if (specialChars[ch]) {\n\t                break;\n\t              }\n\t              strBuf.push(String.fromCharCode(ch));\n\t              continue;\n\t            }\n\t            strBuf.push(String.fromCharCode(x << 4 | x2));\n\t          } else {\n\t            strBuf.push('#', String.fromCharCode(ch));\n\t          }\n\t        } else {\n\t          strBuf.push(String.fromCharCode(ch));\n\t        }\n\t      }\n\t      if (strBuf.length > 127) {\n\t        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n\t      }\n\t      return _primitives.Name.get(strBuf.join(''));\n\t    },\n\t    getHexString: function Lexer_getHexString() {\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.currentChar;\n\t      var isFirstHex = true;\n\t      var firstDigit;\n\t      var secondDigit;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          (0, _util.warn)('Unterminated hex string');\n\t          break;\n\t        } else if (ch === 0x3E) {\n\t          this.nextChar();\n\t          break;\n\t        } else if (specialChars[ch] === 1) {\n\t          ch = this.nextChar();\n\t          continue;\n\t        } else {\n\t          if (isFirstHex) {\n\t            firstDigit = toHexDigit(ch);\n\t            if (firstDigit === -1) {\n\t              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n\t              ch = this.nextChar();\n\t              continue;\n\t            }\n\t          } else {\n\t            secondDigit = toHexDigit(ch);\n\t            if (secondDigit === -1) {\n\t              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n\t              ch = this.nextChar();\n\t              continue;\n\t            }\n\t            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n\t          }\n\t          isFirstHex = !isFirstHex;\n\t          ch = this.nextChar();\n\t        }\n\t      }\n\t      return strBuf.join('');\n\t    },\n\t    getObj: function Lexer_getObj() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          return _primitives.EOF;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (specialChars[ch] !== 1) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t        case 0x38:\n\t        case 0x39:\n\t        case 0x2B:\n\t        case 0x2D:\n\t        case 0x2E:\n\t          return this.getNumber();\n\t        case 0x28:\n\t          return this.getString();\n\t        case 0x2F:\n\t          return this.getName();\n\t        case 0x5B:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('[');\n\t        case 0x5D:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get(']');\n\t        case 0x3C:\n\t          ch = this.nextChar();\n\t          if (ch === 0x3C) {\n\t            this.nextChar();\n\t            return _primitives.Cmd.get('<<');\n\t          }\n\t          return this.getHexString();\n\t        case 0x3E:\n\t          ch = this.nextChar();\n\t          if (ch === 0x3E) {\n\t            this.nextChar();\n\t            return _primitives.Cmd.get('>>');\n\t          }\n\t          return _primitives.Cmd.get('>');\n\t        case 0x7B:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('{');\n\t        case 0x7D:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('}');\n\t        case 0x29:\n\t          this.nextChar();\n\t          throw new _util.FormatError('Illegal character: ' + ch);\n\t      }\n\t      var str = String.fromCharCode(ch);\n\t      var knownCommands = this.knownCommands;\n\t      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t        var possibleCommand = str + String.fromCharCode(ch);\n\t        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n\t          break;\n\t        }\n\t        if (str.length === 128) {\n\t          throw new _util.FormatError('Command token too long: ' + str.length);\n\t        }\n\t        str = possibleCommand;\n\t        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      }\n\t      if (str === 'true') {\n\t        return true;\n\t      }\n\t      if (str === 'false') {\n\t        return false;\n\t      }\n\t      if (str === 'null') {\n\t        return null;\n\t      }\n\t      return _primitives.Cmd.get(str);\n\t    },\n\t    skipToNextLine: function Lexer_skipToNextLine() {\n\t      var ch = this.currentChar;\n\t      while (ch >= 0) {\n\t        if (ch === 0x0D) {\n\t          ch = this.nextChar();\n\t          if (ch === 0x0A) {\n\t            this.nextChar();\n\t          }\n\t          break;\n\t        } else if (ch === 0x0A) {\n\t          this.nextChar();\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t    }\n\t  };\n\t  return Lexer;\n\t}();\n\tvar Linearization = {\n\t  create: function LinearizationCreate(stream) {\n\t    function getInt(name, allowZeroValue) {\n\t      var obj = linDict.get(name);\n\t      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n\t        return obj;\n\t      }\n\t      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n\t    }\n\t    function getHints() {\n\t      var hints = linDict.get('H'),\n\t          hintsLength,\n\t          item;\n\t      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n\t        for (var index = 0; index < hintsLength; index++) {\n\t          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n\t            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n\t          }\n\t        }\n\t        return hints;\n\t      }\n\t      throw new Error('Hint array in the linearization dictionary is invalid.');\n\t    }\n\t    var parser = new Parser(new Lexer(stream), false, null);\n\t    var obj1 = parser.getObj();\n\t    var obj2 = parser.getObj();\n\t    var obj3 = parser.getObj();\n\t    var linDict = parser.getObj();\n\t    var obj, length;\n\t    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n\t      return null;\n\t    } else if ((length = getInt('L')) !== stream.length) {\n\t      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n\t    }\n\t    return {\n\t      length: length,\n\t      hints: getHints(),\n\t      objectNumberFirst: getInt('O'),\n\t      endFirst: getInt('E'),\n\t      numPages: getInt('N'),\n\t      mainXRefEntriesOffset: getInt('T'),\n\t      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n\t    };\n\t  }\n\t};\n\texports.Lexer = Lexer;\n\texports.Linearization = Linearization;\n\texports.Parser = Parser;\n\n/***/ },\n\n/***/ 179:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tvar getLookupTableFactory = __webpack_require__(11).getLookupTableFactory;\n\tvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n\t  t['A'] = 0x0041;\n\t  t['AE'] = 0x00C6;\n\t  t['AEacute'] = 0x01FC;\n\t  t['AEmacron'] = 0x01E2;\n\t  t['AEsmall'] = 0xF7E6;\n\t  t['Aacute'] = 0x00C1;\n\t  t['Aacutesmall'] = 0xF7E1;\n\t  t['Abreve'] = 0x0102;\n\t  t['Abreveacute'] = 0x1EAE;\n\t  t['Abrevecyrillic'] = 0x04D0;\n\t  t['Abrevedotbelow'] = 0x1EB6;\n\t  t['Abrevegrave'] = 0x1EB0;\n\t  t['Abrevehookabove'] = 0x1EB2;\n\t  t['Abrevetilde'] = 0x1EB4;\n\t  t['Acaron'] = 0x01CD;\n\t  t['Acircle'] = 0x24B6;\n\t  t['Acircumflex'] = 0x00C2;\n\t  t['Acircumflexacute'] = 0x1EA4;\n\t  t['Acircumflexdotbelow'] = 0x1EAC;\n\t  t['Acircumflexgrave'] = 0x1EA6;\n\t  t['Acircumflexhookabove'] = 0x1EA8;\n\t  t['Acircumflexsmall'] = 0xF7E2;\n\t  t['Acircumflextilde'] = 0x1EAA;\n\t  t['Acute'] = 0xF6C9;\n\t  t['Acutesmall'] = 0xF7B4;\n\t  t['Acyrillic'] = 0x0410;\n\t  t['Adblgrave'] = 0x0200;\n\t  t['Adieresis'] = 0x00C4;\n\t  t['Adieresiscyrillic'] = 0x04D2;\n\t  t['Adieresismacron'] = 0x01DE;\n\t  t['Adieresissmall'] = 0xF7E4;\n\t  t['Adotbelow'] = 0x1EA0;\n\t  t['Adotmacron'] = 0x01E0;\n\t  t['Agrave'] = 0x00C0;\n\t  t['Agravesmall'] = 0xF7E0;\n\t  t['Ahookabove'] = 0x1EA2;\n\t  t['Aiecyrillic'] = 0x04D4;\n\t  t['Ainvertedbreve'] = 0x0202;\n\t  t['Alpha'] = 0x0391;\n\t  t['Alphatonos'] = 0x0386;\n\t  t['Amacron'] = 0x0100;\n\t  t['Amonospace'] = 0xFF21;\n\t  t['Aogonek'] = 0x0104;\n\t  t['Aring'] = 0x00C5;\n\t  t['Aringacute'] = 0x01FA;\n\t  t['Aringbelow'] = 0x1E00;\n\t  t['Aringsmall'] = 0xF7E5;\n\t  t['Asmall'] = 0xF761;\n\t  t['Atilde'] = 0x00C3;\n\t  t['Atildesmall'] = 0xF7E3;\n\t  t['Aybarmenian'] = 0x0531;\n\t  t['B'] = 0x0042;\n\t  t['Bcircle'] = 0x24B7;\n\t  t['Bdotaccent'] = 0x1E02;\n\t  t['Bdotbelow'] = 0x1E04;\n\t  t['Becyrillic'] = 0x0411;\n\t  t['Benarmenian'] = 0x0532;\n\t  t['Beta'] = 0x0392;\n\t  t['Bhook'] = 0x0181;\n\t  t['Blinebelow'] = 0x1E06;\n\t  t['Bmonospace'] = 0xFF22;\n\t  t['Brevesmall'] = 0xF6F4;\n\t  t['Bsmall'] = 0xF762;\n\t  t['Btopbar'] = 0x0182;\n\t  t['C'] = 0x0043;\n\t  t['Caarmenian'] = 0x053E;\n\t  t['Cacute'] = 0x0106;\n\t  t['Caron'] = 0xF6CA;\n\t  t['Caronsmall'] = 0xF6F5;\n\t  t['Ccaron'] = 0x010C;\n\t  t['Ccedilla'] = 0x00C7;\n\t  t['Ccedillaacute'] = 0x1E08;\n\t  t['Ccedillasmall'] = 0xF7E7;\n\t  t['Ccircle'] = 0x24B8;\n\t  t['Ccircumflex'] = 0x0108;\n\t  t['Cdot'] = 0x010A;\n\t  t['Cdotaccent'] = 0x010A;\n\t  t['Cedillasmall'] = 0xF7B8;\n\t  t['Chaarmenian'] = 0x0549;\n\t  t['Cheabkhasiancyrillic'] = 0x04BC;\n\t  t['Checyrillic'] = 0x0427;\n\t  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n\t  t['Chedescendercyrillic'] = 0x04B6;\n\t  t['Chedieresiscyrillic'] = 0x04F4;\n\t  t['Cheharmenian'] = 0x0543;\n\t  t['Chekhakassiancyrillic'] = 0x04CB;\n\t  t['Cheverticalstrokecyrillic'] = 0x04B8;\n\t  t['Chi'] = 0x03A7;\n\t  t['Chook'] = 0x0187;\n\t  t['Circumflexsmall'] = 0xF6F6;\n\t  t['Cmonospace'] = 0xFF23;\n\t  t['Coarmenian'] = 0x0551;\n\t  t['Csmall'] = 0xF763;\n\t  t['D'] = 0x0044;\n\t  t['DZ'] = 0x01F1;\n\t  t['DZcaron'] = 0x01C4;\n\t  t['Daarmenian'] = 0x0534;\n\t  t['Dafrican'] = 0x0189;\n\t  t['Dcaron'] = 0x010E;\n\t  t['Dcedilla'] = 0x1E10;\n\t  t['Dcircle'] = 0x24B9;\n\t  t['Dcircumflexbelow'] = 0x1E12;\n\t  t['Dcroat'] = 0x0110;\n\t  t['Ddotaccent'] = 0x1E0A;\n\t  t['Ddotbelow'] = 0x1E0C;\n\t  t['Decyrillic'] = 0x0414;\n\t  t['Deicoptic'] = 0x03EE;\n\t  t['Delta'] = 0x2206;\n\t  t['Deltagreek'] = 0x0394;\n\t  t['Dhook'] = 0x018A;\n\t  t['Dieresis'] = 0xF6CB;\n\t  t['DieresisAcute'] = 0xF6CC;\n\t  t['DieresisGrave'] = 0xF6CD;\n\t  t['Dieresissmall'] = 0xF7A8;\n\t  t['Digammagreek'] = 0x03DC;\n\t  t['Djecyrillic'] = 0x0402;\n\t  t['Dlinebelow'] = 0x1E0E;\n\t  t['Dmonospace'] = 0xFF24;\n\t  t['Dotaccentsmall'] = 0xF6F7;\n\t  t['Dslash'] = 0x0110;\n\t  t['Dsmall'] = 0xF764;\n\t  t['Dtopbar'] = 0x018B;\n\t  t['Dz'] = 0x01F2;\n\t  t['Dzcaron'] = 0x01C5;\n\t  t['Dzeabkhasiancyrillic'] = 0x04E0;\n\t  t['Dzecyrillic'] = 0x0405;\n\t  t['Dzhecyrillic'] = 0x040F;\n\t  t['E'] = 0x0045;\n\t  t['Eacute'] = 0x00C9;\n\t  t['Eacutesmall'] = 0xF7E9;\n\t  t['Ebreve'] = 0x0114;\n\t  t['Ecaron'] = 0x011A;\n\t  t['Ecedillabreve'] = 0x1E1C;\n\t  t['Echarmenian'] = 0x0535;\n\t  t['Ecircle'] = 0x24BA;\n\t  t['Ecircumflex'] = 0x00CA;\n\t  t['Ecircumflexacute'] = 0x1EBE;\n\t  t['Ecircumflexbelow'] = 0x1E18;\n\t  t['Ecircumflexdotbelow'] = 0x1EC6;\n\t  t['Ecircumflexgrave'] = 0x1EC0;\n\t  t['Ecircumflexhookabove'] = 0x1EC2;\n\t  t['Ecircumflexsmall'] = 0xF7EA;\n\t  t['Ecircumflextilde'] = 0x1EC4;\n\t  t['Ecyrillic'] = 0x0404;\n\t  t['Edblgrave'] = 0x0204;\n\t  t['Edieresis'] = 0x00CB;\n\t  t['Edieresissmall'] = 0xF7EB;\n\t  t['Edot'] = 0x0116;\n\t  t['Edotaccent'] = 0x0116;\n\t  t['Edotbelow'] = 0x1EB8;\n\t  t['Efcyrillic'] = 0x0424;\n\t  t['Egrave'] = 0x00C8;\n\t  t['Egravesmall'] = 0xF7E8;\n\t  t['Eharmenian'] = 0x0537;\n\t  t['Ehookabove'] = 0x1EBA;\n\t  t['Eightroman'] = 0x2167;\n\t  t['Einvertedbreve'] = 0x0206;\n\t  t['Eiotifiedcyrillic'] = 0x0464;\n\t  t['Elcyrillic'] = 0x041B;\n\t  t['Elevenroman'] = 0x216A;\n\t  t['Emacron'] = 0x0112;\n\t  t['Emacronacute'] = 0x1E16;\n\t  t['Emacrongrave'] = 0x1E14;\n\t  t['Emcyrillic'] = 0x041C;\n\t  t['Emonospace'] = 0xFF25;\n\t  t['Encyrillic'] = 0x041D;\n\t  t['Endescendercyrillic'] = 0x04A2;\n\t  t['Eng'] = 0x014A;\n\t  t['Enghecyrillic'] = 0x04A4;\n\t  t['Enhookcyrillic'] = 0x04C7;\n\t  t['Eogonek'] = 0x0118;\n\t  t['Eopen'] = 0x0190;\n\t  t['Epsilon'] = 0x0395;\n\t  t['Epsilontonos'] = 0x0388;\n\t  t['Ercyrillic'] = 0x0420;\n\t  t['Ereversed'] = 0x018E;\n\t  t['Ereversedcyrillic'] = 0x042D;\n\t  t['Escyrillic'] = 0x0421;\n\t  t['Esdescendercyrillic'] = 0x04AA;\n\t  t['Esh'] = 0x01A9;\n\t  t['Esmall'] = 0xF765;\n\t  t['Eta'] = 0x0397;\n\t  t['Etarmenian'] = 0x0538;\n\t  t['Etatonos'] = 0x0389;\n\t  t['Eth'] = 0x00D0;\n\t  t['Ethsmall'] = 0xF7F0;\n\t  t['Etilde'] = 0x1EBC;\n\t  t['Etildebelow'] = 0x1E1A;\n\t  t['Euro'] = 0x20AC;\n\t  t['Ezh'] = 0x01B7;\n\t  t['Ezhcaron'] = 0x01EE;\n\t  t['Ezhreversed'] = 0x01B8;\n\t  t['F'] = 0x0046;\n\t  t['Fcircle'] = 0x24BB;\n\t  t['Fdotaccent'] = 0x1E1E;\n\t  t['Feharmenian'] = 0x0556;\n\t  t['Feicoptic'] = 0x03E4;\n\t  t['Fhook'] = 0x0191;\n\t  t['Fitacyrillic'] = 0x0472;\n\t  t['Fiveroman'] = 0x2164;\n\t  t['Fmonospace'] = 0xFF26;\n\t  t['Fourroman'] = 0x2163;\n\t  t['Fsmall'] = 0xF766;\n\t  t['G'] = 0x0047;\n\t  t['GBsquare'] = 0x3387;\n\t  t['Gacute'] = 0x01F4;\n\t  t['Gamma'] = 0x0393;\n\t  t['Gammaafrican'] = 0x0194;\n\t  t['Gangiacoptic'] = 0x03EA;\n\t  t['Gbreve'] = 0x011E;\n\t  t['Gcaron'] = 0x01E6;\n\t  t['Gcedilla'] = 0x0122;\n\t  t['Gcircle'] = 0x24BC;\n\t  t['Gcircumflex'] = 0x011C;\n\t  t['Gcommaaccent'] = 0x0122;\n\t  t['Gdot'] = 0x0120;\n\t  t['Gdotaccent'] = 0x0120;\n\t  t['Gecyrillic'] = 0x0413;\n\t  t['Ghadarmenian'] = 0x0542;\n\t  t['Ghemiddlehookcyrillic'] = 0x0494;\n\t  t['Ghestrokecyrillic'] = 0x0492;\n\t  t['Gheupturncyrillic'] = 0x0490;\n\t  t['Ghook'] = 0x0193;\n\t  t['Gimarmenian'] = 0x0533;\n\t  t['Gjecyrillic'] = 0x0403;\n\t  t['Gmacron'] = 0x1E20;\n\t  t['Gmonospace'] = 0xFF27;\n\t  t['Grave'] = 0xF6CE;\n\t  t['Gravesmall'] = 0xF760;\n\t  t['Gsmall'] = 0xF767;\n\t  t['Gsmallhook'] = 0x029B;\n\t  t['Gstroke'] = 0x01E4;\n\t  t['H'] = 0x0048;\n\t  t['H18533'] = 0x25CF;\n\t  t['H18543'] = 0x25AA;\n\t  t['H18551'] = 0x25AB;\n\t  t['H22073'] = 0x25A1;\n\t  t['HPsquare'] = 0x33CB;\n\t  t['Haabkhasiancyrillic'] = 0x04A8;\n\t  t['Hadescendercyrillic'] = 0x04B2;\n\t  t['Hardsigncyrillic'] = 0x042A;\n\t  t['Hbar'] = 0x0126;\n\t  t['Hbrevebelow'] = 0x1E2A;\n\t  t['Hcedilla'] = 0x1E28;\n\t  t['Hcircle'] = 0x24BD;\n\t  t['Hcircumflex'] = 0x0124;\n\t  t['Hdieresis'] = 0x1E26;\n\t  t['Hdotaccent'] = 0x1E22;\n\t  t['Hdotbelow'] = 0x1E24;\n\t  t['Hmonospace'] = 0xFF28;\n\t  t['Hoarmenian'] = 0x0540;\n\t  t['Horicoptic'] = 0x03E8;\n\t  t['Hsmall'] = 0xF768;\n\t  t['Hungarumlaut'] = 0xF6CF;\n\t  t['Hungarumlautsmall'] = 0xF6F8;\n\t  t['Hzsquare'] = 0x3390;\n\t  t['I'] = 0x0049;\n\t  t['IAcyrillic'] = 0x042F;\n\t  t['IJ'] = 0x0132;\n\t  t['IUcyrillic'] = 0x042E;\n\t  t['Iacute'] = 0x00CD;\n\t  t['Iacutesmall'] = 0xF7ED;\n\t  t['Ibreve'] = 0x012C;\n\t  t['Icaron'] = 0x01CF;\n\t  t['Icircle'] = 0x24BE;\n\t  t['Icircumflex'] = 0x00CE;\n\t  t['Icircumflexsmall'] = 0xF7EE;\n\t  t['Icyrillic'] = 0x0406;\n\t  t['Idblgrave'] = 0x0208;\n\t  t['Idieresis'] = 0x00CF;\n\t  t['Idieresisacute'] = 0x1E2E;\n\t  t['Idieresiscyrillic'] = 0x04E4;\n\t  t['Idieresissmall'] = 0xF7EF;\n\t  t['Idot'] = 0x0130;\n\t  t['Idotaccent'] = 0x0130;\n\t  t['Idotbelow'] = 0x1ECA;\n\t  t['Iebrevecyrillic'] = 0x04D6;\n\t  t['Iecyrillic'] = 0x0415;\n\t  t['Ifraktur'] = 0x2111;\n\t  t['Igrave'] = 0x00CC;\n\t  t['Igravesmall'] = 0xF7EC;\n\t  t['Ihookabove'] = 0x1EC8;\n\t  t['Iicyrillic'] = 0x0418;\n\t  t['Iinvertedbreve'] = 0x020A;\n\t  t['Iishortcyrillic'] = 0x0419;\n\t  t['Imacron'] = 0x012A;\n\t  t['Imacroncyrillic'] = 0x04E2;\n\t  t['Imonospace'] = 0xFF29;\n\t  t['Iniarmenian'] = 0x053B;\n\t  t['Iocyrillic'] = 0x0401;\n\t  t['Iogonek'] = 0x012E;\n\t  t['Iota'] = 0x0399;\n\t  t['Iotaafrican'] = 0x0196;\n\t  t['Iotadieresis'] = 0x03AA;\n\t  t['Iotatonos'] = 0x038A;\n\t  t['Ismall'] = 0xF769;\n\t  t['Istroke'] = 0x0197;\n\t  t['Itilde'] = 0x0128;\n\t  t['Itildebelow'] = 0x1E2C;\n\t  t['Izhitsacyrillic'] = 0x0474;\n\t  t['Izhitsadblgravecyrillic'] = 0x0476;\n\t  t['J'] = 0x004A;\n\t  t['Jaarmenian'] = 0x0541;\n\t  t['Jcircle'] = 0x24BF;\n\t  t['Jcircumflex'] = 0x0134;\n\t  t['Jecyrillic'] = 0x0408;\n\t  t['Jheharmenian'] = 0x054B;\n\t  t['Jmonospace'] = 0xFF2A;\n\t  t['Jsmall'] = 0xF76A;\n\t  t['K'] = 0x004B;\n\t  t['KBsquare'] = 0x3385;\n\t  t['KKsquare'] = 0x33CD;\n\t  t['Kabashkircyrillic'] = 0x04A0;\n\t  t['Kacute'] = 0x1E30;\n\t  t['Kacyrillic'] = 0x041A;\n\t  t['Kadescendercyrillic'] = 0x049A;\n\t  t['Kahookcyrillic'] = 0x04C3;\n\t  t['Kappa'] = 0x039A;\n\t  t['Kastrokecyrillic'] = 0x049E;\n\t  t['Kaverticalstrokecyrillic'] = 0x049C;\n\t  t['Kcaron'] = 0x01E8;\n\t  t['Kcedilla'] = 0x0136;\n\t  t['Kcircle'] = 0x24C0;\n\t  t['Kcommaaccent'] = 0x0136;\n\t  t['Kdotbelow'] = 0x1E32;\n\t  t['Keharmenian'] = 0x0554;\n\t  t['Kenarmenian'] = 0x053F;\n\t  t['Khacyrillic'] = 0x0425;\n\t  t['Kheicoptic'] = 0x03E6;\n\t  t['Khook'] = 0x0198;\n\t  t['Kjecyrillic'] = 0x040C;\n\t  t['Klinebelow'] = 0x1E34;\n\t  t['Kmonospace'] = 0xFF2B;\n\t  t['Koppacyrillic'] = 0x0480;\n\t  t['Koppagreek'] = 0x03DE;\n\t  t['Ksicyrillic'] = 0x046E;\n\t  t['Ksmall'] = 0xF76B;\n\t  t['L'] = 0x004C;\n\t  t['LJ'] = 0x01C7;\n\t  t['LL'] = 0xF6BF;\n\t  t['Lacute'] = 0x0139;\n\t  t['Lambda'] = 0x039B;\n\t  t['Lcaron'] = 0x013D;\n\t  t['Lcedilla'] = 0x013B;\n\t  t['Lcircle'] = 0x24C1;\n\t  t['Lcircumflexbelow'] = 0x1E3C;\n\t  t['Lcommaaccent'] = 0x013B;\n\t  t['Ldot'] = 0x013F;\n\t  t['Ldotaccent'] = 0x013F;\n\t  t['Ldotbelow'] = 0x1E36;\n\t  t['Ldotbelowmacron'] = 0x1E38;\n\t  t['Liwnarmenian'] = 0x053C;\n\t  t['Lj'] = 0x01C8;\n\t  t['Ljecyrillic'] = 0x0409;\n\t  t['Llinebelow'] = 0x1E3A;\n\t  t['Lmonospace'] = 0xFF2C;\n\t  t['Lslash'] = 0x0141;\n\t  t['Lslashsmall'] = 0xF6F9;\n\t  t['Lsmall'] = 0xF76C;\n\t  t['M'] = 0x004D;\n\t  t['MBsquare'] = 0x3386;\n\t  t['Macron'] = 0xF6D0;\n\t  t['Macronsmall'] = 0xF7AF;\n\t  t['Macute'] = 0x1E3E;\n\t  t['Mcircle'] = 0x24C2;\n\t  t['Mdotaccent'] = 0x1E40;\n\t  t['Mdotbelow'] = 0x1E42;\n\t  t['Menarmenian'] = 0x0544;\n\t  t['Mmonospace'] = 0xFF2D;\n\t  t['Msmall'] = 0xF76D;\n\t  t['Mturned'] = 0x019C;\n\t  t['Mu'] = 0x039C;\n\t  t['N'] = 0x004E;\n\t  t['NJ'] = 0x01CA;\n\t  t['Nacute'] = 0x0143;\n\t  t['Ncaron'] = 0x0147;\n\t  t['Ncedilla'] = 0x0145;\n\t  t['Ncircle'] = 0x24C3;\n\t  t['Ncircumflexbelow'] = 0x1E4A;\n\t  t['Ncommaaccent'] = 0x0145;\n\t  t['Ndotaccent'] = 0x1E44;\n\t  t['Ndotbelow'] = 0x1E46;\n\t  t['Nhookleft'] = 0x019D;\n\t  t['Nineroman'] = 0x2168;\n\t  t['Nj'] = 0x01CB;\n\t  t['Njecyrillic'] = 0x040A;\n\t  t['Nlinebelow'] = 0x1E48;\n\t  t['Nmonospace'] = 0xFF2E;\n\t  t['Nowarmenian'] = 0x0546;\n\t  t['Nsmall'] = 0xF76E;\n\t  t['Ntilde'] = 0x00D1;\n\t  t['Ntildesmall'] = 0xF7F1;\n\t  t['Nu'] = 0x039D;\n\t  t['O'] = 0x004F;\n\t  t['OE'] = 0x0152;\n\t  t['OEsmall'] = 0xF6FA;\n\t  t['Oacute'] = 0x00D3;\n\t  t['Oacutesmall'] = 0xF7F3;\n\t  t['Obarredcyrillic'] = 0x04E8;\n\t  t['Obarreddieresiscyrillic'] = 0x04EA;\n\t  t['Obreve'] = 0x014E;\n\t  t['Ocaron'] = 0x01D1;\n\t  t['Ocenteredtilde'] = 0x019F;\n\t  t['Ocircle'] = 0x24C4;\n\t  t['Ocircumflex'] = 0x00D4;\n\t  t['Ocircumflexacute'] = 0x1ED0;\n\t  t['Ocircumflexdotbelow'] = 0x1ED8;\n\t  t['Ocircumflexgrave'] = 0x1ED2;\n\t  t['Ocircumflexhookabove'] = 0x1ED4;\n\t  t['Ocircumflexsmall'] = 0xF7F4;\n\t  t['Ocircumflextilde'] = 0x1ED6;\n\t  t['Ocyrillic'] = 0x041E;\n\t  t['Odblacute'] = 0x0150;\n\t  t['Odblgrave'] = 0x020C;\n\t  t['Odieresis'] = 0x00D6;\n\t  t['Odieresiscyrillic'] = 0x04E6;\n\t  t['Odieresissmall'] = 0xF7F6;\n\t  t['Odotbelow'] = 0x1ECC;\n\t  t['Ogoneksmall'] = 0xF6FB;\n\t  t['Ograve'] = 0x00D2;\n\t  t['Ogravesmall'] = 0xF7F2;\n\t  t['Oharmenian'] = 0x0555;\n\t  t['Ohm'] = 0x2126;\n\t  t['Ohookabove'] = 0x1ECE;\n\t  t['Ohorn'] = 0x01A0;\n\t  t['Ohornacute'] = 0x1EDA;\n\t  t['Ohorndotbelow'] = 0x1EE2;\n\t  t['Ohorngrave'] = 0x1EDC;\n\t  t['Ohornhookabove'] = 0x1EDE;\n\t  t['Ohorntilde'] = 0x1EE0;\n\t  t['Ohungarumlaut'] = 0x0150;\n\t  t['Oi'] = 0x01A2;\n\t  t['Oinvertedbreve'] = 0x020E;\n\t  t['Omacron'] = 0x014C;\n\t  t['Omacronacute'] = 0x1E52;\n\t  t['Omacrongrave'] = 0x1E50;\n\t  t['Omega'] = 0x2126;\n\t  t['Omegacyrillic'] = 0x0460;\n\t  t['Omegagreek'] = 0x03A9;\n\t  t['Omegaroundcyrillic'] = 0x047A;\n\t  t['Omegatitlocyrillic'] = 0x047C;\n\t  t['Omegatonos'] = 0x038F;\n\t  t['Omicron'] = 0x039F;\n\t  t['Omicrontonos'] = 0x038C;\n\t  t['Omonospace'] = 0xFF2F;\n\t  t['Oneroman'] = 0x2160;\n\t  t['Oogonek'] = 0x01EA;\n\t  t['Oogonekmacron'] = 0x01EC;\n\t  t['Oopen'] = 0x0186;\n\t  t['Oslash'] = 0x00D8;\n\t  t['Oslashacute'] = 0x01FE;\n\t  t['Oslashsmall'] = 0xF7F8;\n\t  t['Osmall'] = 0xF76F;\n\t  t['Ostrokeacute'] = 0x01FE;\n\t  t['Otcyrillic'] = 0x047E;\n\t  t['Otilde'] = 0x00D5;\n\t  t['Otildeacute'] = 0x1E4C;\n\t  t['Otildedieresis'] = 0x1E4E;\n\t  t['Otildesmall'] = 0xF7F5;\n\t  t['P'] = 0x0050;\n\t  t['Pacute'] = 0x1E54;\n\t  t['Pcircle'] = 0x24C5;\n\t  t['Pdotaccent'] = 0x1E56;\n\t  t['Pecyrillic'] = 0x041F;\n\t  t['Peharmenian'] = 0x054A;\n\t  t['Pemiddlehookcyrillic'] = 0x04A6;\n\t  t['Phi'] = 0x03A6;\n\t  t['Phook'] = 0x01A4;\n\t  t['Pi'] = 0x03A0;\n\t  t['Piwrarmenian'] = 0x0553;\n\t  t['Pmonospace'] = 0xFF30;\n\t  t['Psi'] = 0x03A8;\n\t  t['Psicyrillic'] = 0x0470;\n\t  t['Psmall'] = 0xF770;\n\t  t['Q'] = 0x0051;\n\t  t['Qcircle'] = 0x24C6;\n\t  t['Qmonospace'] = 0xFF31;\n\t  t['Qsmall'] = 0xF771;\n\t  t['R'] = 0x0052;\n\t  t['Raarmenian'] = 0x054C;\n\t  t['Racute'] = 0x0154;\n\t  t['Rcaron'] = 0x0158;\n\t  t['Rcedilla'] = 0x0156;\n\t  t['Rcircle'] = 0x24C7;\n\t  t['Rcommaaccent'] = 0x0156;\n\t  t['Rdblgrave'] = 0x0210;\n\t  t['Rdotaccent'] = 0x1E58;\n\t  t['Rdotbelow'] = 0x1E5A;\n\t  t['Rdotbelowmacron'] = 0x1E5C;\n\t  t['Reharmenian'] = 0x0550;\n\t  t['Rfraktur'] = 0x211C;\n\t  t['Rho'] = 0x03A1;\n\t  t['Ringsmall'] = 0xF6FC;\n\t  t['Rinvertedbreve'] = 0x0212;\n\t  t['Rlinebelow'] = 0x1E5E;\n\t  t['Rmonospace'] = 0xFF32;\n\t  t['Rsmall'] = 0xF772;\n\t  t['Rsmallinverted'] = 0x0281;\n\t  t['Rsmallinvertedsuperior'] = 0x02B6;\n\t  t['S'] = 0x0053;\n\t  t['SF010000'] = 0x250C;\n\t  t['SF020000'] = 0x2514;\n\t  t['SF030000'] = 0x2510;\n\t  t['SF040000'] = 0x2518;\n\t  t['SF050000'] = 0x253C;\n\t  t['SF060000'] = 0x252C;\n\t  t['SF070000'] = 0x2534;\n\t  t['SF080000'] = 0x251C;\n\t  t['SF090000'] = 0x2524;\n\t  t['SF100000'] = 0x2500;\n\t  t['SF110000'] = 0x2502;\n\t  t['SF190000'] = 0x2561;\n\t  t['SF200000'] = 0x2562;\n\t  t['SF210000'] = 0x2556;\n\t  t['SF220000'] = 0x2555;\n\t  t['SF230000'] = 0x2563;\n\t  t['SF240000'] = 0x2551;\n\t  t['SF250000'] = 0x2557;\n\t  t['SF260000'] = 0x255D;\n\t  t['SF270000'] = 0x255C;\n\t  t['SF280000'] = 0x255B;\n\t  t['SF360000'] = 0x255E;\n\t  t['SF370000'] = 0x255F;\n\t  t['SF380000'] = 0x255A;\n\t  t['SF390000'] = 0x2554;\n\t  t['SF400000'] = 0x2569;\n\t  t['SF410000'] = 0x2566;\n\t  t['SF420000'] = 0x2560;\n\t  t['SF430000'] = 0x2550;\n\t  t['SF440000'] = 0x256C;\n\t  t['SF450000'] = 0x2567;\n\t  t['SF460000'] = 0x2568;\n\t  t['SF470000'] = 0x2564;\n\t  t['SF480000'] = 0x2565;\n\t  t['SF490000'] = 0x2559;\n\t  t['SF500000'] = 0x2558;\n\t  t['SF510000'] = 0x2552;\n\t  t['SF520000'] = 0x2553;\n\t  t['SF530000'] = 0x256B;\n\t  t['SF540000'] = 0x256A;\n\t  t['Sacute'] = 0x015A;\n\t  t['Sacutedotaccent'] = 0x1E64;\n\t  t['Sampigreek'] = 0x03E0;\n\t  t['Scaron'] = 0x0160;\n\t  t['Scarondotaccent'] = 0x1E66;\n\t  t['Scaronsmall'] = 0xF6FD;\n\t  t['Scedilla'] = 0x015E;\n\t  t['Schwa'] = 0x018F;\n\t  t['Schwacyrillic'] = 0x04D8;\n\t  t['Schwadieresiscyrillic'] = 0x04DA;\n\t  t['Scircle'] = 0x24C8;\n\t  t['Scircumflex'] = 0x015C;\n\t  t['Scommaaccent'] = 0x0218;\n\t  t['Sdotaccent'] = 0x1E60;\n\t  t['Sdotbelow'] = 0x1E62;\n\t  t['Sdotbelowdotaccent'] = 0x1E68;\n\t  t['Seharmenian'] = 0x054D;\n\t  t['Sevenroman'] = 0x2166;\n\t  t['Shaarmenian'] = 0x0547;\n\t  t['Shacyrillic'] = 0x0428;\n\t  t['Shchacyrillic'] = 0x0429;\n\t  t['Sheicoptic'] = 0x03E2;\n\t  t['Shhacyrillic'] = 0x04BA;\n\t  t['Shimacoptic'] = 0x03EC;\n\t  t['Sigma'] = 0x03A3;\n\t  t['Sixroman'] = 0x2165;\n\t  t['Smonospace'] = 0xFF33;\n\t  t['Softsigncyrillic'] = 0x042C;\n\t  t['Ssmall'] = 0xF773;\n\t  t['Stigmagreek'] = 0x03DA;\n\t  t['T'] = 0x0054;\n\t  t['Tau'] = 0x03A4;\n\t  t['Tbar'] = 0x0166;\n\t  t['Tcaron'] = 0x0164;\n\t  t['Tcedilla'] = 0x0162;\n\t  t['Tcircle'] = 0x24C9;\n\t  t['Tcircumflexbelow'] = 0x1E70;\n\t  t['Tcommaaccent'] = 0x0162;\n\t  t['Tdotaccent'] = 0x1E6A;\n\t  t['Tdotbelow'] = 0x1E6C;\n\t  t['Tecyrillic'] = 0x0422;\n\t  t['Tedescendercyrillic'] = 0x04AC;\n\t  t['Tenroman'] = 0x2169;\n\t  t['Tetsecyrillic'] = 0x04B4;\n\t  t['Theta'] = 0x0398;\n\t  t['Thook'] = 0x01AC;\n\t  t['Thorn'] = 0x00DE;\n\t  t['Thornsmall'] = 0xF7FE;\n\t  t['Threeroman'] = 0x2162;\n\t  t['Tildesmall'] = 0xF6FE;\n\t  t['Tiwnarmenian'] = 0x054F;\n\t  t['Tlinebelow'] = 0x1E6E;\n\t  t['Tmonospace'] = 0xFF34;\n\t  t['Toarmenian'] = 0x0539;\n\t  t['Tonefive'] = 0x01BC;\n\t  t['Tonesix'] = 0x0184;\n\t  t['Tonetwo'] = 0x01A7;\n\t  t['Tretroflexhook'] = 0x01AE;\n\t  t['Tsecyrillic'] = 0x0426;\n\t  t['Tshecyrillic'] = 0x040B;\n\t  t['Tsmall'] = 0xF774;\n\t  t['Twelveroman'] = 0x216B;\n\t  t['Tworoman'] = 0x2161;\n\t  t['U'] = 0x0055;\n\t  t['Uacute'] = 0x00DA;\n\t  t['Uacutesmall'] = 0xF7FA;\n\t  t['Ubreve'] = 0x016C;\n\t  t['Ucaron'] = 0x01D3;\n\t  t['Ucircle'] = 0x24CA;\n\t  t['Ucircumflex'] = 0x00DB;\n\t  t['Ucircumflexbelow'] = 0x1E76;\n\t  t['Ucircumflexsmall'] = 0xF7FB;\n\t  t['Ucyrillic'] = 0x0423;\n\t  t['Udblacute'] = 0x0170;\n\t  t['Udblgrave'] = 0x0214;\n\t  t['Udieresis'] = 0x00DC;\n\t  t['Udieresisacute'] = 0x01D7;\n\t  t['Udieresisbelow'] = 0x1E72;\n\t  t['Udieresiscaron'] = 0x01D9;\n\t  t['Udieresiscyrillic'] = 0x04F0;\n\t  t['Udieresisgrave'] = 0x01DB;\n\t  t['Udieresismacron'] = 0x01D5;\n\t  t['Udieresissmall'] = 0xF7FC;\n\t  t['Udotbelow'] = 0x1EE4;\n\t  t['Ugrave'] = 0x00D9;\n\t  t['Ugravesmall'] = 0xF7F9;\n\t  t['Uhookabove'] = 0x1EE6;\n\t  t['Uhorn'] = 0x01AF;\n\t  t['Uhornacute'] = 0x1EE8;\n\t  t['Uhorndotbelow'] = 0x1EF0;\n\t  t['Uhorngrave'] = 0x1EEA;\n\t  t['Uhornhookabove'] = 0x1EEC;\n\t  t['Uhorntilde'] = 0x1EEE;\n\t  t['Uhungarumlaut'] = 0x0170;\n\t  t['Uhungarumlautcyrillic'] = 0x04F2;\n\t  t['Uinvertedbreve'] = 0x0216;\n\t  t['Ukcyrillic'] = 0x0478;\n\t  t['Umacron'] = 0x016A;\n\t  t['Umacroncyrillic'] = 0x04EE;\n\t  t['Umacrondieresis'] = 0x1E7A;\n\t  t['Umonospace'] = 0xFF35;\n\t  t['Uogonek'] = 0x0172;\n\t  t['Upsilon'] = 0x03A5;\n\t  t['Upsilon1'] = 0x03D2;\n\t  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n\t  t['Upsilonafrican'] = 0x01B1;\n\t  t['Upsilondieresis'] = 0x03AB;\n\t  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n\t  t['Upsilonhooksymbol'] = 0x03D2;\n\t  t['Upsilontonos'] = 0x038E;\n\t  t['Uring'] = 0x016E;\n\t  t['Ushortcyrillic'] = 0x040E;\n\t  t['Usmall'] = 0xF775;\n\t  t['Ustraightcyrillic'] = 0x04AE;\n\t  t['Ustraightstrokecyrillic'] = 0x04B0;\n\t  t['Utilde'] = 0x0168;\n\t  t['Utildeacute'] = 0x1E78;\n\t  t['Utildebelow'] = 0x1E74;\n\t  t['V'] = 0x0056;\n\t  t['Vcircle'] = 0x24CB;\n\t  t['Vdotbelow'] = 0x1E7E;\n\t  t['Vecyrillic'] = 0x0412;\n\t  t['Vewarmenian'] = 0x054E;\n\t  t['Vhook'] = 0x01B2;\n\t  t['Vmonospace'] = 0xFF36;\n\t  t['Voarmenian'] = 0x0548;\n\t  t['Vsmall'] = 0xF776;\n\t  t['Vtilde'] = 0x1E7C;\n\t  t['W'] = 0x0057;\n\t  t['Wacute'] = 0x1E82;\n\t  t['Wcircle'] = 0x24CC;\n\t  t['Wcircumflex'] = 0x0174;\n\t  t['Wdieresis'] = 0x1E84;\n\t  t['Wdotaccent'] = 0x1E86;\n\t  t['Wdotbelow'] = 0x1E88;\n\t  t['Wgrave'] = 0x1E80;\n\t  t['Wmonospace'] = 0xFF37;\n\t  t['Wsmall'] = 0xF777;\n\t  t['X'] = 0x0058;\n\t  t['Xcircle'] = 0x24CD;\n\t  t['Xdieresis'] = 0x1E8C;\n\t  t['Xdotaccent'] = 0x1E8A;\n\t  t['Xeharmenian'] = 0x053D;\n\t  t['Xi'] = 0x039E;\n\t  t['Xmonospace'] = 0xFF38;\n\t  t['Xsmall'] = 0xF778;\n\t  t['Y'] = 0x0059;\n\t  t['Yacute'] = 0x00DD;\n\t  t['Yacutesmall'] = 0xF7FD;\n\t  t['Yatcyrillic'] = 0x0462;\n\t  t['Ycircle'] = 0x24CE;\n\t  t['Ycircumflex'] = 0x0176;\n\t  t['Ydieresis'] = 0x0178;\n\t  t['Ydieresissmall'] = 0xF7FF;\n\t  t['Ydotaccent'] = 0x1E8E;\n\t  t['Ydotbelow'] = 0x1EF4;\n\t  t['Yericyrillic'] = 0x042B;\n\t  t['Yerudieresiscyrillic'] = 0x04F8;\n\t  t['Ygrave'] = 0x1EF2;\n\t  t['Yhook'] = 0x01B3;\n\t  t['Yhookabove'] = 0x1EF6;\n\t  t['Yiarmenian'] = 0x0545;\n\t  t['Yicyrillic'] = 0x0407;\n\t  t['Yiwnarmenian'] = 0x0552;\n\t  t['Ymonospace'] = 0xFF39;\n\t  t['Ysmall'] = 0xF779;\n\t  t['Ytilde'] = 0x1EF8;\n\t  t['Yusbigcyrillic'] = 0x046A;\n\t  t['Yusbigiotifiedcyrillic'] = 0x046C;\n\t  t['Yuslittlecyrillic'] = 0x0466;\n\t  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n\t  t['Z'] = 0x005A;\n\t  t['Zaarmenian'] = 0x0536;\n\t  t['Zacute'] = 0x0179;\n\t  t['Zcaron'] = 0x017D;\n\t  t['Zcaronsmall'] = 0xF6FF;\n\t  t['Zcircle'] = 0x24CF;\n\t  t['Zcircumflex'] = 0x1E90;\n\t  t['Zdot'] = 0x017B;\n\t  t['Zdotaccent'] = 0x017B;\n\t  t['Zdotbelow'] = 0x1E92;\n\t  t['Zecyrillic'] = 0x0417;\n\t  t['Zedescendercyrillic'] = 0x0498;\n\t  t['Zedieresiscyrillic'] = 0x04DE;\n\t  t['Zeta'] = 0x0396;\n\t  t['Zhearmenian'] = 0x053A;\n\t  t['Zhebrevecyrillic'] = 0x04C1;\n\t  t['Zhecyrillic'] = 0x0416;\n\t  t['Zhedescendercyrillic'] = 0x0496;\n\t  t['Zhedieresiscyrillic'] = 0x04DC;\n\t  t['Zlinebelow'] = 0x1E94;\n\t  t['Zmonospace'] = 0xFF3A;\n\t  t['Zsmall'] = 0xF77A;\n\t  t['Zstroke'] = 0x01B5;\n\t  t['a'] = 0x0061;\n\t  t['aabengali'] = 0x0986;\n\t  t['aacute'] = 0x00E1;\n\t  t['aadeva'] = 0x0906;\n\t  t['aagujarati'] = 0x0A86;\n\t  t['aagurmukhi'] = 0x0A06;\n\t  t['aamatragurmukhi'] = 0x0A3E;\n\t  t['aarusquare'] = 0x3303;\n\t  t['aavowelsignbengali'] = 0x09BE;\n\t  t['aavowelsigndeva'] = 0x093E;\n\t  t['aavowelsigngujarati'] = 0x0ABE;\n\t  t['abbreviationmarkarmenian'] = 0x055F;\n\t  t['abbreviationsigndeva'] = 0x0970;\n\t  t['abengali'] = 0x0985;\n\t  t['abopomofo'] = 0x311A;\n\t  t['abreve'] = 0x0103;\n\t  t['abreveacute'] = 0x1EAF;\n\t  t['abrevecyrillic'] = 0x04D1;\n\t  t['abrevedotbelow'] = 0x1EB7;\n\t  t['abrevegrave'] = 0x1EB1;\n\t  t['abrevehookabove'] = 0x1EB3;\n\t  t['abrevetilde'] = 0x1EB5;\n\t  t['acaron'] = 0x01CE;\n\t  t['acircle'] = 0x24D0;\n\t  t['acircumflex'] = 0x00E2;\n\t  t['acircumflexacute'] = 0x1EA5;\n\t  t['acircumflexdotbelow'] = 0x1EAD;\n\t  t['acircumflexgrave'] = 0x1EA7;\n\t  t['acircumflexhookabove'] = 0x1EA9;\n\t  t['acircumflextilde'] = 0x1EAB;\n\t  t['acute'] = 0x00B4;\n\t  t['acutebelowcmb'] = 0x0317;\n\t  t['acutecmb'] = 0x0301;\n\t  t['acutecomb'] = 0x0301;\n\t  t['acutedeva'] = 0x0954;\n\t  t['acutelowmod'] = 0x02CF;\n\t  t['acutetonecmb'] = 0x0341;\n\t  t['acyrillic'] = 0x0430;\n\t  t['adblgrave'] = 0x0201;\n\t  t['addakgurmukhi'] = 0x0A71;\n\t  t['adeva'] = 0x0905;\n\t  t['adieresis'] = 0x00E4;\n\t  t['adieresiscyrillic'] = 0x04D3;\n\t  t['adieresismacron'] = 0x01DF;\n\t  t['adotbelow'] = 0x1EA1;\n\t  t['adotmacron'] = 0x01E1;\n\t  t['ae'] = 0x00E6;\n\t  t['aeacute'] = 0x01FD;\n\t  t['aekorean'] = 0x3150;\n\t  t['aemacron'] = 0x01E3;\n\t  t['afii00208'] = 0x2015;\n\t  t['afii08941'] = 0x20A4;\n\t  t['afii10017'] = 0x0410;\n\t  t['afii10018'] = 0x0411;\n\t  t['afii10019'] = 0x0412;\n\t  t['afii10020'] = 0x0413;\n\t  t['afii10021'] = 0x0414;\n\t  t['afii10022'] = 0x0415;\n\t  t['afii10023'] = 0x0401;\n\t  t['afii10024'] = 0x0416;\n\t  t['afii10025'] = 0x0417;\n\t  t['afii10026'] = 0x0418;\n\t  t['afii10027'] = 0x0419;\n\t  t['afii10028'] = 0x041A;\n\t  t['afii10029'] = 0x041B;\n\t  t['afii10030'] = 0x041C;\n\t  t['afii10031'] = 0x041D;\n\t  t['afii10032'] = 0x041E;\n\t  t['afii10033'] = 0x041F;\n\t  t['afii10034'] = 0x0420;\n\t  t['afii10035'] = 0x0421;\n\t  t['afii10036'] = 0x0422;\n\t  t['afii10037'] = 0x0423;\n\t  t['afii10038'] = 0x0424;\n\t  t['afii10039'] = 0x0425;\n\t  t['afii10040'] = 0x0426;\n\t  t['afii10041'] = 0x0427;\n\t  t['afii10042'] = 0x0428;\n\t  t['afii10043'] = 0x0429;\n\t  t['afii10044'] = 0x042A;\n\t  t['afii10045'] = 0x042B;\n\t  t['afii10046'] = 0x042C;\n\t  t['afii10047'] = 0x042D;\n\t  t['afii10048'] = 0x042E;\n\t  t['afii10049'] = 0x042F;\n\t  t['afii10050'] = 0x0490;\n\t  t['afii10051'] = 0x0402;\n\t  t['afii10052'] = 0x0403;\n\t  t['afii10053'] = 0x0404;\n\t  t['afii10054'] = 0x0405;\n\t  t['afii10055'] = 0x0406;\n\t  t['afii10056'] = 0x0407;\n\t  t['afii10057'] = 0x0408;\n\t  t['afii10058'] = 0x0409;\n\t  t['afii10059'] = 0x040A;\n\t  t['afii10060'] = 0x040B;\n\t  t['afii10061'] = 0x040C;\n\t  t['afii10062'] = 0x040E;\n\t  t['afii10063'] = 0xF6C4;\n\t  t['afii10064'] = 0xF6C5;\n\t  t['afii10065'] = 0x0430;\n\t  t['afii10066'] = 0x0431;\n\t  t['afii10067'] = 0x0432;\n\t  t['afii10068'] = 0x0433;\n\t  t['afii10069'] = 0x0434;\n\t  t['afii10070'] = 0x0435;\n\t  t['afii10071'] = 0x0451;\n\t  t['afii10072'] = 0x0436;\n\t  t['afii10073'] = 0x0437;\n\t  t['afii10074'] = 0x0438;\n\t  t['afii10075'] = 0x0439;\n\t  t['afii10076'] = 0x043A;\n\t  t['afii10077'] = 0x043B;\n\t  t['afii10078'] = 0x043C;\n\t  t['afii10079'] = 0x043D;\n\t  t['afii10080'] = 0x043E;\n\t  t['afii10081'] = 0x043F;\n\t  t['afii10082'] = 0x0440;\n\t  t['afii10083'] = 0x0441;\n\t  t['afii10084'] = 0x0442;\n\t  t['afii10085'] = 0x0443;\n\t  t['afii10086'] = 0x0444;\n\t  t['afii10087'] = 0x0445;\n\t  t['afii10088'] = 0x0446;\n\t  t['afii10089'] = 0x0447;\n\t  t['afii10090'] = 0x0448;\n\t  t['afii10091'] = 0x0449;\n\t  t['afii10092'] = 0x044A;\n\t  t['afii10093'] = 0x044B;\n\t  t['afii10094'] = 0x044C;\n\t  t['afii10095'] = 0x044D;\n\t  t['afii10096'] = 0x044E;\n\t  t['afii10097'] = 0x044F;\n\t  t['afii10098'] = 0x0491;\n\t  t['afii10099'] = 0x0452;\n\t  t['afii10100'] = 0x0453;\n\t  t['afii10101'] = 0x0454;\n\t  t['afii10102'] = 0x0455;\n\t  t['afii10103'] = 0x0456;\n\t  t['afii10104'] = 0x0457;\n\t  t['afii10105'] = 0x0458;\n\t  t['afii10106'] = 0x0459;\n\t  t['afii10107'] = 0x045A;\n\t  t['afii10108'] = 0x045B;\n\t  t['afii10109'] = 0x045C;\n\t  t['afii10110'] = 0x045E;\n\t  t['afii10145'] = 0x040F;\n\t  t['afii10146'] = 0x0462;\n\t  t['afii10147'] = 0x0472;\n\t  t['afii10148'] = 0x0474;\n\t  t['afii10192'] = 0xF6C6;\n\t  t['afii10193'] = 0x045F;\n\t  t['afii10194'] = 0x0463;\n\t  t['afii10195'] = 0x0473;\n\t  t['afii10196'] = 0x0475;\n\t  t['afii10831'] = 0xF6C7;\n\t  t['afii10832'] = 0xF6C8;\n\t  t['afii10846'] = 0x04D9;\n\t  t['afii299'] = 0x200E;\n\t  t['afii300'] = 0x200F;\n\t  t['afii301'] = 0x200D;\n\t  t['afii57381'] = 0x066A;\n\t  t['afii57388'] = 0x060C;\n\t  t['afii57392'] = 0x0660;\n\t  t['afii57393'] = 0x0661;\n\t  t['afii57394'] = 0x0662;\n\t  t['afii57395'] = 0x0663;\n\t  t['afii57396'] = 0x0664;\n\t  t['afii57397'] = 0x0665;\n\t  t['afii57398'] = 0x0666;\n\t  t['afii57399'] = 0x0667;\n\t  t['afii57400'] = 0x0668;\n\t  t['afii57401'] = 0x0669;\n\t  t['afii57403'] = 0x061B;\n\t  t['afii57407'] = 0x061F;\n\t  t['afii57409'] = 0x0621;\n\t  t['afii57410'] = 0x0622;\n\t  t['afii57411'] = 0x0623;\n\t  t['afii57412'] = 0x0624;\n\t  t['afii57413'] = 0x0625;\n\t  t['afii57414'] = 0x0626;\n\t  t['afii57415'] = 0x0627;\n\t  t['afii57416'] = 0x0628;\n\t  t['afii57417'] = 0x0629;\n\t  t['afii57418'] = 0x062A;\n\t  t['afii57419'] = 0x062B;\n\t  t['afii57420'] = 0x062C;\n\t  t['afii57421'] = 0x062D;\n\t  t['afii57422'] = 0x062E;\n\t  t['afii57423'] = 0x062F;\n\t  t['afii57424'] = 0x0630;\n\t  t['afii57425'] = 0x0631;\n\t  t['afii57426'] = 0x0632;\n\t  t['afii57427'] = 0x0633;\n\t  t['afii57428'] = 0x0634;\n\t  t['afii57429'] = 0x0635;\n\t  t['afii57430'] = 0x0636;\n\t  t['afii57431'] = 0x0637;\n\t  t['afii57432'] = 0x0638;\n\t  t['afii57433'] = 0x0639;\n\t  t['afii57434'] = 0x063A;\n\t  t['afii57440'] = 0x0640;\n\t  t['afii57441'] = 0x0641;\n\t  t['afii57442'] = 0x0642;\n\t  t['afii57443'] = 0x0643;\n\t  t['afii57444'] = 0x0644;\n\t  t['afii57445'] = 0x0645;\n\t  t['afii57446'] = 0x0646;\n\t  t['afii57448'] = 0x0648;\n\t  t['afii57449'] = 0x0649;\n\t  t['afii57450'] = 0x064A;\n\t  t['afii57451'] = 0x064B;\n\t  t['afii57452'] = 0x064C;\n\t  t['afii57453'] = 0x064D;\n\t  t['afii57454'] = 0x064E;\n\t  t['afii57455'] = 0x064F;\n\t  t['afii57456'] = 0x0650;\n\t  t['afii57457'] = 0x0651;\n\t  t['afii57458'] = 0x0652;\n\t  t['afii57470'] = 0x0647;\n\t  t['afii57505'] = 0x06A4;\n\t  t['afii57506'] = 0x067E;\n\t  t['afii57507'] = 0x0686;\n\t  t['afii57508'] = 0x0698;\n\t  t['afii57509'] = 0x06AF;\n\t  t['afii57511'] = 0x0679;\n\t  t['afii57512'] = 0x0688;\n\t  t['afii57513'] = 0x0691;\n\t  t['afii57514'] = 0x06BA;\n\t  t['afii57519'] = 0x06D2;\n\t  t['afii57534'] = 0x06D5;\n\t  t['afii57636'] = 0x20AA;\n\t  t['afii57645'] = 0x05BE;\n\t  t['afii57658'] = 0x05C3;\n\t  t['afii57664'] = 0x05D0;\n\t  t['afii57665'] = 0x05D1;\n\t  t['afii57666'] = 0x05D2;\n\t  t['afii57667'] = 0x05D3;\n\t  t['afii57668'] = 0x05D4;\n\t  t['afii57669'] = 0x05D5;\n\t  t['afii57670'] = 0x05D6;\n\t  t['afii57671'] = 0x05D7;\n\t  t['afii57672'] = 0x05D8;\n\t  t['afii57673'] = 0x05D9;\n\t  t['afii57674'] = 0x05DA;\n\t  t['afii57675'] = 0x05DB;\n\t  t['afii57676'] = 0x05DC;\n\t  t['afii57677'] = 0x05DD;\n\t  t['afii57678'] = 0x05DE;\n\t  t['afii57679'] = 0x05DF;\n\t  t['afii57680'] = 0x05E0;\n\t  t['afii57681'] = 0x05E1;\n\t  t['afii57682'] = 0x05E2;\n\t  t['afii57683'] = 0x05E3;\n\t  t['afii57684'] = 0x05E4;\n\t  t['afii57685'] = 0x05E5;\n\t  t['afii57686'] = 0x05E6;\n\t  t['afii57687'] = 0x05E7;\n\t  t['afii57688'] = 0x05E8;\n\t  t['afii57689'] = 0x05E9;\n\t  t['afii57690'] = 0x05EA;\n\t  t['afii57694'] = 0xFB2A;\n\t  t['afii57695'] = 0xFB2B;\n\t  t['afii57700'] = 0xFB4B;\n\t  t['afii57705'] = 0xFB1F;\n\t  t['afii57716'] = 0x05F0;\n\t  t['afii57717'] = 0x05F1;\n\t  t['afii57718'] = 0x05F2;\n\t  t['afii57723'] = 0xFB35;\n\t  t['afii57793'] = 0x05B4;\n\t  t['afii57794'] = 0x05B5;\n\t  t['afii57795'] = 0x05B6;\n\t  t['afii57796'] = 0x05BB;\n\t  t['afii57797'] = 0x05B8;\n\t  t['afii57798'] = 0x05B7;\n\t  t['afii57799'] = 0x05B0;\n\t  t['afii57800'] = 0x05B2;\n\t  t['afii57801'] = 0x05B1;\n\t  t['afii57802'] = 0x05B3;\n\t  t['afii57803'] = 0x05C2;\n\t  t['afii57804'] = 0x05C1;\n\t  t['afii57806'] = 0x05B9;\n\t  t['afii57807'] = 0x05BC;\n\t  t['afii57839'] = 0x05BD;\n\t  t['afii57841'] = 0x05BF;\n\t  t['afii57842'] = 0x05C0;\n\t  t['afii57929'] = 0x02BC;\n\t  t['afii61248'] = 0x2105;\n\t  t['afii61289'] = 0x2113;\n\t  t['afii61352'] = 0x2116;\n\t  t['afii61573'] = 0x202C;\n\t  t['afii61574'] = 0x202D;\n\t  t['afii61575'] = 0x202E;\n\t  t['afii61664'] = 0x200C;\n\t  t['afii63167'] = 0x066D;\n\t  t['afii64937'] = 0x02BD;\n\t  t['agrave'] = 0x00E0;\n\t  t['agujarati'] = 0x0A85;\n\t  t['agurmukhi'] = 0x0A05;\n\t  t['ahiragana'] = 0x3042;\n\t  t['ahookabove'] = 0x1EA3;\n\t  t['aibengali'] = 0x0990;\n\t  t['aibopomofo'] = 0x311E;\n\t  t['aideva'] = 0x0910;\n\t  t['aiecyrillic'] = 0x04D5;\n\t  t['aigujarati'] = 0x0A90;\n\t  t['aigurmukhi'] = 0x0A10;\n\t  t['aimatragurmukhi'] = 0x0A48;\n\t  t['ainarabic'] = 0x0639;\n\t  t['ainfinalarabic'] = 0xFECA;\n\t  t['aininitialarabic'] = 0xFECB;\n\t  t['ainmedialarabic'] = 0xFECC;\n\t  t['ainvertedbreve'] = 0x0203;\n\t  t['aivowelsignbengali'] = 0x09C8;\n\t  t['aivowelsigndeva'] = 0x0948;\n\t  t['aivowelsigngujarati'] = 0x0AC8;\n\t  t['akatakana'] = 0x30A2;\n\t  t['akatakanahalfwidth'] = 0xFF71;\n\t  t['akorean'] = 0x314F;\n\t  t['alef'] = 0x05D0;\n\t  t['alefarabic'] = 0x0627;\n\t  t['alefdageshhebrew'] = 0xFB30;\n\t  t['aleffinalarabic'] = 0xFE8E;\n\t  t['alefhamzaabovearabic'] = 0x0623;\n\t  t['alefhamzaabovefinalarabic'] = 0xFE84;\n\t  t['alefhamzabelowarabic'] = 0x0625;\n\t  t['alefhamzabelowfinalarabic'] = 0xFE88;\n\t  t['alefhebrew'] = 0x05D0;\n\t  t['aleflamedhebrew'] = 0xFB4F;\n\t  t['alefmaddaabovearabic'] = 0x0622;\n\t  t['alefmaddaabovefinalarabic'] = 0xFE82;\n\t  t['alefmaksuraarabic'] = 0x0649;\n\t  t['alefmaksurafinalarabic'] = 0xFEF0;\n\t  t['alefmaksurainitialarabic'] = 0xFEF3;\n\t  t['alefmaksuramedialarabic'] = 0xFEF4;\n\t  t['alefpatahhebrew'] = 0xFB2E;\n\t  t['alefqamatshebrew'] = 0xFB2F;\n\t  t['aleph'] = 0x2135;\n\t  t['allequal'] = 0x224C;\n\t  t['alpha'] = 0x03B1;\n\t  t['alphatonos'] = 0x03AC;\n\t  t['amacron'] = 0x0101;\n\t  t['amonospace'] = 0xFF41;\n\t  t['ampersand'] = 0x0026;\n\t  t['ampersandmonospace'] = 0xFF06;\n\t  t['ampersandsmall'] = 0xF726;\n\t  t['amsquare'] = 0x33C2;\n\t  t['anbopomofo'] = 0x3122;\n\t  t['angbopomofo'] = 0x3124;\n\t  t['angbracketleft'] = 0x3008;\n\t  t['angbracketright'] = 0x3009;\n\t  t['angkhankhuthai'] = 0x0E5A;\n\t  t['angle'] = 0x2220;\n\t  t['anglebracketleft'] = 0x3008;\n\t  t['anglebracketleftvertical'] = 0xFE3F;\n\t  t['anglebracketright'] = 0x3009;\n\t  t['anglebracketrightvertical'] = 0xFE40;\n\t  t['angleleft'] = 0x2329;\n\t  t['angleright'] = 0x232A;\n\t  t['angstrom'] = 0x212B;\n\t  t['anoteleia'] = 0x0387;\n\t  t['anudattadeva'] = 0x0952;\n\t  t['anusvarabengali'] = 0x0982;\n\t  t['anusvaradeva'] = 0x0902;\n\t  t['anusvaragujarati'] = 0x0A82;\n\t  t['aogonek'] = 0x0105;\n\t  t['apaatosquare'] = 0x3300;\n\t  t['aparen'] = 0x249C;\n\t  t['apostrophearmenian'] = 0x055A;\n\t  t['apostrophemod'] = 0x02BC;\n\t  t['apple'] = 0xF8FF;\n\t  t['approaches'] = 0x2250;\n\t  t['approxequal'] = 0x2248;\n\t  t['approxequalorimage'] = 0x2252;\n\t  t['approximatelyequal'] = 0x2245;\n\t  t['araeaekorean'] = 0x318E;\n\t  t['araeakorean'] = 0x318D;\n\t  t['arc'] = 0x2312;\n\t  t['arighthalfring'] = 0x1E9A;\n\t  t['aring'] = 0x00E5;\n\t  t['aringacute'] = 0x01FB;\n\t  t['aringbelow'] = 0x1E01;\n\t  t['arrowboth'] = 0x2194;\n\t  t['arrowdashdown'] = 0x21E3;\n\t  t['arrowdashleft'] = 0x21E0;\n\t  t['arrowdashright'] = 0x21E2;\n\t  t['arrowdashup'] = 0x21E1;\n\t  t['arrowdblboth'] = 0x21D4;\n\t  t['arrowdbldown'] = 0x21D3;\n\t  t['arrowdblleft'] = 0x21D0;\n\t  t['arrowdblright'] = 0x21D2;\n\t  t['arrowdblup'] = 0x21D1;\n\t  t['arrowdown'] = 0x2193;\n\t  t['arrowdownleft'] = 0x2199;\n\t  t['arrowdownright'] = 0x2198;\n\t  t['arrowdownwhite'] = 0x21E9;\n\t  t['arrowheaddownmod'] = 0x02C5;\n\t  t['arrowheadleftmod'] = 0x02C2;\n\t  t['arrowheadrightmod'] = 0x02C3;\n\t  t['arrowheadupmod'] = 0x02C4;\n\t  t['arrowhorizex'] = 0xF8E7;\n\t  t['arrowleft'] = 0x2190;\n\t  t['arrowleftdbl'] = 0x21D0;\n\t  t['arrowleftdblstroke'] = 0x21CD;\n\t  t['arrowleftoverright'] = 0x21C6;\n\t  t['arrowleftwhite'] = 0x21E6;\n\t  t['arrowright'] = 0x2192;\n\t  t['arrowrightdblstroke'] = 0x21CF;\n\t  t['arrowrightheavy'] = 0x279E;\n\t  t['arrowrightoverleft'] = 0x21C4;\n\t  t['arrowrightwhite'] = 0x21E8;\n\t  t['arrowtableft'] = 0x21E4;\n\t  t['arrowtabright'] = 0x21E5;\n\t  t['arrowup'] = 0x2191;\n\t  t['arrowupdn'] = 0x2195;\n\t  t['arrowupdnbse'] = 0x21A8;\n\t  t['arrowupdownbase'] = 0x21A8;\n\t  t['arrowupleft'] = 0x2196;\n\t  t['arrowupleftofdown'] = 0x21C5;\n\t  t['arrowupright'] = 0x2197;\n\t  t['arrowupwhite'] = 0x21E7;\n\t  t['arrowvertex'] = 0xF8E6;\n\t  t['asciicircum'] = 0x005E;\n\t  t['asciicircummonospace'] = 0xFF3E;\n\t  t['asciitilde'] = 0x007E;\n\t  t['asciitildemonospace'] = 0xFF5E;\n\t  t['ascript'] = 0x0251;\n\t  t['ascriptturned'] = 0x0252;\n\t  t['asmallhiragana'] = 0x3041;\n\t  t['asmallkatakana'] = 0x30A1;\n\t  t['asmallkatakanahalfwidth'] = 0xFF67;\n\t  t['asterisk'] = 0x002A;\n\t  t['asteriskaltonearabic'] = 0x066D;\n\t  t['asteriskarabic'] = 0x066D;\n\t  t['asteriskmath'] = 0x2217;\n\t  t['asteriskmonospace'] = 0xFF0A;\n\t  t['asterisksmall'] = 0xFE61;\n\t  t['asterism'] = 0x2042;\n\t  t['asuperior'] = 0xF6E9;\n\t  t['asymptoticallyequal'] = 0x2243;\n\t  t['at'] = 0x0040;\n\t  t['atilde'] = 0x00E3;\n\t  t['atmonospace'] = 0xFF20;\n\t  t['atsmall'] = 0xFE6B;\n\t  t['aturned'] = 0x0250;\n\t  t['aubengali'] = 0x0994;\n\t  t['aubopomofo'] = 0x3120;\n\t  t['audeva'] = 0x0914;\n\t  t['augujarati'] = 0x0A94;\n\t  t['augurmukhi'] = 0x0A14;\n\t  t['aulengthmarkbengali'] = 0x09D7;\n\t  t['aumatragurmukhi'] = 0x0A4C;\n\t  t['auvowelsignbengali'] = 0x09CC;\n\t  t['auvowelsigndeva'] = 0x094C;\n\t  t['auvowelsigngujarati'] = 0x0ACC;\n\t  t['avagrahadeva'] = 0x093D;\n\t  t['aybarmenian'] = 0x0561;\n\t  t['ayin'] = 0x05E2;\n\t  t['ayinaltonehebrew'] = 0xFB20;\n\t  t['ayinhebrew'] = 0x05E2;\n\t  t['b'] = 0x0062;\n\t  t['babengali'] = 0x09AC;\n\t  t['backslash'] = 0x005C;\n\t  t['backslashmonospace'] = 0xFF3C;\n\t  t['badeva'] = 0x092C;\n\t  t['bagujarati'] = 0x0AAC;\n\t  t['bagurmukhi'] = 0x0A2C;\n\t  t['bahiragana'] = 0x3070;\n\t  t['bahtthai'] = 0x0E3F;\n\t  t['bakatakana'] = 0x30D0;\n\t  t['bar'] = 0x007C;\n\t  t['barmonospace'] = 0xFF5C;\n\t  t['bbopomofo'] = 0x3105;\n\t  t['bcircle'] = 0x24D1;\n\t  t['bdotaccent'] = 0x1E03;\n\t  t['bdotbelow'] = 0x1E05;\n\t  t['beamedsixteenthnotes'] = 0x266C;\n\t  t['because'] = 0x2235;\n\t  t['becyrillic'] = 0x0431;\n\t  t['beharabic'] = 0x0628;\n\t  t['behfinalarabic'] = 0xFE90;\n\t  t['behinitialarabic'] = 0xFE91;\n\t  t['behiragana'] = 0x3079;\n\t  t['behmedialarabic'] = 0xFE92;\n\t  t['behmeeminitialarabic'] = 0xFC9F;\n\t  t['behmeemisolatedarabic'] = 0xFC08;\n\t  t['behnoonfinalarabic'] = 0xFC6D;\n\t  t['bekatakana'] = 0x30D9;\n\t  t['benarmenian'] = 0x0562;\n\t  t['bet'] = 0x05D1;\n\t  t['beta'] = 0x03B2;\n\t  t['betasymbolgreek'] = 0x03D0;\n\t  t['betdagesh'] = 0xFB31;\n\t  t['betdageshhebrew'] = 0xFB31;\n\t  t['bethebrew'] = 0x05D1;\n\t  t['betrafehebrew'] = 0xFB4C;\n\t  t['bhabengali'] = 0x09AD;\n\t  t['bhadeva'] = 0x092D;\n\t  t['bhagujarati'] = 0x0AAD;\n\t  t['bhagurmukhi'] = 0x0A2D;\n\t  t['bhook'] = 0x0253;\n\t  t['bihiragana'] = 0x3073;\n\t  t['bikatakana'] = 0x30D3;\n\t  t['bilabialclick'] = 0x0298;\n\t  t['bindigurmukhi'] = 0x0A02;\n\t  t['birusquare'] = 0x3331;\n\t  t['blackcircle'] = 0x25CF;\n\t  t['blackdiamond'] = 0x25C6;\n\t  t['blackdownpointingtriangle'] = 0x25BC;\n\t  t['blackleftpointingpointer'] = 0x25C4;\n\t  t['blackleftpointingtriangle'] = 0x25C0;\n\t  t['blacklenticularbracketleft'] = 0x3010;\n\t  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n\t  t['blacklenticularbracketright'] = 0x3011;\n\t  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n\t  t['blacklowerlefttriangle'] = 0x25E3;\n\t  t['blacklowerrighttriangle'] = 0x25E2;\n\t  t['blackrectangle'] = 0x25AC;\n\t  t['blackrightpointingpointer'] = 0x25BA;\n\t  t['blackrightpointingtriangle'] = 0x25B6;\n\t  t['blacksmallsquare'] = 0x25AA;\n\t  t['blacksmilingface'] = 0x263B;\n\t  t['blacksquare'] = 0x25A0;\n\t  t['blackstar'] = 0x2605;\n\t  t['blackupperlefttriangle'] = 0x25E4;\n\t  t['blackupperrighttriangle'] = 0x25E5;\n\t  t['blackuppointingsmalltriangle'] = 0x25B4;\n\t  t['blackuppointingtriangle'] = 0x25B2;\n\t  t['blank'] = 0x2423;\n\t  t['blinebelow'] = 0x1E07;\n\t  t['block'] = 0x2588;\n\t  t['bmonospace'] = 0xFF42;\n\t  t['bobaimaithai'] = 0x0E1A;\n\t  t['bohiragana'] = 0x307C;\n\t  t['bokatakana'] = 0x30DC;\n\t  t['bparen'] = 0x249D;\n\t  t['bqsquare'] = 0x33C3;\n\t  t['braceex'] = 0xF8F4;\n\t  t['braceleft'] = 0x007B;\n\t  t['braceleftbt'] = 0xF8F3;\n\t  t['braceleftmid'] = 0xF8F2;\n\t  t['braceleftmonospace'] = 0xFF5B;\n\t  t['braceleftsmall'] = 0xFE5B;\n\t  t['bracelefttp'] = 0xF8F1;\n\t  t['braceleftvertical'] = 0xFE37;\n\t  t['braceright'] = 0x007D;\n\t  t['bracerightbt'] = 0xF8FE;\n\t  t['bracerightmid'] = 0xF8FD;\n\t  t['bracerightmonospace'] = 0xFF5D;\n\t  t['bracerightsmall'] = 0xFE5C;\n\t  t['bracerighttp'] = 0xF8FC;\n\t  t['bracerightvertical'] = 0xFE38;\n\t  t['bracketleft'] = 0x005B;\n\t  t['bracketleftbt'] = 0xF8F0;\n\t  t['bracketleftex'] = 0xF8EF;\n\t  t['bracketleftmonospace'] = 0xFF3B;\n\t  t['bracketlefttp'] = 0xF8EE;\n\t  t['bracketright'] = 0x005D;\n\t  t['bracketrightbt'] = 0xF8FB;\n\t  t['bracketrightex'] = 0xF8FA;\n\t  t['bracketrightmonospace'] = 0xFF3D;\n\t  t['bracketrighttp'] = 0xF8F9;\n\t  t['breve'] = 0x02D8;\n\t  t['brevebelowcmb'] = 0x032E;\n\t  t['brevecmb'] = 0x0306;\n\t  t['breveinvertedbelowcmb'] = 0x032F;\n\t  t['breveinvertedcmb'] = 0x0311;\n\t  t['breveinverteddoublecmb'] = 0x0361;\n\t  t['bridgebelowcmb'] = 0x032A;\n\t  t['bridgeinvertedbelowcmb'] = 0x033A;\n\t  t['brokenbar'] = 0x00A6;\n\t  t['bstroke'] = 0x0180;\n\t  t['bsuperior'] = 0xF6EA;\n\t  t['btopbar'] = 0x0183;\n\t  t['buhiragana'] = 0x3076;\n\t  t['bukatakana'] = 0x30D6;\n\t  t['bullet'] = 0x2022;\n\t  t['bulletinverse'] = 0x25D8;\n\t  t['bulletoperator'] = 0x2219;\n\t  t['bullseye'] = 0x25CE;\n\t  t['c'] = 0x0063;\n\t  t['caarmenian'] = 0x056E;\n\t  t['cabengali'] = 0x099A;\n\t  t['cacute'] = 0x0107;\n\t  t['cadeva'] = 0x091A;\n\t  t['cagujarati'] = 0x0A9A;\n\t  t['cagurmukhi'] = 0x0A1A;\n\t  t['calsquare'] = 0x3388;\n\t  t['candrabindubengali'] = 0x0981;\n\t  t['candrabinducmb'] = 0x0310;\n\t  t['candrabindudeva'] = 0x0901;\n\t  t['candrabindugujarati'] = 0x0A81;\n\t  t['capslock'] = 0x21EA;\n\t  t['careof'] = 0x2105;\n\t  t['caron'] = 0x02C7;\n\t  t['caronbelowcmb'] = 0x032C;\n\t  t['caroncmb'] = 0x030C;\n\t  t['carriagereturn'] = 0x21B5;\n\t  t['cbopomofo'] = 0x3118;\n\t  t['ccaron'] = 0x010D;\n\t  t['ccedilla'] = 0x00E7;\n\t  t['ccedillaacute'] = 0x1E09;\n\t  t['ccircle'] = 0x24D2;\n\t  t['ccircumflex'] = 0x0109;\n\t  t['ccurl'] = 0x0255;\n\t  t['cdot'] = 0x010B;\n\t  t['cdotaccent'] = 0x010B;\n\t  t['cdsquare'] = 0x33C5;\n\t  t['cedilla'] = 0x00B8;\n\t  t['cedillacmb'] = 0x0327;\n\t  t['cent'] = 0x00A2;\n\t  t['centigrade'] = 0x2103;\n\t  t['centinferior'] = 0xF6DF;\n\t  t['centmonospace'] = 0xFFE0;\n\t  t['centoldstyle'] = 0xF7A2;\n\t  t['centsuperior'] = 0xF6E0;\n\t  t['chaarmenian'] = 0x0579;\n\t  t['chabengali'] = 0x099B;\n\t  t['chadeva'] = 0x091B;\n\t  t['chagujarati'] = 0x0A9B;\n\t  t['chagurmukhi'] = 0x0A1B;\n\t  t['chbopomofo'] = 0x3114;\n\t  t['cheabkhasiancyrillic'] = 0x04BD;\n\t  t['checkmark'] = 0x2713;\n\t  t['checyrillic'] = 0x0447;\n\t  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n\t  t['chedescendercyrillic'] = 0x04B7;\n\t  t['chedieresiscyrillic'] = 0x04F5;\n\t  t['cheharmenian'] = 0x0573;\n\t  t['chekhakassiancyrillic'] = 0x04CC;\n\t  t['cheverticalstrokecyrillic'] = 0x04B9;\n\t  t['chi'] = 0x03C7;\n\t  t['chieuchacirclekorean'] = 0x3277;\n\t  t['chieuchaparenkorean'] = 0x3217;\n\t  t['chieuchcirclekorean'] = 0x3269;\n\t  t['chieuchkorean'] = 0x314A;\n\t  t['chieuchparenkorean'] = 0x3209;\n\t  t['chochangthai'] = 0x0E0A;\n\t  t['chochanthai'] = 0x0E08;\n\t  t['chochingthai'] = 0x0E09;\n\t  t['chochoethai'] = 0x0E0C;\n\t  t['chook'] = 0x0188;\n\t  t['cieucacirclekorean'] = 0x3276;\n\t  t['cieucaparenkorean'] = 0x3216;\n\t  t['cieuccirclekorean'] = 0x3268;\n\t  t['cieuckorean'] = 0x3148;\n\t  t['cieucparenkorean'] = 0x3208;\n\t  t['cieucuparenkorean'] = 0x321C;\n\t  t['circle'] = 0x25CB;\n\t  t['circlecopyrt'] = 0x00A9;\n\t  t['circlemultiply'] = 0x2297;\n\t  t['circleot'] = 0x2299;\n\t  t['circleplus'] = 0x2295;\n\t  t['circlepostalmark'] = 0x3036;\n\t  t['circlewithlefthalfblack'] = 0x25D0;\n\t  t['circlewithrighthalfblack'] = 0x25D1;\n\t  t['circumflex'] = 0x02C6;\n\t  t['circumflexbelowcmb'] = 0x032D;\n\t  t['circumflexcmb'] = 0x0302;\n\t  t['clear'] = 0x2327;\n\t  t['clickalveolar'] = 0x01C2;\n\t  t['clickdental'] = 0x01C0;\n\t  t['clicklateral'] = 0x01C1;\n\t  t['clickretroflex'] = 0x01C3;\n\t  t['club'] = 0x2663;\n\t  t['clubsuitblack'] = 0x2663;\n\t  t['clubsuitwhite'] = 0x2667;\n\t  t['cmcubedsquare'] = 0x33A4;\n\t  t['cmonospace'] = 0xFF43;\n\t  t['cmsquaredsquare'] = 0x33A0;\n\t  t['coarmenian'] = 0x0581;\n\t  t['colon'] = 0x003A;\n\t  t['colonmonetary'] = 0x20A1;\n\t  t['colonmonospace'] = 0xFF1A;\n\t  t['colonsign'] = 0x20A1;\n\t  t['colonsmall'] = 0xFE55;\n\t  t['colontriangularhalfmod'] = 0x02D1;\n\t  t['colontriangularmod'] = 0x02D0;\n\t  t['comma'] = 0x002C;\n\t  t['commaabovecmb'] = 0x0313;\n\t  t['commaaboverightcmb'] = 0x0315;\n\t  t['commaaccent'] = 0xF6C3;\n\t  t['commaarabic'] = 0x060C;\n\t  t['commaarmenian'] = 0x055D;\n\t  t['commainferior'] = 0xF6E1;\n\t  t['commamonospace'] = 0xFF0C;\n\t  t['commareversedabovecmb'] = 0x0314;\n\t  t['commareversedmod'] = 0x02BD;\n\t  t['commasmall'] = 0xFE50;\n\t  t['commasuperior'] = 0xF6E2;\n\t  t['commaturnedabovecmb'] = 0x0312;\n\t  t['commaturnedmod'] = 0x02BB;\n\t  t['compass'] = 0x263C;\n\t  t['congruent'] = 0x2245;\n\t  t['contourintegral'] = 0x222E;\n\t  t['control'] = 0x2303;\n\t  t['controlACK'] = 0x0006;\n\t  t['controlBEL'] = 0x0007;\n\t  t['controlBS'] = 0x0008;\n\t  t['controlCAN'] = 0x0018;\n\t  t['controlCR'] = 0x000D;\n\t  t['controlDC1'] = 0x0011;\n\t  t['controlDC2'] = 0x0012;\n\t  t['controlDC3'] = 0x0013;\n\t  t['controlDC4'] = 0x0014;\n\t  t['controlDEL'] = 0x007F;\n\t  t['controlDLE'] = 0x0010;\n\t  t['controlEM'] = 0x0019;\n\t  t['controlENQ'] = 0x0005;\n\t  t['controlEOT'] = 0x0004;\n\t  t['controlESC'] = 0x001B;\n\t  t['controlETB'] = 0x0017;\n\t  t['controlETX'] = 0x0003;\n\t  t['controlFF'] = 0x000C;\n\t  t['controlFS'] = 0x001C;\n\t  t['controlGS'] = 0x001D;\n\t  t['controlHT'] = 0x0009;\n\t  t['controlLF'] = 0x000A;\n\t  t['controlNAK'] = 0x0015;\n\t  t['controlNULL'] = 0x0000;\n\t  t['controlRS'] = 0x001E;\n\t  t['controlSI'] = 0x000F;\n\t  t['controlSO'] = 0x000E;\n\t  t['controlSOT'] = 0x0002;\n\t  t['controlSTX'] = 0x0001;\n\t  t['controlSUB'] = 0x001A;\n\t  t['controlSYN'] = 0x0016;\n\t  t['controlUS'] = 0x001F;\n\t  t['controlVT'] = 0x000B;\n\t  t['copyright'] = 0x00A9;\n\t  t['copyrightsans'] = 0xF8E9;\n\t  t['copyrightserif'] = 0xF6D9;\n\t  t['cornerbracketleft'] = 0x300C;\n\t  t['cornerbracketlefthalfwidth'] = 0xFF62;\n\t  t['cornerbracketleftvertical'] = 0xFE41;\n\t  t['cornerbracketright'] = 0x300D;\n\t  t['cornerbracketrighthalfwidth'] = 0xFF63;\n\t  t['cornerbracketrightvertical'] = 0xFE42;\n\t  t['corporationsquare'] = 0x337F;\n\t  t['cosquare'] = 0x33C7;\n\t  t['coverkgsquare'] = 0x33C6;\n\t  t['cparen'] = 0x249E;\n\t  t['cruzeiro'] = 0x20A2;\n\t  t['cstretched'] = 0x0297;\n\t  t['curlyand'] = 0x22CF;\n\t  t['curlyor'] = 0x22CE;\n\t  t['currency'] = 0x00A4;\n\t  t['cyrBreve'] = 0xF6D1;\n\t  t['cyrFlex'] = 0xF6D2;\n\t  t['cyrbreve'] = 0xF6D4;\n\t  t['cyrflex'] = 0xF6D5;\n\t  t['d'] = 0x0064;\n\t  t['daarmenian'] = 0x0564;\n\t  t['dabengali'] = 0x09A6;\n\t  t['dadarabic'] = 0x0636;\n\t  t['dadeva'] = 0x0926;\n\t  t['dadfinalarabic'] = 0xFEBE;\n\t  t['dadinitialarabic'] = 0xFEBF;\n\t  t['dadmedialarabic'] = 0xFEC0;\n\t  t['dagesh'] = 0x05BC;\n\t  t['dageshhebrew'] = 0x05BC;\n\t  t['dagger'] = 0x2020;\n\t  t['daggerdbl'] = 0x2021;\n\t  t['dagujarati'] = 0x0AA6;\n\t  t['dagurmukhi'] = 0x0A26;\n\t  t['dahiragana'] = 0x3060;\n\t  t['dakatakana'] = 0x30C0;\n\t  t['dalarabic'] = 0x062F;\n\t  t['dalet'] = 0x05D3;\n\t  t['daletdagesh'] = 0xFB33;\n\t  t['daletdageshhebrew'] = 0xFB33;\n\t  t['dalethebrew'] = 0x05D3;\n\t  t['dalfinalarabic'] = 0xFEAA;\n\t  t['dammaarabic'] = 0x064F;\n\t  t['dammalowarabic'] = 0x064F;\n\t  t['dammatanaltonearabic'] = 0x064C;\n\t  t['dammatanarabic'] = 0x064C;\n\t  t['danda'] = 0x0964;\n\t  t['dargahebrew'] = 0x05A7;\n\t  t['dargalefthebrew'] = 0x05A7;\n\t  t['dasiapneumatacyrilliccmb'] = 0x0485;\n\t  t['dblGrave'] = 0xF6D3;\n\t  t['dblanglebracketleft'] = 0x300A;\n\t  t['dblanglebracketleftvertical'] = 0xFE3D;\n\t  t['dblanglebracketright'] = 0x300B;\n\t  t['dblanglebracketrightvertical'] = 0xFE3E;\n\t  t['dblarchinvertedbelowcmb'] = 0x032B;\n\t  t['dblarrowleft'] = 0x21D4;\n\t  t['dblarrowright'] = 0x21D2;\n\t  t['dbldanda'] = 0x0965;\n\t  t['dblgrave'] = 0xF6D6;\n\t  t['dblgravecmb'] = 0x030F;\n\t  t['dblintegral'] = 0x222C;\n\t  t['dbllowline'] = 0x2017;\n\t  t['dbllowlinecmb'] = 0x0333;\n\t  t['dbloverlinecmb'] = 0x033F;\n\t  t['dblprimemod'] = 0x02BA;\n\t  t['dblverticalbar'] = 0x2016;\n\t  t['dblverticallineabovecmb'] = 0x030E;\n\t  t['dbopomofo'] = 0x3109;\n\t  t['dbsquare'] = 0x33C8;\n\t  t['dcaron'] = 0x010F;\n\t  t['dcedilla'] = 0x1E11;\n\t  t['dcircle'] = 0x24D3;\n\t  t['dcircumflexbelow'] = 0x1E13;\n\t  t['dcroat'] = 0x0111;\n\t  t['ddabengali'] = 0x09A1;\n\t  t['ddadeva'] = 0x0921;\n\t  t['ddagujarati'] = 0x0AA1;\n\t  t['ddagurmukhi'] = 0x0A21;\n\t  t['ddalarabic'] = 0x0688;\n\t  t['ddalfinalarabic'] = 0xFB89;\n\t  t['dddhadeva'] = 0x095C;\n\t  t['ddhabengali'] = 0x09A2;\n\t  t['ddhadeva'] = 0x0922;\n\t  t['ddhagujarati'] = 0x0AA2;\n\t  t['ddhagurmukhi'] = 0x0A22;\n\t  t['ddotaccent'] = 0x1E0B;\n\t  t['ddotbelow'] = 0x1E0D;\n\t  t['decimalseparatorarabic'] = 0x066B;\n\t  t['decimalseparatorpersian'] = 0x066B;\n\t  t['decyrillic'] = 0x0434;\n\t  t['degree'] = 0x00B0;\n\t  t['dehihebrew'] = 0x05AD;\n\t  t['dehiragana'] = 0x3067;\n\t  t['deicoptic'] = 0x03EF;\n\t  t['dekatakana'] = 0x30C7;\n\t  t['deleteleft'] = 0x232B;\n\t  t['deleteright'] = 0x2326;\n\t  t['delta'] = 0x03B4;\n\t  t['deltaturned'] = 0x018D;\n\t  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n\t  t['dezh'] = 0x02A4;\n\t  t['dhabengali'] = 0x09A7;\n\t  t['dhadeva'] = 0x0927;\n\t  t['dhagujarati'] = 0x0AA7;\n\t  t['dhagurmukhi'] = 0x0A27;\n\t  t['dhook'] = 0x0257;\n\t  t['dialytikatonos'] = 0x0385;\n\t  t['dialytikatonoscmb'] = 0x0344;\n\t  t['diamond'] = 0x2666;\n\t  t['diamondsuitwhite'] = 0x2662;\n\t  t['dieresis'] = 0x00A8;\n\t  t['dieresisacute'] = 0xF6D7;\n\t  t['dieresisbelowcmb'] = 0x0324;\n\t  t['dieresiscmb'] = 0x0308;\n\t  t['dieresisgrave'] = 0xF6D8;\n\t  t['dieresistonos'] = 0x0385;\n\t  t['dihiragana'] = 0x3062;\n\t  t['dikatakana'] = 0x30C2;\n\t  t['dittomark'] = 0x3003;\n\t  t['divide'] = 0x00F7;\n\t  t['divides'] = 0x2223;\n\t  t['divisionslash'] = 0x2215;\n\t  t['djecyrillic'] = 0x0452;\n\t  t['dkshade'] = 0x2593;\n\t  t['dlinebelow'] = 0x1E0F;\n\t  t['dlsquare'] = 0x3397;\n\t  t['dmacron'] = 0x0111;\n\t  t['dmonospace'] = 0xFF44;\n\t  t['dnblock'] = 0x2584;\n\t  t['dochadathai'] = 0x0E0E;\n\t  t['dodekthai'] = 0x0E14;\n\t  t['dohiragana'] = 0x3069;\n\t  t['dokatakana'] = 0x30C9;\n\t  t['dollar'] = 0x0024;\n\t  t['dollarinferior'] = 0xF6E3;\n\t  t['dollarmonospace'] = 0xFF04;\n\t  t['dollaroldstyle'] = 0xF724;\n\t  t['dollarsmall'] = 0xFE69;\n\t  t['dollarsuperior'] = 0xF6E4;\n\t  t['dong'] = 0x20AB;\n\t  t['dorusquare'] = 0x3326;\n\t  t['dotaccent'] = 0x02D9;\n\t  t['dotaccentcmb'] = 0x0307;\n\t  t['dotbelowcmb'] = 0x0323;\n\t  t['dotbelowcomb'] = 0x0323;\n\t  t['dotkatakana'] = 0x30FB;\n\t  t['dotlessi'] = 0x0131;\n\t  t['dotlessj'] = 0xF6BE;\n\t  t['dotlessjstrokehook'] = 0x0284;\n\t  t['dotmath'] = 0x22C5;\n\t  t['dottedcircle'] = 0x25CC;\n\t  t['doubleyodpatah'] = 0xFB1F;\n\t  t['doubleyodpatahhebrew'] = 0xFB1F;\n\t  t['downtackbelowcmb'] = 0x031E;\n\t  t['downtackmod'] = 0x02D5;\n\t  t['dparen'] = 0x249F;\n\t  t['dsuperior'] = 0xF6EB;\n\t  t['dtail'] = 0x0256;\n\t  t['dtopbar'] = 0x018C;\n\t  t['duhiragana'] = 0x3065;\n\t  t['dukatakana'] = 0x30C5;\n\t  t['dz'] = 0x01F3;\n\t  t['dzaltone'] = 0x02A3;\n\t  t['dzcaron'] = 0x01C6;\n\t  t['dzcurl'] = 0x02A5;\n\t  t['dzeabkhasiancyrillic'] = 0x04E1;\n\t  t['dzecyrillic'] = 0x0455;\n\t  t['dzhecyrillic'] = 0x045F;\n\t  t['e'] = 0x0065;\n\t  t['eacute'] = 0x00E9;\n\t  t['earth'] = 0x2641;\n\t  t['ebengali'] = 0x098F;\n\t  t['ebopomofo'] = 0x311C;\n\t  t['ebreve'] = 0x0115;\n\t  t['ecandradeva'] = 0x090D;\n\t  t['ecandragujarati'] = 0x0A8D;\n\t  t['ecandravowelsigndeva'] = 0x0945;\n\t  t['ecandravowelsigngujarati'] = 0x0AC5;\n\t  t['ecaron'] = 0x011B;\n\t  t['ecedillabreve'] = 0x1E1D;\n\t  t['echarmenian'] = 0x0565;\n\t  t['echyiwnarmenian'] = 0x0587;\n\t  t['ecircle'] = 0x24D4;\n\t  t['ecircumflex'] = 0x00EA;\n\t  t['ecircumflexacute'] = 0x1EBF;\n\t  t['ecircumflexbelow'] = 0x1E19;\n\t  t['ecircumflexdotbelow'] = 0x1EC7;\n\t  t['ecircumflexgrave'] = 0x1EC1;\n\t  t['ecircumflexhookabove'] = 0x1EC3;\n\t  t['ecircumflextilde'] = 0x1EC5;\n\t  t['ecyrillic'] = 0x0454;\n\t  t['edblgrave'] = 0x0205;\n\t  t['edeva'] = 0x090F;\n\t  t['edieresis'] = 0x00EB;\n\t  t['edot'] = 0x0117;\n\t  t['edotaccent'] = 0x0117;\n\t  t['edotbelow'] = 0x1EB9;\n\t  t['eegurmukhi'] = 0x0A0F;\n\t  t['eematragurmukhi'] = 0x0A47;\n\t  t['efcyrillic'] = 0x0444;\n\t  t['egrave'] = 0x00E8;\n\t  t['egujarati'] = 0x0A8F;\n\t  t['eharmenian'] = 0x0567;\n\t  t['ehbopomofo'] = 0x311D;\n\t  t['ehiragana'] = 0x3048;\n\t  t['ehookabove'] = 0x1EBB;\n\t  t['eibopomofo'] = 0x311F;\n\t  t['eight'] = 0x0038;\n\t  t['eightarabic'] = 0x0668;\n\t  t['eightbengali'] = 0x09EE;\n\t  t['eightcircle'] = 0x2467;\n\t  t['eightcircleinversesansserif'] = 0x2791;\n\t  t['eightdeva'] = 0x096E;\n\t  t['eighteencircle'] = 0x2471;\n\t  t['eighteenparen'] = 0x2485;\n\t  t['eighteenperiod'] = 0x2499;\n\t  t['eightgujarati'] = 0x0AEE;\n\t  t['eightgurmukhi'] = 0x0A6E;\n\t  t['eighthackarabic'] = 0x0668;\n\t  t['eighthangzhou'] = 0x3028;\n\t  t['eighthnotebeamed'] = 0x266B;\n\t  t['eightideographicparen'] = 0x3227;\n\t  t['eightinferior'] = 0x2088;\n\t  t['eightmonospace'] = 0xFF18;\n\t  t['eightoldstyle'] = 0xF738;\n\t  t['eightparen'] = 0x247B;\n\t  t['eightperiod'] = 0x248F;\n\t  t['eightpersian'] = 0x06F8;\n\t  t['eightroman'] = 0x2177;\n\t  t['eightsuperior'] = 0x2078;\n\t  t['eightthai'] = 0x0E58;\n\t  t['einvertedbreve'] = 0x0207;\n\t  t['eiotifiedcyrillic'] = 0x0465;\n\t  t['ekatakana'] = 0x30A8;\n\t  t['ekatakanahalfwidth'] = 0xFF74;\n\t  t['ekonkargurmukhi'] = 0x0A74;\n\t  t['ekorean'] = 0x3154;\n\t  t['elcyrillic'] = 0x043B;\n\t  t['element'] = 0x2208;\n\t  t['elevencircle'] = 0x246A;\n\t  t['elevenparen'] = 0x247E;\n\t  t['elevenperiod'] = 0x2492;\n\t  t['elevenroman'] = 0x217A;\n\t  t['ellipsis'] = 0x2026;\n\t  t['ellipsisvertical'] = 0x22EE;\n\t  t['emacron'] = 0x0113;\n\t  t['emacronacute'] = 0x1E17;\n\t  t['emacrongrave'] = 0x1E15;\n\t  t['emcyrillic'] = 0x043C;\n\t  t['emdash'] = 0x2014;\n\t  t['emdashvertical'] = 0xFE31;\n\t  t['emonospace'] = 0xFF45;\n\t  t['emphasismarkarmenian'] = 0x055B;\n\t  t['emptyset'] = 0x2205;\n\t  t['enbopomofo'] = 0x3123;\n\t  t['encyrillic'] = 0x043D;\n\t  t['endash'] = 0x2013;\n\t  t['endashvertical'] = 0xFE32;\n\t  t['endescendercyrillic'] = 0x04A3;\n\t  t['eng'] = 0x014B;\n\t  t['engbopomofo'] = 0x3125;\n\t  t['enghecyrillic'] = 0x04A5;\n\t  t['enhookcyrillic'] = 0x04C8;\n\t  t['enspace'] = 0x2002;\n\t  t['eogonek'] = 0x0119;\n\t  t['eokorean'] = 0x3153;\n\t  t['eopen'] = 0x025B;\n\t  t['eopenclosed'] = 0x029A;\n\t  t['eopenreversed'] = 0x025C;\n\t  t['eopenreversedclosed'] = 0x025E;\n\t  t['eopenreversedhook'] = 0x025D;\n\t  t['eparen'] = 0x24A0;\n\t  t['epsilon'] = 0x03B5;\n\t  t['epsilontonos'] = 0x03AD;\n\t  t['equal'] = 0x003D;\n\t  t['equalmonospace'] = 0xFF1D;\n\t  t['equalsmall'] = 0xFE66;\n\t  t['equalsuperior'] = 0x207C;\n\t  t['equivalence'] = 0x2261;\n\t  t['erbopomofo'] = 0x3126;\n\t  t['ercyrillic'] = 0x0440;\n\t  t['ereversed'] = 0x0258;\n\t  t['ereversedcyrillic'] = 0x044D;\n\t  t['escyrillic'] = 0x0441;\n\t  t['esdescendercyrillic'] = 0x04AB;\n\t  t['esh'] = 0x0283;\n\t  t['eshcurl'] = 0x0286;\n\t  t['eshortdeva'] = 0x090E;\n\t  t['eshortvowelsigndeva'] = 0x0946;\n\t  t['eshreversedloop'] = 0x01AA;\n\t  t['eshsquatreversed'] = 0x0285;\n\t  t['esmallhiragana'] = 0x3047;\n\t  t['esmallkatakana'] = 0x30A7;\n\t  t['esmallkatakanahalfwidth'] = 0xFF6A;\n\t  t['estimated'] = 0x212E;\n\t  t['esuperior'] = 0xF6EC;\n\t  t['eta'] = 0x03B7;\n\t  t['etarmenian'] = 0x0568;\n\t  t['etatonos'] = 0x03AE;\n\t  t['eth'] = 0x00F0;\n\t  t['etilde'] = 0x1EBD;\n\t  t['etildebelow'] = 0x1E1B;\n\t  t['etnahtafoukhhebrew'] = 0x0591;\n\t  t['etnahtafoukhlefthebrew'] = 0x0591;\n\t  t['etnahtahebrew'] = 0x0591;\n\t  t['etnahtalefthebrew'] = 0x0591;\n\t  t['eturned'] = 0x01DD;\n\t  t['eukorean'] = 0x3161;\n\t  t['euro'] = 0x20AC;\n\t  t['evowelsignbengali'] = 0x09C7;\n\t  t['evowelsigndeva'] = 0x0947;\n\t  t['evowelsigngujarati'] = 0x0AC7;\n\t  t['exclam'] = 0x0021;\n\t  t['exclamarmenian'] = 0x055C;\n\t  t['exclamdbl'] = 0x203C;\n\t  t['exclamdown'] = 0x00A1;\n\t  t['exclamdownsmall'] = 0xF7A1;\n\t  t['exclammonospace'] = 0xFF01;\n\t  t['exclamsmall'] = 0xF721;\n\t  t['existential'] = 0x2203;\n\t  t['ezh'] = 0x0292;\n\t  t['ezhcaron'] = 0x01EF;\n\t  t['ezhcurl'] = 0x0293;\n\t  t['ezhreversed'] = 0x01B9;\n\t  t['ezhtail'] = 0x01BA;\n\t  t['f'] = 0x0066;\n\t  t['fadeva'] = 0x095E;\n\t  t['fagurmukhi'] = 0x0A5E;\n\t  t['fahrenheit'] = 0x2109;\n\t  t['fathaarabic'] = 0x064E;\n\t  t['fathalowarabic'] = 0x064E;\n\t  t['fathatanarabic'] = 0x064B;\n\t  t['fbopomofo'] = 0x3108;\n\t  t['fcircle'] = 0x24D5;\n\t  t['fdotaccent'] = 0x1E1F;\n\t  t['feharabic'] = 0x0641;\n\t  t['feharmenian'] = 0x0586;\n\t  t['fehfinalarabic'] = 0xFED2;\n\t  t['fehinitialarabic'] = 0xFED3;\n\t  t['fehmedialarabic'] = 0xFED4;\n\t  t['feicoptic'] = 0x03E5;\n\t  t['female'] = 0x2640;\n\t  t['ff'] = 0xFB00;\n\t  t['ffi'] = 0xFB03;\n\t  t['ffl'] = 0xFB04;\n\t  t['fi'] = 0xFB01;\n\t  t['fifteencircle'] = 0x246E;\n\t  t['fifteenparen'] = 0x2482;\n\t  t['fifteenperiod'] = 0x2496;\n\t  t['figuredash'] = 0x2012;\n\t  t['filledbox'] = 0x25A0;\n\t  t['filledrect'] = 0x25AC;\n\t  t['finalkaf'] = 0x05DA;\n\t  t['finalkafdagesh'] = 0xFB3A;\n\t  t['finalkafdageshhebrew'] = 0xFB3A;\n\t  t['finalkafhebrew'] = 0x05DA;\n\t  t['finalmem'] = 0x05DD;\n\t  t['finalmemhebrew'] = 0x05DD;\n\t  t['finalnun'] = 0x05DF;\n\t  t['finalnunhebrew'] = 0x05DF;\n\t  t['finalpe'] = 0x05E3;\n\t  t['finalpehebrew'] = 0x05E3;\n\t  t['finaltsadi'] = 0x05E5;\n\t  t['finaltsadihebrew'] = 0x05E5;\n\t  t['firsttonechinese'] = 0x02C9;\n\t  t['fisheye'] = 0x25C9;\n\t  t['fitacyrillic'] = 0x0473;\n\t  t['five'] = 0x0035;\n\t  t['fivearabic'] = 0x0665;\n\t  t['fivebengali'] = 0x09EB;\n\t  t['fivecircle'] = 0x2464;\n\t  t['fivecircleinversesansserif'] = 0x278E;\n\t  t['fivedeva'] = 0x096B;\n\t  t['fiveeighths'] = 0x215D;\n\t  t['fivegujarati'] = 0x0AEB;\n\t  t['fivegurmukhi'] = 0x0A6B;\n\t  t['fivehackarabic'] = 0x0665;\n\t  t['fivehangzhou'] = 0x3025;\n\t  t['fiveideographicparen'] = 0x3224;\n\t  t['fiveinferior'] = 0x2085;\n\t  t['fivemonospace'] = 0xFF15;\n\t  t['fiveoldstyle'] = 0xF735;\n\t  t['fiveparen'] = 0x2478;\n\t  t['fiveperiod'] = 0x248C;\n\t  t['fivepersian'] = 0x06F5;\n\t  t['fiveroman'] = 0x2174;\n\t  t['fivesuperior'] = 0x2075;\n\t  t['fivethai'] = 0x0E55;\n\t  t['fl'] = 0xFB02;\n\t  t['florin'] = 0x0192;\n\t  t['fmonospace'] = 0xFF46;\n\t  t['fmsquare'] = 0x3399;\n\t  t['fofanthai'] = 0x0E1F;\n\t  t['fofathai'] = 0x0E1D;\n\t  t['fongmanthai'] = 0x0E4F;\n\t  t['forall'] = 0x2200;\n\t  t['four'] = 0x0034;\n\t  t['fourarabic'] = 0x0664;\n\t  t['fourbengali'] = 0x09EA;\n\t  t['fourcircle'] = 0x2463;\n\t  t['fourcircleinversesansserif'] = 0x278D;\n\t  t['fourdeva'] = 0x096A;\n\t  t['fourgujarati'] = 0x0AEA;\n\t  t['fourgurmukhi'] = 0x0A6A;\n\t  t['fourhackarabic'] = 0x0664;\n\t  t['fourhangzhou'] = 0x3024;\n\t  t['fourideographicparen'] = 0x3223;\n\t  t['fourinferior'] = 0x2084;\n\t  t['fourmonospace'] = 0xFF14;\n\t  t['fournumeratorbengali'] = 0x09F7;\n\t  t['fouroldstyle'] = 0xF734;\n\t  t['fourparen'] = 0x2477;\n\t  t['fourperiod'] = 0x248B;\n\t  t['fourpersian'] = 0x06F4;\n\t  t['fourroman'] = 0x2173;\n\t  t['foursuperior'] = 0x2074;\n\t  t['fourteencircle'] = 0x246D;\n\t  t['fourteenparen'] = 0x2481;\n\t  t['fourteenperiod'] = 0x2495;\n\t  t['fourthai'] = 0x0E54;\n\t  t['fourthtonechinese'] = 0x02CB;\n\t  t['fparen'] = 0x24A1;\n\t  t['fraction'] = 0x2044;\n\t  t['franc'] = 0x20A3;\n\t  t['g'] = 0x0067;\n\t  t['gabengali'] = 0x0997;\n\t  t['gacute'] = 0x01F5;\n\t  t['gadeva'] = 0x0917;\n\t  t['gafarabic'] = 0x06AF;\n\t  t['gaffinalarabic'] = 0xFB93;\n\t  t['gafinitialarabic'] = 0xFB94;\n\t  t['gafmedialarabic'] = 0xFB95;\n\t  t['gagujarati'] = 0x0A97;\n\t  t['gagurmukhi'] = 0x0A17;\n\t  t['gahiragana'] = 0x304C;\n\t  t['gakatakana'] = 0x30AC;\n\t  t['gamma'] = 0x03B3;\n\t  t['gammalatinsmall'] = 0x0263;\n\t  t['gammasuperior'] = 0x02E0;\n\t  t['gangiacoptic'] = 0x03EB;\n\t  t['gbopomofo'] = 0x310D;\n\t  t['gbreve'] = 0x011F;\n\t  t['gcaron'] = 0x01E7;\n\t  t['gcedilla'] = 0x0123;\n\t  t['gcircle'] = 0x24D6;\n\t  t['gcircumflex'] = 0x011D;\n\t  t['gcommaaccent'] = 0x0123;\n\t  t['gdot'] = 0x0121;\n\t  t['gdotaccent'] = 0x0121;\n\t  t['gecyrillic'] = 0x0433;\n\t  t['gehiragana'] = 0x3052;\n\t  t['gekatakana'] = 0x30B2;\n\t  t['geometricallyequal'] = 0x2251;\n\t  t['gereshaccenthebrew'] = 0x059C;\n\t  t['gereshhebrew'] = 0x05F3;\n\t  t['gereshmuqdamhebrew'] = 0x059D;\n\t  t['germandbls'] = 0x00DF;\n\t  t['gershayimaccenthebrew'] = 0x059E;\n\t  t['gershayimhebrew'] = 0x05F4;\n\t  t['getamark'] = 0x3013;\n\t  t['ghabengali'] = 0x0998;\n\t  t['ghadarmenian'] = 0x0572;\n\t  t['ghadeva'] = 0x0918;\n\t  t['ghagujarati'] = 0x0A98;\n\t  t['ghagurmukhi'] = 0x0A18;\n\t  t['ghainarabic'] = 0x063A;\n\t  t['ghainfinalarabic'] = 0xFECE;\n\t  t['ghaininitialarabic'] = 0xFECF;\n\t  t['ghainmedialarabic'] = 0xFED0;\n\t  t['ghemiddlehookcyrillic'] = 0x0495;\n\t  t['ghestrokecyrillic'] = 0x0493;\n\t  t['gheupturncyrillic'] = 0x0491;\n\t  t['ghhadeva'] = 0x095A;\n\t  t['ghhagurmukhi'] = 0x0A5A;\n\t  t['ghook'] = 0x0260;\n\t  t['ghzsquare'] = 0x3393;\n\t  t['gihiragana'] = 0x304E;\n\t  t['gikatakana'] = 0x30AE;\n\t  t['gimarmenian'] = 0x0563;\n\t  t['gimel'] = 0x05D2;\n\t  t['gimeldagesh'] = 0xFB32;\n\t  t['gimeldageshhebrew'] = 0xFB32;\n\t  t['gimelhebrew'] = 0x05D2;\n\t  t['gjecyrillic'] = 0x0453;\n\t  t['glottalinvertedstroke'] = 0x01BE;\n\t  t['glottalstop'] = 0x0294;\n\t  t['glottalstopinverted'] = 0x0296;\n\t  t['glottalstopmod'] = 0x02C0;\n\t  t['glottalstopreversed'] = 0x0295;\n\t  t['glottalstopreversedmod'] = 0x02C1;\n\t  t['glottalstopreversedsuperior'] = 0x02E4;\n\t  t['glottalstopstroke'] = 0x02A1;\n\t  t['glottalstopstrokereversed'] = 0x02A2;\n\t  t['gmacron'] = 0x1E21;\n\t  t['gmonospace'] = 0xFF47;\n\t  t['gohiragana'] = 0x3054;\n\t  t['gokatakana'] = 0x30B4;\n\t  t['gparen'] = 0x24A2;\n\t  t['gpasquare'] = 0x33AC;\n\t  t['gradient'] = 0x2207;\n\t  t['grave'] = 0x0060;\n\t  t['gravebelowcmb'] = 0x0316;\n\t  t['gravecmb'] = 0x0300;\n\t  t['gravecomb'] = 0x0300;\n\t  t['gravedeva'] = 0x0953;\n\t  t['gravelowmod'] = 0x02CE;\n\t  t['gravemonospace'] = 0xFF40;\n\t  t['gravetonecmb'] = 0x0340;\n\t  t['greater'] = 0x003E;\n\t  t['greaterequal'] = 0x2265;\n\t  t['greaterequalorless'] = 0x22DB;\n\t  t['greatermonospace'] = 0xFF1E;\n\t  t['greaterorequivalent'] = 0x2273;\n\t  t['greaterorless'] = 0x2277;\n\t  t['greateroverequal'] = 0x2267;\n\t  t['greatersmall'] = 0xFE65;\n\t  t['gscript'] = 0x0261;\n\t  t['gstroke'] = 0x01E5;\n\t  t['guhiragana'] = 0x3050;\n\t  t['guillemotleft'] = 0x00AB;\n\t  t['guillemotright'] = 0x00BB;\n\t  t['guilsinglleft'] = 0x2039;\n\t  t['guilsinglright'] = 0x203A;\n\t  t['gukatakana'] = 0x30B0;\n\t  t['guramusquare'] = 0x3318;\n\t  t['gysquare'] = 0x33C9;\n\t  t['h'] = 0x0068;\n\t  t['haabkhasiancyrillic'] = 0x04A9;\n\t  t['haaltonearabic'] = 0x06C1;\n\t  t['habengali'] = 0x09B9;\n\t  t['hadescendercyrillic'] = 0x04B3;\n\t  t['hadeva'] = 0x0939;\n\t  t['hagujarati'] = 0x0AB9;\n\t  t['hagurmukhi'] = 0x0A39;\n\t  t['haharabic'] = 0x062D;\n\t  t['hahfinalarabic'] = 0xFEA2;\n\t  t['hahinitialarabic'] = 0xFEA3;\n\t  t['hahiragana'] = 0x306F;\n\t  t['hahmedialarabic'] = 0xFEA4;\n\t  t['haitusquare'] = 0x332A;\n\t  t['hakatakana'] = 0x30CF;\n\t  t['hakatakanahalfwidth'] = 0xFF8A;\n\t  t['halantgurmukhi'] = 0x0A4D;\n\t  t['hamzaarabic'] = 0x0621;\n\t  t['hamzalowarabic'] = 0x0621;\n\t  t['hangulfiller'] = 0x3164;\n\t  t['hardsigncyrillic'] = 0x044A;\n\t  t['harpoonleftbarbup'] = 0x21BC;\n\t  t['harpoonrightbarbup'] = 0x21C0;\n\t  t['hasquare'] = 0x33CA;\n\t  t['hatafpatah'] = 0x05B2;\n\t  t['hatafpatah16'] = 0x05B2;\n\t  t['hatafpatah23'] = 0x05B2;\n\t  t['hatafpatah2f'] = 0x05B2;\n\t  t['hatafpatahhebrew'] = 0x05B2;\n\t  t['hatafpatahnarrowhebrew'] = 0x05B2;\n\t  t['hatafpatahquarterhebrew'] = 0x05B2;\n\t  t['hatafpatahwidehebrew'] = 0x05B2;\n\t  t['hatafqamats'] = 0x05B3;\n\t  t['hatafqamats1b'] = 0x05B3;\n\t  t['hatafqamats28'] = 0x05B3;\n\t  t['hatafqamats34'] = 0x05B3;\n\t  t['hatafqamatshebrew'] = 0x05B3;\n\t  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n\t  t['hatafqamatsquarterhebrew'] = 0x05B3;\n\t  t['hatafqamatswidehebrew'] = 0x05B3;\n\t  t['hatafsegol'] = 0x05B1;\n\t  t['hatafsegol17'] = 0x05B1;\n\t  t['hatafsegol24'] = 0x05B1;\n\t  t['hatafsegol30'] = 0x05B1;\n\t  t['hatafsegolhebrew'] = 0x05B1;\n\t  t['hatafsegolnarrowhebrew'] = 0x05B1;\n\t  t['hatafsegolquarterhebrew'] = 0x05B1;\n\t  t['hatafsegolwidehebrew'] = 0x05B1;\n\t  t['hbar'] = 0x0127;\n\t  t['hbopomofo'] = 0x310F;\n\t  t['hbrevebelow'] = 0x1E2B;\n\t  t['hcedilla'] = 0x1E29;\n\t  t['hcircle'] = 0x24D7;\n\t  t['hcircumflex'] = 0x0125;\n\t  t['hdieresis'] = 0x1E27;\n\t  t['hdotaccent'] = 0x1E23;\n\t  t['hdotbelow'] = 0x1E25;\n\t  t['he'] = 0x05D4;\n\t  t['heart'] = 0x2665;\n\t  t['heartsuitblack'] = 0x2665;\n\t  t['heartsuitwhite'] = 0x2661;\n\t  t['hedagesh'] = 0xFB34;\n\t  t['hedageshhebrew'] = 0xFB34;\n\t  t['hehaltonearabic'] = 0x06C1;\n\t  t['heharabic'] = 0x0647;\n\t  t['hehebrew'] = 0x05D4;\n\t  t['hehfinalaltonearabic'] = 0xFBA7;\n\t  t['hehfinalalttwoarabic'] = 0xFEEA;\n\t  t['hehfinalarabic'] = 0xFEEA;\n\t  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n\t  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n\t  t['hehinitialaltonearabic'] = 0xFBA8;\n\t  t['hehinitialarabic'] = 0xFEEB;\n\t  t['hehiragana'] = 0x3078;\n\t  t['hehmedialaltonearabic'] = 0xFBA9;\n\t  t['hehmedialarabic'] = 0xFEEC;\n\t  t['heiseierasquare'] = 0x337B;\n\t  t['hekatakana'] = 0x30D8;\n\t  t['hekatakanahalfwidth'] = 0xFF8D;\n\t  t['hekutaarusquare'] = 0x3336;\n\t  t['henghook'] = 0x0267;\n\t  t['herutusquare'] = 0x3339;\n\t  t['het'] = 0x05D7;\n\t  t['hethebrew'] = 0x05D7;\n\t  t['hhook'] = 0x0266;\n\t  t['hhooksuperior'] = 0x02B1;\n\t  t['hieuhacirclekorean'] = 0x327B;\n\t  t['hieuhaparenkorean'] = 0x321B;\n\t  t['hieuhcirclekorean'] = 0x326D;\n\t  t['hieuhkorean'] = 0x314E;\n\t  t['hieuhparenkorean'] = 0x320D;\n\t  t['hihiragana'] = 0x3072;\n\t  t['hikatakana'] = 0x30D2;\n\t  t['hikatakanahalfwidth'] = 0xFF8B;\n\t  t['hiriq'] = 0x05B4;\n\t  t['hiriq14'] = 0x05B4;\n\t  t['hiriq21'] = 0x05B4;\n\t  t['hiriq2d'] = 0x05B4;\n\t  t['hiriqhebrew'] = 0x05B4;\n\t  t['hiriqnarrowhebrew'] = 0x05B4;\n\t  t['hiriqquarterhebrew'] = 0x05B4;\n\t  t['hiriqwidehebrew'] = 0x05B4;\n\t  t['hlinebelow'] = 0x1E96;\n\t  t['hmonospace'] = 0xFF48;\n\t  t['hoarmenian'] = 0x0570;\n\t  t['hohipthai'] = 0x0E2B;\n\t  t['hohiragana'] = 0x307B;\n\t  t['hokatakana'] = 0x30DB;\n\t  t['hokatakanahalfwidth'] = 0xFF8E;\n\t  t['holam'] = 0x05B9;\n\t  t['holam19'] = 0x05B9;\n\t  t['holam26'] = 0x05B9;\n\t  t['holam32'] = 0x05B9;\n\t  t['holamhebrew'] = 0x05B9;\n\t  t['holamnarrowhebrew'] = 0x05B9;\n\t  t['holamquarterhebrew'] = 0x05B9;\n\t  t['holamwidehebrew'] = 0x05B9;\n\t  t['honokhukthai'] = 0x0E2E;\n\t  t['hookabovecomb'] = 0x0309;\n\t  t['hookcmb'] = 0x0309;\n\t  t['hookpalatalizedbelowcmb'] = 0x0321;\n\t  t['hookretroflexbelowcmb'] = 0x0322;\n\t  t['hoonsquare'] = 0x3342;\n\t  t['horicoptic'] = 0x03E9;\n\t  t['horizontalbar'] = 0x2015;\n\t  t['horncmb'] = 0x031B;\n\t  t['hotsprings'] = 0x2668;\n\t  t['house'] = 0x2302;\n\t  t['hparen'] = 0x24A3;\n\t  t['hsuperior'] = 0x02B0;\n\t  t['hturned'] = 0x0265;\n\t  t['huhiragana'] = 0x3075;\n\t  t['huiitosquare'] = 0x3333;\n\t  t['hukatakana'] = 0x30D5;\n\t  t['hukatakanahalfwidth'] = 0xFF8C;\n\t  t['hungarumlaut'] = 0x02DD;\n\t  t['hungarumlautcmb'] = 0x030B;\n\t  t['hv'] = 0x0195;\n\t  t['hyphen'] = 0x002D;\n\t  t['hypheninferior'] = 0xF6E5;\n\t  t['hyphenmonospace'] = 0xFF0D;\n\t  t['hyphensmall'] = 0xFE63;\n\t  t['hyphensuperior'] = 0xF6E6;\n\t  t['hyphentwo'] = 0x2010;\n\t  t['i'] = 0x0069;\n\t  t['iacute'] = 0x00ED;\n\t  t['iacyrillic'] = 0x044F;\n\t  t['ibengali'] = 0x0987;\n\t  t['ibopomofo'] = 0x3127;\n\t  t['ibreve'] = 0x012D;\n\t  t['icaron'] = 0x01D0;\n\t  t['icircle'] = 0x24D8;\n\t  t['icircumflex'] = 0x00EE;\n\t  t['icyrillic'] = 0x0456;\n\t  t['idblgrave'] = 0x0209;\n\t  t['ideographearthcircle'] = 0x328F;\n\t  t['ideographfirecircle'] = 0x328B;\n\t  t['ideographicallianceparen'] = 0x323F;\n\t  t['ideographiccallparen'] = 0x323A;\n\t  t['ideographiccentrecircle'] = 0x32A5;\n\t  t['ideographicclose'] = 0x3006;\n\t  t['ideographiccomma'] = 0x3001;\n\t  t['ideographiccommaleft'] = 0xFF64;\n\t  t['ideographiccongratulationparen'] = 0x3237;\n\t  t['ideographiccorrectcircle'] = 0x32A3;\n\t  t['ideographicearthparen'] = 0x322F;\n\t  t['ideographicenterpriseparen'] = 0x323D;\n\t  t['ideographicexcellentcircle'] = 0x329D;\n\t  t['ideographicfestivalparen'] = 0x3240;\n\t  t['ideographicfinancialcircle'] = 0x3296;\n\t  t['ideographicfinancialparen'] = 0x3236;\n\t  t['ideographicfireparen'] = 0x322B;\n\t  t['ideographichaveparen'] = 0x3232;\n\t  t['ideographichighcircle'] = 0x32A4;\n\t  t['ideographiciterationmark'] = 0x3005;\n\t  t['ideographiclaborcircle'] = 0x3298;\n\t  t['ideographiclaborparen'] = 0x3238;\n\t  t['ideographicleftcircle'] = 0x32A7;\n\t  t['ideographiclowcircle'] = 0x32A6;\n\t  t['ideographicmedicinecircle'] = 0x32A9;\n\t  t['ideographicmetalparen'] = 0x322E;\n\t  t['ideographicmoonparen'] = 0x322A;\n\t  t['ideographicnameparen'] = 0x3234;\n\t  t['ideographicperiod'] = 0x3002;\n\t  t['ideographicprintcircle'] = 0x329E;\n\t  t['ideographicreachparen'] = 0x3243;\n\t  t['ideographicrepresentparen'] = 0x3239;\n\t  t['ideographicresourceparen'] = 0x323E;\n\t  t['ideographicrightcircle'] = 0x32A8;\n\t  t['ideographicsecretcircle'] = 0x3299;\n\t  t['ideographicselfparen'] = 0x3242;\n\t  t['ideographicsocietyparen'] = 0x3233;\n\t  t['ideographicspace'] = 0x3000;\n\t  t['ideographicspecialparen'] = 0x3235;\n\t  t['ideographicstockparen'] = 0x3231;\n\t  t['ideographicstudyparen'] = 0x323B;\n\t  t['ideographicsunparen'] = 0x3230;\n\t  t['ideographicsuperviseparen'] = 0x323C;\n\t  t['ideographicwaterparen'] = 0x322C;\n\t  t['ideographicwoodparen'] = 0x322D;\n\t  t['ideographiczero'] = 0x3007;\n\t  t['ideographmetalcircle'] = 0x328E;\n\t  t['ideographmooncircle'] = 0x328A;\n\t  t['ideographnamecircle'] = 0x3294;\n\t  t['ideographsuncircle'] = 0x3290;\n\t  t['ideographwatercircle'] = 0x328C;\n\t  t['ideographwoodcircle'] = 0x328D;\n\t  t['ideva'] = 0x0907;\n\t  t['idieresis'] = 0x00EF;\n\t  t['idieresisacute'] = 0x1E2F;\n\t  t['idieresiscyrillic'] = 0x04E5;\n\t  t['idotbelow'] = 0x1ECB;\n\t  t['iebrevecyrillic'] = 0x04D7;\n\t  t['iecyrillic'] = 0x0435;\n\t  t['ieungacirclekorean'] = 0x3275;\n\t  t['ieungaparenkorean'] = 0x3215;\n\t  t['ieungcirclekorean'] = 0x3267;\n\t  t['ieungkorean'] = 0x3147;\n\t  t['ieungparenkorean'] = 0x3207;\n\t  t['igrave'] = 0x00EC;\n\t  t['igujarati'] = 0x0A87;\n\t  t['igurmukhi'] = 0x0A07;\n\t  t['ihiragana'] = 0x3044;\n\t  t['ihookabove'] = 0x1EC9;\n\t  t['iibengali'] = 0x0988;\n\t  t['iicyrillic'] = 0x0438;\n\t  t['iideva'] = 0x0908;\n\t  t['iigujarati'] = 0x0A88;\n\t  t['iigurmukhi'] = 0x0A08;\n\t  t['iimatragurmukhi'] = 0x0A40;\n\t  t['iinvertedbreve'] = 0x020B;\n\t  t['iishortcyrillic'] = 0x0439;\n\t  t['iivowelsignbengali'] = 0x09C0;\n\t  t['iivowelsigndeva'] = 0x0940;\n\t  t['iivowelsigngujarati'] = 0x0AC0;\n\t  t['ij'] = 0x0133;\n\t  t['ikatakana'] = 0x30A4;\n\t  t['ikatakanahalfwidth'] = 0xFF72;\n\t  t['ikorean'] = 0x3163;\n\t  t['ilde'] = 0x02DC;\n\t  t['iluyhebrew'] = 0x05AC;\n\t  t['imacron'] = 0x012B;\n\t  t['imacroncyrillic'] = 0x04E3;\n\t  t['imageorapproximatelyequal'] = 0x2253;\n\t  t['imatragurmukhi'] = 0x0A3F;\n\t  t['imonospace'] = 0xFF49;\n\t  t['increment'] = 0x2206;\n\t  t['infinity'] = 0x221E;\n\t  t['iniarmenian'] = 0x056B;\n\t  t['integral'] = 0x222B;\n\t  t['integralbottom'] = 0x2321;\n\t  t['integralbt'] = 0x2321;\n\t  t['integralex'] = 0xF8F5;\n\t  t['integraltop'] = 0x2320;\n\t  t['integraltp'] = 0x2320;\n\t  t['intersection'] = 0x2229;\n\t  t['intisquare'] = 0x3305;\n\t  t['invbullet'] = 0x25D8;\n\t  t['invcircle'] = 0x25D9;\n\t  t['invsmileface'] = 0x263B;\n\t  t['iocyrillic'] = 0x0451;\n\t  t['iogonek'] = 0x012F;\n\t  t['iota'] = 0x03B9;\n\t  t['iotadieresis'] = 0x03CA;\n\t  t['iotadieresistonos'] = 0x0390;\n\t  t['iotalatin'] = 0x0269;\n\t  t['iotatonos'] = 0x03AF;\n\t  t['iparen'] = 0x24A4;\n\t  t['irigurmukhi'] = 0x0A72;\n\t  t['ismallhiragana'] = 0x3043;\n\t  t['ismallkatakana'] = 0x30A3;\n\t  t['ismallkatakanahalfwidth'] = 0xFF68;\n\t  t['issharbengali'] = 0x09FA;\n\t  t['istroke'] = 0x0268;\n\t  t['isuperior'] = 0xF6ED;\n\t  t['iterationhiragana'] = 0x309D;\n\t  t['iterationkatakana'] = 0x30FD;\n\t  t['itilde'] = 0x0129;\n\t  t['itildebelow'] = 0x1E2D;\n\t  t['iubopomofo'] = 0x3129;\n\t  t['iucyrillic'] = 0x044E;\n\t  t['ivowelsignbengali'] = 0x09BF;\n\t  t['ivowelsigndeva'] = 0x093F;\n\t  t['ivowelsigngujarati'] = 0x0ABF;\n\t  t['izhitsacyrillic'] = 0x0475;\n\t  t['izhitsadblgravecyrillic'] = 0x0477;\n\t  t['j'] = 0x006A;\n\t  t['jaarmenian'] = 0x0571;\n\t  t['jabengali'] = 0x099C;\n\t  t['jadeva'] = 0x091C;\n\t  t['jagujarati'] = 0x0A9C;\n\t  t['jagurmukhi'] = 0x0A1C;\n\t  t['jbopomofo'] = 0x3110;\n\t  t['jcaron'] = 0x01F0;\n\t  t['jcircle'] = 0x24D9;\n\t  t['jcircumflex'] = 0x0135;\n\t  t['jcrossedtail'] = 0x029D;\n\t  t['jdotlessstroke'] = 0x025F;\n\t  t['jecyrillic'] = 0x0458;\n\t  t['jeemarabic'] = 0x062C;\n\t  t['jeemfinalarabic'] = 0xFE9E;\n\t  t['jeeminitialarabic'] = 0xFE9F;\n\t  t['jeemmedialarabic'] = 0xFEA0;\n\t  t['jeharabic'] = 0x0698;\n\t  t['jehfinalarabic'] = 0xFB8B;\n\t  t['jhabengali'] = 0x099D;\n\t  t['jhadeva'] = 0x091D;\n\t  t['jhagujarati'] = 0x0A9D;\n\t  t['jhagurmukhi'] = 0x0A1D;\n\t  t['jheharmenian'] = 0x057B;\n\t  t['jis'] = 0x3004;\n\t  t['jmonospace'] = 0xFF4A;\n\t  t['jparen'] = 0x24A5;\n\t  t['jsuperior'] = 0x02B2;\n\t  t['k'] = 0x006B;\n\t  t['kabashkircyrillic'] = 0x04A1;\n\t  t['kabengali'] = 0x0995;\n\t  t['kacute'] = 0x1E31;\n\t  t['kacyrillic'] = 0x043A;\n\t  t['kadescendercyrillic'] = 0x049B;\n\t  t['kadeva'] = 0x0915;\n\t  t['kaf'] = 0x05DB;\n\t  t['kafarabic'] = 0x0643;\n\t  t['kafdagesh'] = 0xFB3B;\n\t  t['kafdageshhebrew'] = 0xFB3B;\n\t  t['kaffinalarabic'] = 0xFEDA;\n\t  t['kafhebrew'] = 0x05DB;\n\t  t['kafinitialarabic'] = 0xFEDB;\n\t  t['kafmedialarabic'] = 0xFEDC;\n\t  t['kafrafehebrew'] = 0xFB4D;\n\t  t['kagujarati'] = 0x0A95;\n\t  t['kagurmukhi'] = 0x0A15;\n\t  t['kahiragana'] = 0x304B;\n\t  t['kahookcyrillic'] = 0x04C4;\n\t  t['kakatakana'] = 0x30AB;\n\t  t['kakatakanahalfwidth'] = 0xFF76;\n\t  t['kappa'] = 0x03BA;\n\t  t['kappasymbolgreek'] = 0x03F0;\n\t  t['kapyeounmieumkorean'] = 0x3171;\n\t  t['kapyeounphieuphkorean'] = 0x3184;\n\t  t['kapyeounpieupkorean'] = 0x3178;\n\t  t['kapyeounssangpieupkorean'] = 0x3179;\n\t  t['karoriisquare'] = 0x330D;\n\t  t['kashidaautoarabic'] = 0x0640;\n\t  t['kashidaautonosidebearingarabic'] = 0x0640;\n\t  t['kasmallkatakana'] = 0x30F5;\n\t  t['kasquare'] = 0x3384;\n\t  t['kasraarabic'] = 0x0650;\n\t  t['kasratanarabic'] = 0x064D;\n\t  t['kastrokecyrillic'] = 0x049F;\n\t  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n\t  t['kaverticalstrokecyrillic'] = 0x049D;\n\t  t['kbopomofo'] = 0x310E;\n\t  t['kcalsquare'] = 0x3389;\n\t  t['kcaron'] = 0x01E9;\n\t  t['kcedilla'] = 0x0137;\n\t  t['kcircle'] = 0x24DA;\n\t  t['kcommaaccent'] = 0x0137;\n\t  t['kdotbelow'] = 0x1E33;\n\t  t['keharmenian'] = 0x0584;\n\t  t['kehiragana'] = 0x3051;\n\t  t['kekatakana'] = 0x30B1;\n\t  t['kekatakanahalfwidth'] = 0xFF79;\n\t  t['kenarmenian'] = 0x056F;\n\t  t['kesmallkatakana'] = 0x30F6;\n\t  t['kgreenlandic'] = 0x0138;\n\t  t['khabengali'] = 0x0996;\n\t  t['khacyrillic'] = 0x0445;\n\t  t['khadeva'] = 0x0916;\n\t  t['khagujarati'] = 0x0A96;\n\t  t['khagurmukhi'] = 0x0A16;\n\t  t['khaharabic'] = 0x062E;\n\t  t['khahfinalarabic'] = 0xFEA6;\n\t  t['khahinitialarabic'] = 0xFEA7;\n\t  t['khahmedialarabic'] = 0xFEA8;\n\t  t['kheicoptic'] = 0x03E7;\n\t  t['khhadeva'] = 0x0959;\n\t  t['khhagurmukhi'] = 0x0A59;\n\t  t['khieukhacirclekorean'] = 0x3278;\n\t  t['khieukhaparenkorean'] = 0x3218;\n\t  t['khieukhcirclekorean'] = 0x326A;\n\t  t['khieukhkorean'] = 0x314B;\n\t  t['khieukhparenkorean'] = 0x320A;\n\t  t['khokhaithai'] = 0x0E02;\n\t  t['khokhonthai'] = 0x0E05;\n\t  t['khokhuatthai'] = 0x0E03;\n\t  t['khokhwaithai'] = 0x0E04;\n\t  t['khomutthai'] = 0x0E5B;\n\t  t['khook'] = 0x0199;\n\t  t['khorakhangthai'] = 0x0E06;\n\t  t['khzsquare'] = 0x3391;\n\t  t['kihiragana'] = 0x304D;\n\t  t['kikatakana'] = 0x30AD;\n\t  t['kikatakanahalfwidth'] = 0xFF77;\n\t  t['kiroguramusquare'] = 0x3315;\n\t  t['kiromeetorusquare'] = 0x3316;\n\t  t['kirosquare'] = 0x3314;\n\t  t['kiyeokacirclekorean'] = 0x326E;\n\t  t['kiyeokaparenkorean'] = 0x320E;\n\t  t['kiyeokcirclekorean'] = 0x3260;\n\t  t['kiyeokkorean'] = 0x3131;\n\t  t['kiyeokparenkorean'] = 0x3200;\n\t  t['kiyeoksioskorean'] = 0x3133;\n\t  t['kjecyrillic'] = 0x045C;\n\t  t['klinebelow'] = 0x1E35;\n\t  t['klsquare'] = 0x3398;\n\t  t['kmcubedsquare'] = 0x33A6;\n\t  t['kmonospace'] = 0xFF4B;\n\t  t['kmsquaredsquare'] = 0x33A2;\n\t  t['kohiragana'] = 0x3053;\n\t  t['kohmsquare'] = 0x33C0;\n\t  t['kokaithai'] = 0x0E01;\n\t  t['kokatakana'] = 0x30B3;\n\t  t['kokatakanahalfwidth'] = 0xFF7A;\n\t  t['kooposquare'] = 0x331E;\n\t  t['koppacyrillic'] = 0x0481;\n\t  t['koreanstandardsymbol'] = 0x327F;\n\t  t['koroniscmb'] = 0x0343;\n\t  t['kparen'] = 0x24A6;\n\t  t['kpasquare'] = 0x33AA;\n\t  t['ksicyrillic'] = 0x046F;\n\t  t['ktsquare'] = 0x33CF;\n\t  t['kturned'] = 0x029E;\n\t  t['kuhiragana'] = 0x304F;\n\t  t['kukatakana'] = 0x30AF;\n\t  t['kukatakanahalfwidth'] = 0xFF78;\n\t  t['kvsquare'] = 0x33B8;\n\t  t['kwsquare'] = 0x33BE;\n\t  t['l'] = 0x006C;\n\t  t['labengali'] = 0x09B2;\n\t  t['lacute'] = 0x013A;\n\t  t['ladeva'] = 0x0932;\n\t  t['lagujarati'] = 0x0AB2;\n\t  t['lagurmukhi'] = 0x0A32;\n\t  t['lakkhangyaothai'] = 0x0E45;\n\t  t['lamaleffinalarabic'] = 0xFEFC;\n\t  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n\t  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n\t  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n\t  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n\t  t['lamalefisolatedarabic'] = 0xFEFB;\n\t  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n\t  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n\t  t['lamarabic'] = 0x0644;\n\t  t['lambda'] = 0x03BB;\n\t  t['lambdastroke'] = 0x019B;\n\t  t['lamed'] = 0x05DC;\n\t  t['lameddagesh'] = 0xFB3C;\n\t  t['lameddageshhebrew'] = 0xFB3C;\n\t  t['lamedhebrew'] = 0x05DC;\n\t  t['lamfinalarabic'] = 0xFEDE;\n\t  t['lamhahinitialarabic'] = 0xFCCA;\n\t  t['laminitialarabic'] = 0xFEDF;\n\t  t['lamjeeminitialarabic'] = 0xFCC9;\n\t  t['lamkhahinitialarabic'] = 0xFCCB;\n\t  t['lamlamhehisolatedarabic'] = 0xFDF2;\n\t  t['lammedialarabic'] = 0xFEE0;\n\t  t['lammeemhahinitialarabic'] = 0xFD88;\n\t  t['lammeeminitialarabic'] = 0xFCCC;\n\t  t['largecircle'] = 0x25EF;\n\t  t['lbar'] = 0x019A;\n\t  t['lbelt'] = 0x026C;\n\t  t['lbopomofo'] = 0x310C;\n\t  t['lcaron'] = 0x013E;\n\t  t['lcedilla'] = 0x013C;\n\t  t['lcircle'] = 0x24DB;\n\t  t['lcircumflexbelow'] = 0x1E3D;\n\t  t['lcommaaccent'] = 0x013C;\n\t  t['ldot'] = 0x0140;\n\t  t['ldotaccent'] = 0x0140;\n\t  t['ldotbelow'] = 0x1E37;\n\t  t['ldotbelowmacron'] = 0x1E39;\n\t  t['leftangleabovecmb'] = 0x031A;\n\t  t['lefttackbelowcmb'] = 0x0318;\n\t  t['less'] = 0x003C;\n\t  t['lessequal'] = 0x2264;\n\t  t['lessequalorgreater'] = 0x22DA;\n\t  t['lessmonospace'] = 0xFF1C;\n\t  t['lessorequivalent'] = 0x2272;\n\t  t['lessorgreater'] = 0x2276;\n\t  t['lessoverequal'] = 0x2266;\n\t  t['lesssmall'] = 0xFE64;\n\t  t['lezh'] = 0x026E;\n\t  t['lfblock'] = 0x258C;\n\t  t['lhookretroflex'] = 0x026D;\n\t  t['lira'] = 0x20A4;\n\t  t['liwnarmenian'] = 0x056C;\n\t  t['lj'] = 0x01C9;\n\t  t['ljecyrillic'] = 0x0459;\n\t  t['ll'] = 0xF6C0;\n\t  t['lladeva'] = 0x0933;\n\t  t['llagujarati'] = 0x0AB3;\n\t  t['llinebelow'] = 0x1E3B;\n\t  t['llladeva'] = 0x0934;\n\t  t['llvocalicbengali'] = 0x09E1;\n\t  t['llvocalicdeva'] = 0x0961;\n\t  t['llvocalicvowelsignbengali'] = 0x09E3;\n\t  t['llvocalicvowelsigndeva'] = 0x0963;\n\t  t['lmiddletilde'] = 0x026B;\n\t  t['lmonospace'] = 0xFF4C;\n\t  t['lmsquare'] = 0x33D0;\n\t  t['lochulathai'] = 0x0E2C;\n\t  t['logicaland'] = 0x2227;\n\t  t['logicalnot'] = 0x00AC;\n\t  t['logicalnotreversed'] = 0x2310;\n\t  t['logicalor'] = 0x2228;\n\t  t['lolingthai'] = 0x0E25;\n\t  t['longs'] = 0x017F;\n\t  t['lowlinecenterline'] = 0xFE4E;\n\t  t['lowlinecmb'] = 0x0332;\n\t  t['lowlinedashed'] = 0xFE4D;\n\t  t['lozenge'] = 0x25CA;\n\t  t['lparen'] = 0x24A7;\n\t  t['lslash'] = 0x0142;\n\t  t['lsquare'] = 0x2113;\n\t  t['lsuperior'] = 0xF6EE;\n\t  t['ltshade'] = 0x2591;\n\t  t['luthai'] = 0x0E26;\n\t  t['lvocalicbengali'] = 0x098C;\n\t  t['lvocalicdeva'] = 0x090C;\n\t  t['lvocalicvowelsignbengali'] = 0x09E2;\n\t  t['lvocalicvowelsigndeva'] = 0x0962;\n\t  t['lxsquare'] = 0x33D3;\n\t  t['m'] = 0x006D;\n\t  t['mabengali'] = 0x09AE;\n\t  t['macron'] = 0x00AF;\n\t  t['macronbelowcmb'] = 0x0331;\n\t  t['macroncmb'] = 0x0304;\n\t  t['macronlowmod'] = 0x02CD;\n\t  t['macronmonospace'] = 0xFFE3;\n\t  t['macute'] = 0x1E3F;\n\t  t['madeva'] = 0x092E;\n\t  t['magujarati'] = 0x0AAE;\n\t  t['magurmukhi'] = 0x0A2E;\n\t  t['mahapakhhebrew'] = 0x05A4;\n\t  t['mahapakhlefthebrew'] = 0x05A4;\n\t  t['mahiragana'] = 0x307E;\n\t  t['maichattawalowleftthai'] = 0xF895;\n\t  t['maichattawalowrightthai'] = 0xF894;\n\t  t['maichattawathai'] = 0x0E4B;\n\t  t['maichattawaupperleftthai'] = 0xF893;\n\t  t['maieklowleftthai'] = 0xF88C;\n\t  t['maieklowrightthai'] = 0xF88B;\n\t  t['maiekthai'] = 0x0E48;\n\t  t['maiekupperleftthai'] = 0xF88A;\n\t  t['maihanakatleftthai'] = 0xF884;\n\t  t['maihanakatthai'] = 0x0E31;\n\t  t['maitaikhuleftthai'] = 0xF889;\n\t  t['maitaikhuthai'] = 0x0E47;\n\t  t['maitholowleftthai'] = 0xF88F;\n\t  t['maitholowrightthai'] = 0xF88E;\n\t  t['maithothai'] = 0x0E49;\n\t  t['maithoupperleftthai'] = 0xF88D;\n\t  t['maitrilowleftthai'] = 0xF892;\n\t  t['maitrilowrightthai'] = 0xF891;\n\t  t['maitrithai'] = 0x0E4A;\n\t  t['maitriupperleftthai'] = 0xF890;\n\t  t['maiyamokthai'] = 0x0E46;\n\t  t['makatakana'] = 0x30DE;\n\t  t['makatakanahalfwidth'] = 0xFF8F;\n\t  t['male'] = 0x2642;\n\t  t['mansyonsquare'] = 0x3347;\n\t  t['maqafhebrew'] = 0x05BE;\n\t  t['mars'] = 0x2642;\n\t  t['masoracirclehebrew'] = 0x05AF;\n\t  t['masquare'] = 0x3383;\n\t  t['mbopomofo'] = 0x3107;\n\t  t['mbsquare'] = 0x33D4;\n\t  t['mcircle'] = 0x24DC;\n\t  t['mcubedsquare'] = 0x33A5;\n\t  t['mdotaccent'] = 0x1E41;\n\t  t['mdotbelow'] = 0x1E43;\n\t  t['meemarabic'] = 0x0645;\n\t  t['meemfinalarabic'] = 0xFEE2;\n\t  t['meeminitialarabic'] = 0xFEE3;\n\t  t['meemmedialarabic'] = 0xFEE4;\n\t  t['meemmeeminitialarabic'] = 0xFCD1;\n\t  t['meemmeemisolatedarabic'] = 0xFC48;\n\t  t['meetorusquare'] = 0x334D;\n\t  t['mehiragana'] = 0x3081;\n\t  t['meizierasquare'] = 0x337E;\n\t  t['mekatakana'] = 0x30E1;\n\t  t['mekatakanahalfwidth'] = 0xFF92;\n\t  t['mem'] = 0x05DE;\n\t  t['memdagesh'] = 0xFB3E;\n\t  t['memdageshhebrew'] = 0xFB3E;\n\t  t['memhebrew'] = 0x05DE;\n\t  t['menarmenian'] = 0x0574;\n\t  t['merkhahebrew'] = 0x05A5;\n\t  t['merkhakefulahebrew'] = 0x05A6;\n\t  t['merkhakefulalefthebrew'] = 0x05A6;\n\t  t['merkhalefthebrew'] = 0x05A5;\n\t  t['mhook'] = 0x0271;\n\t  t['mhzsquare'] = 0x3392;\n\t  t['middledotkatakanahalfwidth'] = 0xFF65;\n\t  t['middot'] = 0x00B7;\n\t  t['mieumacirclekorean'] = 0x3272;\n\t  t['mieumaparenkorean'] = 0x3212;\n\t  t['mieumcirclekorean'] = 0x3264;\n\t  t['mieumkorean'] = 0x3141;\n\t  t['mieumpansioskorean'] = 0x3170;\n\t  t['mieumparenkorean'] = 0x3204;\n\t  t['mieumpieupkorean'] = 0x316E;\n\t  t['mieumsioskorean'] = 0x316F;\n\t  t['mihiragana'] = 0x307F;\n\t  t['mikatakana'] = 0x30DF;\n\t  t['mikatakanahalfwidth'] = 0xFF90;\n\t  t['minus'] = 0x2212;\n\t  t['minusbelowcmb'] = 0x0320;\n\t  t['minuscircle'] = 0x2296;\n\t  t['minusmod'] = 0x02D7;\n\t  t['minusplus'] = 0x2213;\n\t  t['minute'] = 0x2032;\n\t  t['miribaarusquare'] = 0x334A;\n\t  t['mirisquare'] = 0x3349;\n\t  t['mlonglegturned'] = 0x0270;\n\t  t['mlsquare'] = 0x3396;\n\t  t['mmcubedsquare'] = 0x33A3;\n\t  t['mmonospace'] = 0xFF4D;\n\t  t['mmsquaredsquare'] = 0x339F;\n\t  t['mohiragana'] = 0x3082;\n\t  t['mohmsquare'] = 0x33C1;\n\t  t['mokatakana'] = 0x30E2;\n\t  t['mokatakanahalfwidth'] = 0xFF93;\n\t  t['molsquare'] = 0x33D6;\n\t  t['momathai'] = 0x0E21;\n\t  t['moverssquare'] = 0x33A7;\n\t  t['moverssquaredsquare'] = 0x33A8;\n\t  t['mparen'] = 0x24A8;\n\t  t['mpasquare'] = 0x33AB;\n\t  t['mssquare'] = 0x33B3;\n\t  t['msuperior'] = 0xF6EF;\n\t  t['mturned'] = 0x026F;\n\t  t['mu'] = 0x00B5;\n\t  t['mu1'] = 0x00B5;\n\t  t['muasquare'] = 0x3382;\n\t  t['muchgreater'] = 0x226B;\n\t  t['muchless'] = 0x226A;\n\t  t['mufsquare'] = 0x338C;\n\t  t['mugreek'] = 0x03BC;\n\t  t['mugsquare'] = 0x338D;\n\t  t['muhiragana'] = 0x3080;\n\t  t['mukatakana'] = 0x30E0;\n\t  t['mukatakanahalfwidth'] = 0xFF91;\n\t  t['mulsquare'] = 0x3395;\n\t  t['multiply'] = 0x00D7;\n\t  t['mumsquare'] = 0x339B;\n\t  t['munahhebrew'] = 0x05A3;\n\t  t['munahlefthebrew'] = 0x05A3;\n\t  t['musicalnote'] = 0x266A;\n\t  t['musicalnotedbl'] = 0x266B;\n\t  t['musicflatsign'] = 0x266D;\n\t  t['musicsharpsign'] = 0x266F;\n\t  t['mussquare'] = 0x33B2;\n\t  t['muvsquare'] = 0x33B6;\n\t  t['muwsquare'] = 0x33BC;\n\t  t['mvmegasquare'] = 0x33B9;\n\t  t['mvsquare'] = 0x33B7;\n\t  t['mwmegasquare'] = 0x33BF;\n\t  t['mwsquare'] = 0x33BD;\n\t  t['n'] = 0x006E;\n\t  t['nabengali'] = 0x09A8;\n\t  t['nabla'] = 0x2207;\n\t  t['nacute'] = 0x0144;\n\t  t['nadeva'] = 0x0928;\n\t  t['nagujarati'] = 0x0AA8;\n\t  t['nagurmukhi'] = 0x0A28;\n\t  t['nahiragana'] = 0x306A;\n\t  t['nakatakana'] = 0x30CA;\n\t  t['nakatakanahalfwidth'] = 0xFF85;\n\t  t['napostrophe'] = 0x0149;\n\t  t['nasquare'] = 0x3381;\n\t  t['nbopomofo'] = 0x310B;\n\t  t['nbspace'] = 0x00A0;\n\t  t['ncaron'] = 0x0148;\n\t  t['ncedilla'] = 0x0146;\n\t  t['ncircle'] = 0x24DD;\n\t  t['ncircumflexbelow'] = 0x1E4B;\n\t  t['ncommaaccent'] = 0x0146;\n\t  t['ndotaccent'] = 0x1E45;\n\t  t['ndotbelow'] = 0x1E47;\n\t  t['nehiragana'] = 0x306D;\n\t  t['nekatakana'] = 0x30CD;\n\t  t['nekatakanahalfwidth'] = 0xFF88;\n\t  t['newsheqelsign'] = 0x20AA;\n\t  t['nfsquare'] = 0x338B;\n\t  t['ngabengali'] = 0x0999;\n\t  t['ngadeva'] = 0x0919;\n\t  t['ngagujarati'] = 0x0A99;\n\t  t['ngagurmukhi'] = 0x0A19;\n\t  t['ngonguthai'] = 0x0E07;\n\t  t['nhiragana'] = 0x3093;\n\t  t['nhookleft'] = 0x0272;\n\t  t['nhookretroflex'] = 0x0273;\n\t  t['nieunacirclekorean'] = 0x326F;\n\t  t['nieunaparenkorean'] = 0x320F;\n\t  t['nieuncieuckorean'] = 0x3135;\n\t  t['nieuncirclekorean'] = 0x3261;\n\t  t['nieunhieuhkorean'] = 0x3136;\n\t  t['nieunkorean'] = 0x3134;\n\t  t['nieunpansioskorean'] = 0x3168;\n\t  t['nieunparenkorean'] = 0x3201;\n\t  t['nieunsioskorean'] = 0x3167;\n\t  t['nieuntikeutkorean'] = 0x3166;\n\t  t['nihiragana'] = 0x306B;\n\t  t['nikatakana'] = 0x30CB;\n\t  t['nikatakanahalfwidth'] = 0xFF86;\n\t  t['nikhahitleftthai'] = 0xF899;\n\t  t['nikhahitthai'] = 0x0E4D;\n\t  t['nine'] = 0x0039;\n\t  t['ninearabic'] = 0x0669;\n\t  t['ninebengali'] = 0x09EF;\n\t  t['ninecircle'] = 0x2468;\n\t  t['ninecircleinversesansserif'] = 0x2792;\n\t  t['ninedeva'] = 0x096F;\n\t  t['ninegujarati'] = 0x0AEF;\n\t  t['ninegurmukhi'] = 0x0A6F;\n\t  t['ninehackarabic'] = 0x0669;\n\t  t['ninehangzhou'] = 0x3029;\n\t  t['nineideographicparen'] = 0x3228;\n\t  t['nineinferior'] = 0x2089;\n\t  t['ninemonospace'] = 0xFF19;\n\t  t['nineoldstyle'] = 0xF739;\n\t  t['nineparen'] = 0x247C;\n\t  t['nineperiod'] = 0x2490;\n\t  t['ninepersian'] = 0x06F9;\n\t  t['nineroman'] = 0x2178;\n\t  t['ninesuperior'] = 0x2079;\n\t  t['nineteencircle'] = 0x2472;\n\t  t['nineteenparen'] = 0x2486;\n\t  t['nineteenperiod'] = 0x249A;\n\t  t['ninethai'] = 0x0E59;\n\t  t['nj'] = 0x01CC;\n\t  t['njecyrillic'] = 0x045A;\n\t  t['nkatakana'] = 0x30F3;\n\t  t['nkatakanahalfwidth'] = 0xFF9D;\n\t  t['nlegrightlong'] = 0x019E;\n\t  t['nlinebelow'] = 0x1E49;\n\t  t['nmonospace'] = 0xFF4E;\n\t  t['nmsquare'] = 0x339A;\n\t  t['nnabengali'] = 0x09A3;\n\t  t['nnadeva'] = 0x0923;\n\t  t['nnagujarati'] = 0x0AA3;\n\t  t['nnagurmukhi'] = 0x0A23;\n\t  t['nnnadeva'] = 0x0929;\n\t  t['nohiragana'] = 0x306E;\n\t  t['nokatakana'] = 0x30CE;\n\t  t['nokatakanahalfwidth'] = 0xFF89;\n\t  t['nonbreakingspace'] = 0x00A0;\n\t  t['nonenthai'] = 0x0E13;\n\t  t['nonuthai'] = 0x0E19;\n\t  t['noonarabic'] = 0x0646;\n\t  t['noonfinalarabic'] = 0xFEE6;\n\t  t['noonghunnaarabic'] = 0x06BA;\n\t  t['noonghunnafinalarabic'] = 0xFB9F;\n\t  t['nooninitialarabic'] = 0xFEE7;\n\t  t['noonjeeminitialarabic'] = 0xFCD2;\n\t  t['noonjeemisolatedarabic'] = 0xFC4B;\n\t  t['noonmedialarabic'] = 0xFEE8;\n\t  t['noonmeeminitialarabic'] = 0xFCD5;\n\t  t['noonmeemisolatedarabic'] = 0xFC4E;\n\t  t['noonnoonfinalarabic'] = 0xFC8D;\n\t  t['notcontains'] = 0x220C;\n\t  t['notelement'] = 0x2209;\n\t  t['notelementof'] = 0x2209;\n\t  t['notequal'] = 0x2260;\n\t  t['notgreater'] = 0x226F;\n\t  t['notgreaternorequal'] = 0x2271;\n\t  t['notgreaternorless'] = 0x2279;\n\t  t['notidentical'] = 0x2262;\n\t  t['notless'] = 0x226E;\n\t  t['notlessnorequal'] = 0x2270;\n\t  t['notparallel'] = 0x2226;\n\t  t['notprecedes'] = 0x2280;\n\t  t['notsubset'] = 0x2284;\n\t  t['notsucceeds'] = 0x2281;\n\t  t['notsuperset'] = 0x2285;\n\t  t['nowarmenian'] = 0x0576;\n\t  t['nparen'] = 0x24A9;\n\t  t['nssquare'] = 0x33B1;\n\t  t['nsuperior'] = 0x207F;\n\t  t['ntilde'] = 0x00F1;\n\t  t['nu'] = 0x03BD;\n\t  t['nuhiragana'] = 0x306C;\n\t  t['nukatakana'] = 0x30CC;\n\t  t['nukatakanahalfwidth'] = 0xFF87;\n\t  t['nuktabengali'] = 0x09BC;\n\t  t['nuktadeva'] = 0x093C;\n\t  t['nuktagujarati'] = 0x0ABC;\n\t  t['nuktagurmukhi'] = 0x0A3C;\n\t  t['numbersign'] = 0x0023;\n\t  t['numbersignmonospace'] = 0xFF03;\n\t  t['numbersignsmall'] = 0xFE5F;\n\t  t['numeralsigngreek'] = 0x0374;\n\t  t['numeralsignlowergreek'] = 0x0375;\n\t  t['numero'] = 0x2116;\n\t  t['nun'] = 0x05E0;\n\t  t['nundagesh'] = 0xFB40;\n\t  t['nundageshhebrew'] = 0xFB40;\n\t  t['nunhebrew'] = 0x05E0;\n\t  t['nvsquare'] = 0x33B5;\n\t  t['nwsquare'] = 0x33BB;\n\t  t['nyabengali'] = 0x099E;\n\t  t['nyadeva'] = 0x091E;\n\t  t['nyagujarati'] = 0x0A9E;\n\t  t['nyagurmukhi'] = 0x0A1E;\n\t  t['o'] = 0x006F;\n\t  t['oacute'] = 0x00F3;\n\t  t['oangthai'] = 0x0E2D;\n\t  t['obarred'] = 0x0275;\n\t  t['obarredcyrillic'] = 0x04E9;\n\t  t['obarreddieresiscyrillic'] = 0x04EB;\n\t  t['obengali'] = 0x0993;\n\t  t['obopomofo'] = 0x311B;\n\t  t['obreve'] = 0x014F;\n\t  t['ocandradeva'] = 0x0911;\n\t  t['ocandragujarati'] = 0x0A91;\n\t  t['ocandravowelsigndeva'] = 0x0949;\n\t  t['ocandravowelsigngujarati'] = 0x0AC9;\n\t  t['ocaron'] = 0x01D2;\n\t  t['ocircle'] = 0x24DE;\n\t  t['ocircumflex'] = 0x00F4;\n\t  t['ocircumflexacute'] = 0x1ED1;\n\t  t['ocircumflexdotbelow'] = 0x1ED9;\n\t  t['ocircumflexgrave'] = 0x1ED3;\n\t  t['ocircumflexhookabove'] = 0x1ED5;\n\t  t['ocircumflextilde'] = 0x1ED7;\n\t  t['ocyrillic'] = 0x043E;\n\t  t['odblacute'] = 0x0151;\n\t  t['odblgrave'] = 0x020D;\n\t  t['odeva'] = 0x0913;\n\t  t['odieresis'] = 0x00F6;\n\t  t['odieresiscyrillic'] = 0x04E7;\n\t  t['odotbelow'] = 0x1ECD;\n\t  t['oe'] = 0x0153;\n\t  t['oekorean'] = 0x315A;\n\t  t['ogonek'] = 0x02DB;\n\t  t['ogonekcmb'] = 0x0328;\n\t  t['ograve'] = 0x00F2;\n\t  t['ogujarati'] = 0x0A93;\n\t  t['oharmenian'] = 0x0585;\n\t  t['ohiragana'] = 0x304A;\n\t  t['ohookabove'] = 0x1ECF;\n\t  t['ohorn'] = 0x01A1;\n\t  t['ohornacute'] = 0x1EDB;\n\t  t['ohorndotbelow'] = 0x1EE3;\n\t  t['ohorngrave'] = 0x1EDD;\n\t  t['ohornhookabove'] = 0x1EDF;\n\t  t['ohorntilde'] = 0x1EE1;\n\t  t['ohungarumlaut'] = 0x0151;\n\t  t['oi'] = 0x01A3;\n\t  t['oinvertedbreve'] = 0x020F;\n\t  t['okatakana'] = 0x30AA;\n\t  t['okatakanahalfwidth'] = 0xFF75;\n\t  t['okorean'] = 0x3157;\n\t  t['olehebrew'] = 0x05AB;\n\t  t['omacron'] = 0x014D;\n\t  t['omacronacute'] = 0x1E53;\n\t  t['omacrongrave'] = 0x1E51;\n\t  t['omdeva'] = 0x0950;\n\t  t['omega'] = 0x03C9;\n\t  t['omega1'] = 0x03D6;\n\t  t['omegacyrillic'] = 0x0461;\n\t  t['omegalatinclosed'] = 0x0277;\n\t  t['omegaroundcyrillic'] = 0x047B;\n\t  t['omegatitlocyrillic'] = 0x047D;\n\t  t['omegatonos'] = 0x03CE;\n\t  t['omgujarati'] = 0x0AD0;\n\t  t['omicron'] = 0x03BF;\n\t  t['omicrontonos'] = 0x03CC;\n\t  t['omonospace'] = 0xFF4F;\n\t  t['one'] = 0x0031;\n\t  t['onearabic'] = 0x0661;\n\t  t['onebengali'] = 0x09E7;\n\t  t['onecircle'] = 0x2460;\n\t  t['onecircleinversesansserif'] = 0x278A;\n\t  t['onedeva'] = 0x0967;\n\t  t['onedotenleader'] = 0x2024;\n\t  t['oneeighth'] = 0x215B;\n\t  t['onefitted'] = 0xF6DC;\n\t  t['onegujarati'] = 0x0AE7;\n\t  t['onegurmukhi'] = 0x0A67;\n\t  t['onehackarabic'] = 0x0661;\n\t  t['onehalf'] = 0x00BD;\n\t  t['onehangzhou'] = 0x3021;\n\t  t['oneideographicparen'] = 0x3220;\n\t  t['oneinferior'] = 0x2081;\n\t  t['onemonospace'] = 0xFF11;\n\t  t['onenumeratorbengali'] = 0x09F4;\n\t  t['oneoldstyle'] = 0xF731;\n\t  t['oneparen'] = 0x2474;\n\t  t['oneperiod'] = 0x2488;\n\t  t['onepersian'] = 0x06F1;\n\t  t['onequarter'] = 0x00BC;\n\t  t['oneroman'] = 0x2170;\n\t  t['onesuperior'] = 0x00B9;\n\t  t['onethai'] = 0x0E51;\n\t  t['onethird'] = 0x2153;\n\t  t['oogonek'] = 0x01EB;\n\t  t['oogonekmacron'] = 0x01ED;\n\t  t['oogurmukhi'] = 0x0A13;\n\t  t['oomatragurmukhi'] = 0x0A4B;\n\t  t['oopen'] = 0x0254;\n\t  t['oparen'] = 0x24AA;\n\t  t['openbullet'] = 0x25E6;\n\t  t['option'] = 0x2325;\n\t  t['ordfeminine'] = 0x00AA;\n\t  t['ordmasculine'] = 0x00BA;\n\t  t['orthogonal'] = 0x221F;\n\t  t['oshortdeva'] = 0x0912;\n\t  t['oshortvowelsigndeva'] = 0x094A;\n\t  t['oslash'] = 0x00F8;\n\t  t['oslashacute'] = 0x01FF;\n\t  t['osmallhiragana'] = 0x3049;\n\t  t['osmallkatakana'] = 0x30A9;\n\t  t['osmallkatakanahalfwidth'] = 0xFF6B;\n\t  t['ostrokeacute'] = 0x01FF;\n\t  t['osuperior'] = 0xF6F0;\n\t  t['otcyrillic'] = 0x047F;\n\t  t['otilde'] = 0x00F5;\n\t  t['otildeacute'] = 0x1E4D;\n\t  t['otildedieresis'] = 0x1E4F;\n\t  t['oubopomofo'] = 0x3121;\n\t  t['overline'] = 0x203E;\n\t  t['overlinecenterline'] = 0xFE4A;\n\t  t['overlinecmb'] = 0x0305;\n\t  t['overlinedashed'] = 0xFE49;\n\t  t['overlinedblwavy'] = 0xFE4C;\n\t  t['overlinewavy'] = 0xFE4B;\n\t  t['overscore'] = 0x00AF;\n\t  t['ovowelsignbengali'] = 0x09CB;\n\t  t['ovowelsigndeva'] = 0x094B;\n\t  t['ovowelsigngujarati'] = 0x0ACB;\n\t  t['p'] = 0x0070;\n\t  t['paampssquare'] = 0x3380;\n\t  t['paasentosquare'] = 0x332B;\n\t  t['pabengali'] = 0x09AA;\n\t  t['pacute'] = 0x1E55;\n\t  t['padeva'] = 0x092A;\n\t  t['pagedown'] = 0x21DF;\n\t  t['pageup'] = 0x21DE;\n\t  t['pagujarati'] = 0x0AAA;\n\t  t['pagurmukhi'] = 0x0A2A;\n\t  t['pahiragana'] = 0x3071;\n\t  t['paiyannoithai'] = 0x0E2F;\n\t  t['pakatakana'] = 0x30D1;\n\t  t['palatalizationcyrilliccmb'] = 0x0484;\n\t  t['palochkacyrillic'] = 0x04C0;\n\t  t['pansioskorean'] = 0x317F;\n\t  t['paragraph'] = 0x00B6;\n\t  t['parallel'] = 0x2225;\n\t  t['parenleft'] = 0x0028;\n\t  t['parenleftaltonearabic'] = 0xFD3E;\n\t  t['parenleftbt'] = 0xF8ED;\n\t  t['parenleftex'] = 0xF8EC;\n\t  t['parenleftinferior'] = 0x208D;\n\t  t['parenleftmonospace'] = 0xFF08;\n\t  t['parenleftsmall'] = 0xFE59;\n\t  t['parenleftsuperior'] = 0x207D;\n\t  t['parenlefttp'] = 0xF8EB;\n\t  t['parenleftvertical'] = 0xFE35;\n\t  t['parenright'] = 0x0029;\n\t  t['parenrightaltonearabic'] = 0xFD3F;\n\t  t['parenrightbt'] = 0xF8F8;\n\t  t['parenrightex'] = 0xF8F7;\n\t  t['parenrightinferior'] = 0x208E;\n\t  t['parenrightmonospace'] = 0xFF09;\n\t  t['parenrightsmall'] = 0xFE5A;\n\t  t['parenrightsuperior'] = 0x207E;\n\t  t['parenrighttp'] = 0xF8F6;\n\t  t['parenrightvertical'] = 0xFE36;\n\t  t['partialdiff'] = 0x2202;\n\t  t['paseqhebrew'] = 0x05C0;\n\t  t['pashtahebrew'] = 0x0599;\n\t  t['pasquare'] = 0x33A9;\n\t  t['patah'] = 0x05B7;\n\t  t['patah11'] = 0x05B7;\n\t  t['patah1d'] = 0x05B7;\n\t  t['patah2a'] = 0x05B7;\n\t  t['patahhebrew'] = 0x05B7;\n\t  t['patahnarrowhebrew'] = 0x05B7;\n\t  t['patahquarterhebrew'] = 0x05B7;\n\t  t['patahwidehebrew'] = 0x05B7;\n\t  t['pazerhebrew'] = 0x05A1;\n\t  t['pbopomofo'] = 0x3106;\n\t  t['pcircle'] = 0x24DF;\n\t  t['pdotaccent'] = 0x1E57;\n\t  t['pe'] = 0x05E4;\n\t  t['pecyrillic'] = 0x043F;\n\t  t['pedagesh'] = 0xFB44;\n\t  t['pedageshhebrew'] = 0xFB44;\n\t  t['peezisquare'] = 0x333B;\n\t  t['pefinaldageshhebrew'] = 0xFB43;\n\t  t['peharabic'] = 0x067E;\n\t  t['peharmenian'] = 0x057A;\n\t  t['pehebrew'] = 0x05E4;\n\t  t['pehfinalarabic'] = 0xFB57;\n\t  t['pehinitialarabic'] = 0xFB58;\n\t  t['pehiragana'] = 0x307A;\n\t  t['pehmedialarabic'] = 0xFB59;\n\t  t['pekatakana'] = 0x30DA;\n\t  t['pemiddlehookcyrillic'] = 0x04A7;\n\t  t['perafehebrew'] = 0xFB4E;\n\t  t['percent'] = 0x0025;\n\t  t['percentarabic'] = 0x066A;\n\t  t['percentmonospace'] = 0xFF05;\n\t  t['percentsmall'] = 0xFE6A;\n\t  t['period'] = 0x002E;\n\t  t['periodarmenian'] = 0x0589;\n\t  t['periodcentered'] = 0x00B7;\n\t  t['periodhalfwidth'] = 0xFF61;\n\t  t['periodinferior'] = 0xF6E7;\n\t  t['periodmonospace'] = 0xFF0E;\n\t  t['periodsmall'] = 0xFE52;\n\t  t['periodsuperior'] = 0xF6E8;\n\t  t['perispomenigreekcmb'] = 0x0342;\n\t  t['perpendicular'] = 0x22A5;\n\t  t['perthousand'] = 0x2030;\n\t  t['peseta'] = 0x20A7;\n\t  t['pfsquare'] = 0x338A;\n\t  t['phabengali'] = 0x09AB;\n\t  t['phadeva'] = 0x092B;\n\t  t['phagujarati'] = 0x0AAB;\n\t  t['phagurmukhi'] = 0x0A2B;\n\t  t['phi'] = 0x03C6;\n\t  t['phi1'] = 0x03D5;\n\t  t['phieuphacirclekorean'] = 0x327A;\n\t  t['phieuphaparenkorean'] = 0x321A;\n\t  t['phieuphcirclekorean'] = 0x326C;\n\t  t['phieuphkorean'] = 0x314D;\n\t  t['phieuphparenkorean'] = 0x320C;\n\t  t['philatin'] = 0x0278;\n\t  t['phinthuthai'] = 0x0E3A;\n\t  t['phisymbolgreek'] = 0x03D5;\n\t  t['phook'] = 0x01A5;\n\t  t['phophanthai'] = 0x0E1E;\n\t  t['phophungthai'] = 0x0E1C;\n\t  t['phosamphaothai'] = 0x0E20;\n\t  t['pi'] = 0x03C0;\n\t  t['pieupacirclekorean'] = 0x3273;\n\t  t['pieupaparenkorean'] = 0x3213;\n\t  t['pieupcieuckorean'] = 0x3176;\n\t  t['pieupcirclekorean'] = 0x3265;\n\t  t['pieupkiyeokkorean'] = 0x3172;\n\t  t['pieupkorean'] = 0x3142;\n\t  t['pieupparenkorean'] = 0x3205;\n\t  t['pieupsioskiyeokkorean'] = 0x3174;\n\t  t['pieupsioskorean'] = 0x3144;\n\t  t['pieupsiostikeutkorean'] = 0x3175;\n\t  t['pieupthieuthkorean'] = 0x3177;\n\t  t['pieuptikeutkorean'] = 0x3173;\n\t  t['pihiragana'] = 0x3074;\n\t  t['pikatakana'] = 0x30D4;\n\t  t['pisymbolgreek'] = 0x03D6;\n\t  t['piwrarmenian'] = 0x0583;\n\t  t['plus'] = 0x002B;\n\t  t['plusbelowcmb'] = 0x031F;\n\t  t['pluscircle'] = 0x2295;\n\t  t['plusminus'] = 0x00B1;\n\t  t['plusmod'] = 0x02D6;\n\t  t['plusmonospace'] = 0xFF0B;\n\t  t['plussmall'] = 0xFE62;\n\t  t['plussuperior'] = 0x207A;\n\t  t['pmonospace'] = 0xFF50;\n\t  t['pmsquare'] = 0x33D8;\n\t  t['pohiragana'] = 0x307D;\n\t  t['pointingindexdownwhite'] = 0x261F;\n\t  t['pointingindexleftwhite'] = 0x261C;\n\t  t['pointingindexrightwhite'] = 0x261E;\n\t  t['pointingindexupwhite'] = 0x261D;\n\t  t['pokatakana'] = 0x30DD;\n\t  t['poplathai'] = 0x0E1B;\n\t  t['postalmark'] = 0x3012;\n\t  t['postalmarkface'] = 0x3020;\n\t  t['pparen'] = 0x24AB;\n\t  t['precedes'] = 0x227A;\n\t  t['prescription'] = 0x211E;\n\t  t['primemod'] = 0x02B9;\n\t  t['primereversed'] = 0x2035;\n\t  t['product'] = 0x220F;\n\t  t['projective'] = 0x2305;\n\t  t['prolongedkana'] = 0x30FC;\n\t  t['propellor'] = 0x2318;\n\t  t['propersubset'] = 0x2282;\n\t  t['propersuperset'] = 0x2283;\n\t  t['proportion'] = 0x2237;\n\t  t['proportional'] = 0x221D;\n\t  t['psi'] = 0x03C8;\n\t  t['psicyrillic'] = 0x0471;\n\t  t['psilipneumatacyrilliccmb'] = 0x0486;\n\t  t['pssquare'] = 0x33B0;\n\t  t['puhiragana'] = 0x3077;\n\t  t['pukatakana'] = 0x30D7;\n\t  t['pvsquare'] = 0x33B4;\n\t  t['pwsquare'] = 0x33BA;\n\t  t['q'] = 0x0071;\n\t  t['qadeva'] = 0x0958;\n\t  t['qadmahebrew'] = 0x05A8;\n\t  t['qafarabic'] = 0x0642;\n\t  t['qaffinalarabic'] = 0xFED6;\n\t  t['qafinitialarabic'] = 0xFED7;\n\t  t['qafmedialarabic'] = 0xFED8;\n\t  t['qamats'] = 0x05B8;\n\t  t['qamats10'] = 0x05B8;\n\t  t['qamats1a'] = 0x05B8;\n\t  t['qamats1c'] = 0x05B8;\n\t  t['qamats27'] = 0x05B8;\n\t  t['qamats29'] = 0x05B8;\n\t  t['qamats33'] = 0x05B8;\n\t  t['qamatsde'] = 0x05B8;\n\t  t['qamatshebrew'] = 0x05B8;\n\t  t['qamatsnarrowhebrew'] = 0x05B8;\n\t  t['qamatsqatanhebrew'] = 0x05B8;\n\t  t['qamatsqatannarrowhebrew'] = 0x05B8;\n\t  t['qamatsqatanquarterhebrew'] = 0x05B8;\n\t  t['qamatsqatanwidehebrew'] = 0x05B8;\n\t  t['qamatsquarterhebrew'] = 0x05B8;\n\t  t['qamatswidehebrew'] = 0x05B8;\n\t  t['qarneyparahebrew'] = 0x059F;\n\t  t['qbopomofo'] = 0x3111;\n\t  t['qcircle'] = 0x24E0;\n\t  t['qhook'] = 0x02A0;\n\t  t['qmonospace'] = 0xFF51;\n\t  t['qof'] = 0x05E7;\n\t  t['qofdagesh'] = 0xFB47;\n\t  t['qofdageshhebrew'] = 0xFB47;\n\t  t['qofhebrew'] = 0x05E7;\n\t  t['qparen'] = 0x24AC;\n\t  t['quarternote'] = 0x2669;\n\t  t['qubuts'] = 0x05BB;\n\t  t['qubuts18'] = 0x05BB;\n\t  t['qubuts25'] = 0x05BB;\n\t  t['qubuts31'] = 0x05BB;\n\t  t['qubutshebrew'] = 0x05BB;\n\t  t['qubutsnarrowhebrew'] = 0x05BB;\n\t  t['qubutsquarterhebrew'] = 0x05BB;\n\t  t['qubutswidehebrew'] = 0x05BB;\n\t  t['question'] = 0x003F;\n\t  t['questionarabic'] = 0x061F;\n\t  t['questionarmenian'] = 0x055E;\n\t  t['questiondown'] = 0x00BF;\n\t  t['questiondownsmall'] = 0xF7BF;\n\t  t['questiongreek'] = 0x037E;\n\t  t['questionmonospace'] = 0xFF1F;\n\t  t['questionsmall'] = 0xF73F;\n\t  t['quotedbl'] = 0x0022;\n\t  t['quotedblbase'] = 0x201E;\n\t  t['quotedblleft'] = 0x201C;\n\t  t['quotedblmonospace'] = 0xFF02;\n\t  t['quotedblprime'] = 0x301E;\n\t  t['quotedblprimereversed'] = 0x301D;\n\t  t['quotedblright'] = 0x201D;\n\t  t['quoteleft'] = 0x2018;\n\t  t['quoteleftreversed'] = 0x201B;\n\t  t['quotereversed'] = 0x201B;\n\t  t['quoteright'] = 0x2019;\n\t  t['quoterightn'] = 0x0149;\n\t  t['quotesinglbase'] = 0x201A;\n\t  t['quotesingle'] = 0x0027;\n\t  t['quotesinglemonospace'] = 0xFF07;\n\t  t['r'] = 0x0072;\n\t  t['raarmenian'] = 0x057C;\n\t  t['rabengali'] = 0x09B0;\n\t  t['racute'] = 0x0155;\n\t  t['radeva'] = 0x0930;\n\t  t['radical'] = 0x221A;\n\t  t['radicalex'] = 0xF8E5;\n\t  t['radoverssquare'] = 0x33AE;\n\t  t['radoverssquaredsquare'] = 0x33AF;\n\t  t['radsquare'] = 0x33AD;\n\t  t['rafe'] = 0x05BF;\n\t  t['rafehebrew'] = 0x05BF;\n\t  t['ragujarati'] = 0x0AB0;\n\t  t['ragurmukhi'] = 0x0A30;\n\t  t['rahiragana'] = 0x3089;\n\t  t['rakatakana'] = 0x30E9;\n\t  t['rakatakanahalfwidth'] = 0xFF97;\n\t  t['ralowerdiagonalbengali'] = 0x09F1;\n\t  t['ramiddlediagonalbengali'] = 0x09F0;\n\t  t['ramshorn'] = 0x0264;\n\t  t['ratio'] = 0x2236;\n\t  t['rbopomofo'] = 0x3116;\n\t  t['rcaron'] = 0x0159;\n\t  t['rcedilla'] = 0x0157;\n\t  t['rcircle'] = 0x24E1;\n\t  t['rcommaaccent'] = 0x0157;\n\t  t['rdblgrave'] = 0x0211;\n\t  t['rdotaccent'] = 0x1E59;\n\t  t['rdotbelow'] = 0x1E5B;\n\t  t['rdotbelowmacron'] = 0x1E5D;\n\t  t['referencemark'] = 0x203B;\n\t  t['reflexsubset'] = 0x2286;\n\t  t['reflexsuperset'] = 0x2287;\n\t  t['registered'] = 0x00AE;\n\t  t['registersans'] = 0xF8E8;\n\t  t['registerserif'] = 0xF6DA;\n\t  t['reharabic'] = 0x0631;\n\t  t['reharmenian'] = 0x0580;\n\t  t['rehfinalarabic'] = 0xFEAE;\n\t  t['rehiragana'] = 0x308C;\n\t  t['rekatakana'] = 0x30EC;\n\t  t['rekatakanahalfwidth'] = 0xFF9A;\n\t  t['resh'] = 0x05E8;\n\t  t['reshdageshhebrew'] = 0xFB48;\n\t  t['reshhebrew'] = 0x05E8;\n\t  t['reversedtilde'] = 0x223D;\n\t  t['reviahebrew'] = 0x0597;\n\t  t['reviamugrashhebrew'] = 0x0597;\n\t  t['revlogicalnot'] = 0x2310;\n\t  t['rfishhook'] = 0x027E;\n\t  t['rfishhookreversed'] = 0x027F;\n\t  t['rhabengali'] = 0x09DD;\n\t  t['rhadeva'] = 0x095D;\n\t  t['rho'] = 0x03C1;\n\t  t['rhook'] = 0x027D;\n\t  t['rhookturned'] = 0x027B;\n\t  t['rhookturnedsuperior'] = 0x02B5;\n\t  t['rhosymbolgreek'] = 0x03F1;\n\t  t['rhotichookmod'] = 0x02DE;\n\t  t['rieulacirclekorean'] = 0x3271;\n\t  t['rieulaparenkorean'] = 0x3211;\n\t  t['rieulcirclekorean'] = 0x3263;\n\t  t['rieulhieuhkorean'] = 0x3140;\n\t  t['rieulkiyeokkorean'] = 0x313A;\n\t  t['rieulkiyeoksioskorean'] = 0x3169;\n\t  t['rieulkorean'] = 0x3139;\n\t  t['rieulmieumkorean'] = 0x313B;\n\t  t['rieulpansioskorean'] = 0x316C;\n\t  t['rieulparenkorean'] = 0x3203;\n\t  t['rieulphieuphkorean'] = 0x313F;\n\t  t['rieulpieupkorean'] = 0x313C;\n\t  t['rieulpieupsioskorean'] = 0x316B;\n\t  t['rieulsioskorean'] = 0x313D;\n\t  t['rieulthieuthkorean'] = 0x313E;\n\t  t['rieultikeutkorean'] = 0x316A;\n\t  t['rieulyeorinhieuhkorean'] = 0x316D;\n\t  t['rightangle'] = 0x221F;\n\t  t['righttackbelowcmb'] = 0x0319;\n\t  t['righttriangle'] = 0x22BF;\n\t  t['rihiragana'] = 0x308A;\n\t  t['rikatakana'] = 0x30EA;\n\t  t['rikatakanahalfwidth'] = 0xFF98;\n\t  t['ring'] = 0x02DA;\n\t  t['ringbelowcmb'] = 0x0325;\n\t  t['ringcmb'] = 0x030A;\n\t  t['ringhalfleft'] = 0x02BF;\n\t  t['ringhalfleftarmenian'] = 0x0559;\n\t  t['ringhalfleftbelowcmb'] = 0x031C;\n\t  t['ringhalfleftcentered'] = 0x02D3;\n\t  t['ringhalfright'] = 0x02BE;\n\t  t['ringhalfrightbelowcmb'] = 0x0339;\n\t  t['ringhalfrightcentered'] = 0x02D2;\n\t  t['rinvertedbreve'] = 0x0213;\n\t  t['rittorusquare'] = 0x3351;\n\t  t['rlinebelow'] = 0x1E5F;\n\t  t['rlongleg'] = 0x027C;\n\t  t['rlonglegturned'] = 0x027A;\n\t  t['rmonospace'] = 0xFF52;\n\t  t['rohiragana'] = 0x308D;\n\t  t['rokatakana'] = 0x30ED;\n\t  t['rokatakanahalfwidth'] = 0xFF9B;\n\t  t['roruathai'] = 0x0E23;\n\t  t['rparen'] = 0x24AD;\n\t  t['rrabengali'] = 0x09DC;\n\t  t['rradeva'] = 0x0931;\n\t  t['rragurmukhi'] = 0x0A5C;\n\t  t['rreharabic'] = 0x0691;\n\t  t['rrehfinalarabic'] = 0xFB8D;\n\t  t['rrvocalicbengali'] = 0x09E0;\n\t  t['rrvocalicdeva'] = 0x0960;\n\t  t['rrvocalicgujarati'] = 0x0AE0;\n\t  t['rrvocalicvowelsignbengali'] = 0x09C4;\n\t  t['rrvocalicvowelsigndeva'] = 0x0944;\n\t  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n\t  t['rsuperior'] = 0xF6F1;\n\t  t['rtblock'] = 0x2590;\n\t  t['rturned'] = 0x0279;\n\t  t['rturnedsuperior'] = 0x02B4;\n\t  t['ruhiragana'] = 0x308B;\n\t  t['rukatakana'] = 0x30EB;\n\t  t['rukatakanahalfwidth'] = 0xFF99;\n\t  t['rupeemarkbengali'] = 0x09F2;\n\t  t['rupeesignbengali'] = 0x09F3;\n\t  t['rupiah'] = 0xF6DD;\n\t  t['ruthai'] = 0x0E24;\n\t  t['rvocalicbengali'] = 0x098B;\n\t  t['rvocalicdeva'] = 0x090B;\n\t  t['rvocalicgujarati'] = 0x0A8B;\n\t  t['rvocalicvowelsignbengali'] = 0x09C3;\n\t  t['rvocalicvowelsigndeva'] = 0x0943;\n\t  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n\t  t['s'] = 0x0073;\n\t  t['sabengali'] = 0x09B8;\n\t  t['sacute'] = 0x015B;\n\t  t['sacutedotaccent'] = 0x1E65;\n\t  t['sadarabic'] = 0x0635;\n\t  t['sadeva'] = 0x0938;\n\t  t['sadfinalarabic'] = 0xFEBA;\n\t  t['sadinitialarabic'] = 0xFEBB;\n\t  t['sadmedialarabic'] = 0xFEBC;\n\t  t['sagujarati'] = 0x0AB8;\n\t  t['sagurmukhi'] = 0x0A38;\n\t  t['sahiragana'] = 0x3055;\n\t  t['sakatakana'] = 0x30B5;\n\t  t['sakatakanahalfwidth'] = 0xFF7B;\n\t  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n\t  t['samekh'] = 0x05E1;\n\t  t['samekhdagesh'] = 0xFB41;\n\t  t['samekhdageshhebrew'] = 0xFB41;\n\t  t['samekhhebrew'] = 0x05E1;\n\t  t['saraaathai'] = 0x0E32;\n\t  t['saraaethai'] = 0x0E41;\n\t  t['saraaimaimalaithai'] = 0x0E44;\n\t  t['saraaimaimuanthai'] = 0x0E43;\n\t  t['saraamthai'] = 0x0E33;\n\t  t['saraathai'] = 0x0E30;\n\t  t['saraethai'] = 0x0E40;\n\t  t['saraiileftthai'] = 0xF886;\n\t  t['saraiithai'] = 0x0E35;\n\t  t['saraileftthai'] = 0xF885;\n\t  t['saraithai'] = 0x0E34;\n\t  t['saraothai'] = 0x0E42;\n\t  t['saraueeleftthai'] = 0xF888;\n\t  t['saraueethai'] = 0x0E37;\n\t  t['saraueleftthai'] = 0xF887;\n\t  t['sarauethai'] = 0x0E36;\n\t  t['sarauthai'] = 0x0E38;\n\t  t['sarauuthai'] = 0x0E39;\n\t  t['sbopomofo'] = 0x3119;\n\t  t['scaron'] = 0x0161;\n\t  t['scarondotaccent'] = 0x1E67;\n\t  t['scedilla'] = 0x015F;\n\t  t['schwa'] = 0x0259;\n\t  t['schwacyrillic'] = 0x04D9;\n\t  t['schwadieresiscyrillic'] = 0x04DB;\n\t  t['schwahook'] = 0x025A;\n\t  t['scircle'] = 0x24E2;\n\t  t['scircumflex'] = 0x015D;\n\t  t['scommaaccent'] = 0x0219;\n\t  t['sdotaccent'] = 0x1E61;\n\t  t['sdotbelow'] = 0x1E63;\n\t  t['sdotbelowdotaccent'] = 0x1E69;\n\t  t['seagullbelowcmb'] = 0x033C;\n\t  t['second'] = 0x2033;\n\t  t['secondtonechinese'] = 0x02CA;\n\t  t['section'] = 0x00A7;\n\t  t['seenarabic'] = 0x0633;\n\t  t['seenfinalarabic'] = 0xFEB2;\n\t  t['seeninitialarabic'] = 0xFEB3;\n\t  t['seenmedialarabic'] = 0xFEB4;\n\t  t['segol'] = 0x05B6;\n\t  t['segol13'] = 0x05B6;\n\t  t['segol1f'] = 0x05B6;\n\t  t['segol2c'] = 0x05B6;\n\t  t['segolhebrew'] = 0x05B6;\n\t  t['segolnarrowhebrew'] = 0x05B6;\n\t  t['segolquarterhebrew'] = 0x05B6;\n\t  t['segoltahebrew'] = 0x0592;\n\t  t['segolwidehebrew'] = 0x05B6;\n\t  t['seharmenian'] = 0x057D;\n\t  t['sehiragana'] = 0x305B;\n\t  t['sekatakana'] = 0x30BB;\n\t  t['sekatakanahalfwidth'] = 0xFF7E;\n\t  t['semicolon'] = 0x003B;\n\t  t['semicolonarabic'] = 0x061B;\n\t  t['semicolonmonospace'] = 0xFF1B;\n\t  t['semicolonsmall'] = 0xFE54;\n\t  t['semivoicedmarkkana'] = 0x309C;\n\t  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n\t  t['sentisquare'] = 0x3322;\n\t  t['sentosquare'] = 0x3323;\n\t  t['seven'] = 0x0037;\n\t  t['sevenarabic'] = 0x0667;\n\t  t['sevenbengali'] = 0x09ED;\n\t  t['sevencircle'] = 0x2466;\n\t  t['sevencircleinversesansserif'] = 0x2790;\n\t  t['sevendeva'] = 0x096D;\n\t  t['seveneighths'] = 0x215E;\n\t  t['sevengujarati'] = 0x0AED;\n\t  t['sevengurmukhi'] = 0x0A6D;\n\t  t['sevenhackarabic'] = 0x0667;\n\t  t['sevenhangzhou'] = 0x3027;\n\t  t['sevenideographicparen'] = 0x3226;\n\t  t['seveninferior'] = 0x2087;\n\t  t['sevenmonospace'] = 0xFF17;\n\t  t['sevenoldstyle'] = 0xF737;\n\t  t['sevenparen'] = 0x247A;\n\t  t['sevenperiod'] = 0x248E;\n\t  t['sevenpersian'] = 0x06F7;\n\t  t['sevenroman'] = 0x2176;\n\t  t['sevensuperior'] = 0x2077;\n\t  t['seventeencircle'] = 0x2470;\n\t  t['seventeenparen'] = 0x2484;\n\t  t['seventeenperiod'] = 0x2498;\n\t  t['seventhai'] = 0x0E57;\n\t  t['sfthyphen'] = 0x00AD;\n\t  t['shaarmenian'] = 0x0577;\n\t  t['shabengali'] = 0x09B6;\n\t  t['shacyrillic'] = 0x0448;\n\t  t['shaddaarabic'] = 0x0651;\n\t  t['shaddadammaarabic'] = 0xFC61;\n\t  t['shaddadammatanarabic'] = 0xFC5E;\n\t  t['shaddafathaarabic'] = 0xFC60;\n\t  t['shaddakasraarabic'] = 0xFC62;\n\t  t['shaddakasratanarabic'] = 0xFC5F;\n\t  t['shade'] = 0x2592;\n\t  t['shadedark'] = 0x2593;\n\t  t['shadelight'] = 0x2591;\n\t  t['shademedium'] = 0x2592;\n\t  t['shadeva'] = 0x0936;\n\t  t['shagujarati'] = 0x0AB6;\n\t  t['shagurmukhi'] = 0x0A36;\n\t  t['shalshelethebrew'] = 0x0593;\n\t  t['shbopomofo'] = 0x3115;\n\t  t['shchacyrillic'] = 0x0449;\n\t  t['sheenarabic'] = 0x0634;\n\t  t['sheenfinalarabic'] = 0xFEB6;\n\t  t['sheeninitialarabic'] = 0xFEB7;\n\t  t['sheenmedialarabic'] = 0xFEB8;\n\t  t['sheicoptic'] = 0x03E3;\n\t  t['sheqel'] = 0x20AA;\n\t  t['sheqelhebrew'] = 0x20AA;\n\t  t['sheva'] = 0x05B0;\n\t  t['sheva115'] = 0x05B0;\n\t  t['sheva15'] = 0x05B0;\n\t  t['sheva22'] = 0x05B0;\n\t  t['sheva2e'] = 0x05B0;\n\t  t['shevahebrew'] = 0x05B0;\n\t  t['shevanarrowhebrew'] = 0x05B0;\n\t  t['shevaquarterhebrew'] = 0x05B0;\n\t  t['shevawidehebrew'] = 0x05B0;\n\t  t['shhacyrillic'] = 0x04BB;\n\t  t['shimacoptic'] = 0x03ED;\n\t  t['shin'] = 0x05E9;\n\t  t['shindagesh'] = 0xFB49;\n\t  t['shindageshhebrew'] = 0xFB49;\n\t  t['shindageshshindot'] = 0xFB2C;\n\t  t['shindageshshindothebrew'] = 0xFB2C;\n\t  t['shindageshsindot'] = 0xFB2D;\n\t  t['shindageshsindothebrew'] = 0xFB2D;\n\t  t['shindothebrew'] = 0x05C1;\n\t  t['shinhebrew'] = 0x05E9;\n\t  t['shinshindot'] = 0xFB2A;\n\t  t['shinshindothebrew'] = 0xFB2A;\n\t  t['shinsindot'] = 0xFB2B;\n\t  t['shinsindothebrew'] = 0xFB2B;\n\t  t['shook'] = 0x0282;\n\t  t['sigma'] = 0x03C3;\n\t  t['sigma1'] = 0x03C2;\n\t  t['sigmafinal'] = 0x03C2;\n\t  t['sigmalunatesymbolgreek'] = 0x03F2;\n\t  t['sihiragana'] = 0x3057;\n\t  t['sikatakana'] = 0x30B7;\n\t  t['sikatakanahalfwidth'] = 0xFF7C;\n\t  t['siluqhebrew'] = 0x05BD;\n\t  t['siluqlefthebrew'] = 0x05BD;\n\t  t['similar'] = 0x223C;\n\t  t['sindothebrew'] = 0x05C2;\n\t  t['siosacirclekorean'] = 0x3274;\n\t  t['siosaparenkorean'] = 0x3214;\n\t  t['sioscieuckorean'] = 0x317E;\n\t  t['sioscirclekorean'] = 0x3266;\n\t  t['sioskiyeokkorean'] = 0x317A;\n\t  t['sioskorean'] = 0x3145;\n\t  t['siosnieunkorean'] = 0x317B;\n\t  t['siosparenkorean'] = 0x3206;\n\t  t['siospieupkorean'] = 0x317D;\n\t  t['siostikeutkorean'] = 0x317C;\n\t  t['six'] = 0x0036;\n\t  t['sixarabic'] = 0x0666;\n\t  t['sixbengali'] = 0x09EC;\n\t  t['sixcircle'] = 0x2465;\n\t  t['sixcircleinversesansserif'] = 0x278F;\n\t  t['sixdeva'] = 0x096C;\n\t  t['sixgujarati'] = 0x0AEC;\n\t  t['sixgurmukhi'] = 0x0A6C;\n\t  t['sixhackarabic'] = 0x0666;\n\t  t['sixhangzhou'] = 0x3026;\n\t  t['sixideographicparen'] = 0x3225;\n\t  t['sixinferior'] = 0x2086;\n\t  t['sixmonospace'] = 0xFF16;\n\t  t['sixoldstyle'] = 0xF736;\n\t  t['sixparen'] = 0x2479;\n\t  t['sixperiod'] = 0x248D;\n\t  t['sixpersian'] = 0x06F6;\n\t  t['sixroman'] = 0x2175;\n\t  t['sixsuperior'] = 0x2076;\n\t  t['sixteencircle'] = 0x246F;\n\t  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n\t  t['sixteenparen'] = 0x2483;\n\t  t['sixteenperiod'] = 0x2497;\n\t  t['sixthai'] = 0x0E56;\n\t  t['slash'] = 0x002F;\n\t  t['slashmonospace'] = 0xFF0F;\n\t  t['slong'] = 0x017F;\n\t  t['slongdotaccent'] = 0x1E9B;\n\t  t['smileface'] = 0x263A;\n\t  t['smonospace'] = 0xFF53;\n\t  t['sofpasuqhebrew'] = 0x05C3;\n\t  t['softhyphen'] = 0x00AD;\n\t  t['softsigncyrillic'] = 0x044C;\n\t  t['sohiragana'] = 0x305D;\n\t  t['sokatakana'] = 0x30BD;\n\t  t['sokatakanahalfwidth'] = 0xFF7F;\n\t  t['soliduslongoverlaycmb'] = 0x0338;\n\t  t['solidusshortoverlaycmb'] = 0x0337;\n\t  t['sorusithai'] = 0x0E29;\n\t  t['sosalathai'] = 0x0E28;\n\t  t['sosothai'] = 0x0E0B;\n\t  t['sosuathai'] = 0x0E2A;\n\t  t['space'] = 0x0020;\n\t  t['spacehackarabic'] = 0x0020;\n\t  t['spade'] = 0x2660;\n\t  t['spadesuitblack'] = 0x2660;\n\t  t['spadesuitwhite'] = 0x2664;\n\t  t['sparen'] = 0x24AE;\n\t  t['squarebelowcmb'] = 0x033B;\n\t  t['squarecc'] = 0x33C4;\n\t  t['squarecm'] = 0x339D;\n\t  t['squarediagonalcrosshatchfill'] = 0x25A9;\n\t  t['squarehorizontalfill'] = 0x25A4;\n\t  t['squarekg'] = 0x338F;\n\t  t['squarekm'] = 0x339E;\n\t  t['squarekmcapital'] = 0x33CE;\n\t  t['squareln'] = 0x33D1;\n\t  t['squarelog'] = 0x33D2;\n\t  t['squaremg'] = 0x338E;\n\t  t['squaremil'] = 0x33D5;\n\t  t['squaremm'] = 0x339C;\n\t  t['squaremsquared'] = 0x33A1;\n\t  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n\t  t['squareupperlefttolowerrightfill'] = 0x25A7;\n\t  t['squareupperrighttolowerleftfill'] = 0x25A8;\n\t  t['squareverticalfill'] = 0x25A5;\n\t  t['squarewhitewithsmallblack'] = 0x25A3;\n\t  t['srsquare'] = 0x33DB;\n\t  t['ssabengali'] = 0x09B7;\n\t  t['ssadeva'] = 0x0937;\n\t  t['ssagujarati'] = 0x0AB7;\n\t  t['ssangcieuckorean'] = 0x3149;\n\t  t['ssanghieuhkorean'] = 0x3185;\n\t  t['ssangieungkorean'] = 0x3180;\n\t  t['ssangkiyeokkorean'] = 0x3132;\n\t  t['ssangnieunkorean'] = 0x3165;\n\t  t['ssangpieupkorean'] = 0x3143;\n\t  t['ssangsioskorean'] = 0x3146;\n\t  t['ssangtikeutkorean'] = 0x3138;\n\t  t['ssuperior'] = 0xF6F2;\n\t  t['sterling'] = 0x00A3;\n\t  t['sterlingmonospace'] = 0xFFE1;\n\t  t['strokelongoverlaycmb'] = 0x0336;\n\t  t['strokeshortoverlaycmb'] = 0x0335;\n\t  t['subset'] = 0x2282;\n\t  t['subsetnotequal'] = 0x228A;\n\t  t['subsetorequal'] = 0x2286;\n\t  t['succeeds'] = 0x227B;\n\t  t['suchthat'] = 0x220B;\n\t  t['suhiragana'] = 0x3059;\n\t  t['sukatakana'] = 0x30B9;\n\t  t['sukatakanahalfwidth'] = 0xFF7D;\n\t  t['sukunarabic'] = 0x0652;\n\t  t['summation'] = 0x2211;\n\t  t['sun'] = 0x263C;\n\t  t['superset'] = 0x2283;\n\t  t['supersetnotequal'] = 0x228B;\n\t  t['supersetorequal'] = 0x2287;\n\t  t['svsquare'] = 0x33DC;\n\t  t['syouwaerasquare'] = 0x337C;\n\t  t['t'] = 0x0074;\n\t  t['tabengali'] = 0x09A4;\n\t  t['tackdown'] = 0x22A4;\n\t  t['tackleft'] = 0x22A3;\n\t  t['tadeva'] = 0x0924;\n\t  t['tagujarati'] = 0x0AA4;\n\t  t['tagurmukhi'] = 0x0A24;\n\t  t['taharabic'] = 0x0637;\n\t  t['tahfinalarabic'] = 0xFEC2;\n\t  t['tahinitialarabic'] = 0xFEC3;\n\t  t['tahiragana'] = 0x305F;\n\t  t['tahmedialarabic'] = 0xFEC4;\n\t  t['taisyouerasquare'] = 0x337D;\n\t  t['takatakana'] = 0x30BF;\n\t  t['takatakanahalfwidth'] = 0xFF80;\n\t  t['tatweelarabic'] = 0x0640;\n\t  t['tau'] = 0x03C4;\n\t  t['tav'] = 0x05EA;\n\t  t['tavdages'] = 0xFB4A;\n\t  t['tavdagesh'] = 0xFB4A;\n\t  t['tavdageshhebrew'] = 0xFB4A;\n\t  t['tavhebrew'] = 0x05EA;\n\t  t['tbar'] = 0x0167;\n\t  t['tbopomofo'] = 0x310A;\n\t  t['tcaron'] = 0x0165;\n\t  t['tccurl'] = 0x02A8;\n\t  t['tcedilla'] = 0x0163;\n\t  t['tcheharabic'] = 0x0686;\n\t  t['tchehfinalarabic'] = 0xFB7B;\n\t  t['tchehinitialarabic'] = 0xFB7C;\n\t  t['tchehmedialarabic'] = 0xFB7D;\n\t  t['tcircle'] = 0x24E3;\n\t  t['tcircumflexbelow'] = 0x1E71;\n\t  t['tcommaaccent'] = 0x0163;\n\t  t['tdieresis'] = 0x1E97;\n\t  t['tdotaccent'] = 0x1E6B;\n\t  t['tdotbelow'] = 0x1E6D;\n\t  t['tecyrillic'] = 0x0442;\n\t  t['tedescendercyrillic'] = 0x04AD;\n\t  t['teharabic'] = 0x062A;\n\t  t['tehfinalarabic'] = 0xFE96;\n\t  t['tehhahinitialarabic'] = 0xFCA2;\n\t  t['tehhahisolatedarabic'] = 0xFC0C;\n\t  t['tehinitialarabic'] = 0xFE97;\n\t  t['tehiragana'] = 0x3066;\n\t  t['tehjeeminitialarabic'] = 0xFCA1;\n\t  t['tehjeemisolatedarabic'] = 0xFC0B;\n\t  t['tehmarbutaarabic'] = 0x0629;\n\t  t['tehmarbutafinalarabic'] = 0xFE94;\n\t  t['tehmedialarabic'] = 0xFE98;\n\t  t['tehmeeminitialarabic'] = 0xFCA4;\n\t  t['tehmeemisolatedarabic'] = 0xFC0E;\n\t  t['tehnoonfinalarabic'] = 0xFC73;\n\t  t['tekatakana'] = 0x30C6;\n\t  t['tekatakanahalfwidth'] = 0xFF83;\n\t  t['telephone'] = 0x2121;\n\t  t['telephoneblack'] = 0x260E;\n\t  t['telishagedolahebrew'] = 0x05A0;\n\t  t['telishaqetanahebrew'] = 0x05A9;\n\t  t['tencircle'] = 0x2469;\n\t  t['tenideographicparen'] = 0x3229;\n\t  t['tenparen'] = 0x247D;\n\t  t['tenperiod'] = 0x2491;\n\t  t['tenroman'] = 0x2179;\n\t  t['tesh'] = 0x02A7;\n\t  t['tet'] = 0x05D8;\n\t  t['tetdagesh'] = 0xFB38;\n\t  t['tetdageshhebrew'] = 0xFB38;\n\t  t['tethebrew'] = 0x05D8;\n\t  t['tetsecyrillic'] = 0x04B5;\n\t  t['tevirhebrew'] = 0x059B;\n\t  t['tevirlefthebrew'] = 0x059B;\n\t  t['thabengali'] = 0x09A5;\n\t  t['thadeva'] = 0x0925;\n\t  t['thagujarati'] = 0x0AA5;\n\t  t['thagurmukhi'] = 0x0A25;\n\t  t['thalarabic'] = 0x0630;\n\t  t['thalfinalarabic'] = 0xFEAC;\n\t  t['thanthakhatlowleftthai'] = 0xF898;\n\t  t['thanthakhatlowrightthai'] = 0xF897;\n\t  t['thanthakhatthai'] = 0x0E4C;\n\t  t['thanthakhatupperleftthai'] = 0xF896;\n\t  t['theharabic'] = 0x062B;\n\t  t['thehfinalarabic'] = 0xFE9A;\n\t  t['thehinitialarabic'] = 0xFE9B;\n\t  t['thehmedialarabic'] = 0xFE9C;\n\t  t['thereexists'] = 0x2203;\n\t  t['therefore'] = 0x2234;\n\t  t['theta'] = 0x03B8;\n\t  t['theta1'] = 0x03D1;\n\t  t['thetasymbolgreek'] = 0x03D1;\n\t  t['thieuthacirclekorean'] = 0x3279;\n\t  t['thieuthaparenkorean'] = 0x3219;\n\t  t['thieuthcirclekorean'] = 0x326B;\n\t  t['thieuthkorean'] = 0x314C;\n\t  t['thieuthparenkorean'] = 0x320B;\n\t  t['thirteencircle'] = 0x246C;\n\t  t['thirteenparen'] = 0x2480;\n\t  t['thirteenperiod'] = 0x2494;\n\t  t['thonangmonthothai'] = 0x0E11;\n\t  t['thook'] = 0x01AD;\n\t  t['thophuthaothai'] = 0x0E12;\n\t  t['thorn'] = 0x00FE;\n\t  t['thothahanthai'] = 0x0E17;\n\t  t['thothanthai'] = 0x0E10;\n\t  t['thothongthai'] = 0x0E18;\n\t  t['thothungthai'] = 0x0E16;\n\t  t['thousandcyrillic'] = 0x0482;\n\t  t['thousandsseparatorarabic'] = 0x066C;\n\t  t['thousandsseparatorpersian'] = 0x066C;\n\t  t['three'] = 0x0033;\n\t  t['threearabic'] = 0x0663;\n\t  t['threebengali'] = 0x09E9;\n\t  t['threecircle'] = 0x2462;\n\t  t['threecircleinversesansserif'] = 0x278C;\n\t  t['threedeva'] = 0x0969;\n\t  t['threeeighths'] = 0x215C;\n\t  t['threegujarati'] = 0x0AE9;\n\t  t['threegurmukhi'] = 0x0A69;\n\t  t['threehackarabic'] = 0x0663;\n\t  t['threehangzhou'] = 0x3023;\n\t  t['threeideographicparen'] = 0x3222;\n\t  t['threeinferior'] = 0x2083;\n\t  t['threemonospace'] = 0xFF13;\n\t  t['threenumeratorbengali'] = 0x09F6;\n\t  t['threeoldstyle'] = 0xF733;\n\t  t['threeparen'] = 0x2476;\n\t  t['threeperiod'] = 0x248A;\n\t  t['threepersian'] = 0x06F3;\n\t  t['threequarters'] = 0x00BE;\n\t  t['threequartersemdash'] = 0xF6DE;\n\t  t['threeroman'] = 0x2172;\n\t  t['threesuperior'] = 0x00B3;\n\t  t['threethai'] = 0x0E53;\n\t  t['thzsquare'] = 0x3394;\n\t  t['tihiragana'] = 0x3061;\n\t  t['tikatakana'] = 0x30C1;\n\t  t['tikatakanahalfwidth'] = 0xFF81;\n\t  t['tikeutacirclekorean'] = 0x3270;\n\t  t['tikeutaparenkorean'] = 0x3210;\n\t  t['tikeutcirclekorean'] = 0x3262;\n\t  t['tikeutkorean'] = 0x3137;\n\t  t['tikeutparenkorean'] = 0x3202;\n\t  t['tilde'] = 0x02DC;\n\t  t['tildebelowcmb'] = 0x0330;\n\t  t['tildecmb'] = 0x0303;\n\t  t['tildecomb'] = 0x0303;\n\t  t['tildedoublecmb'] = 0x0360;\n\t  t['tildeoperator'] = 0x223C;\n\t  t['tildeoverlaycmb'] = 0x0334;\n\t  t['tildeverticalcmb'] = 0x033E;\n\t  t['timescircle'] = 0x2297;\n\t  t['tipehahebrew'] = 0x0596;\n\t  t['tipehalefthebrew'] = 0x0596;\n\t  t['tippigurmukhi'] = 0x0A70;\n\t  t['titlocyrilliccmb'] = 0x0483;\n\t  t['tiwnarmenian'] = 0x057F;\n\t  t['tlinebelow'] = 0x1E6F;\n\t  t['tmonospace'] = 0xFF54;\n\t  t['toarmenian'] = 0x0569;\n\t  t['tohiragana'] = 0x3068;\n\t  t['tokatakana'] = 0x30C8;\n\t  t['tokatakanahalfwidth'] = 0xFF84;\n\t  t['tonebarextrahighmod'] = 0x02E5;\n\t  t['tonebarextralowmod'] = 0x02E9;\n\t  t['tonebarhighmod'] = 0x02E6;\n\t  t['tonebarlowmod'] = 0x02E8;\n\t  t['tonebarmidmod'] = 0x02E7;\n\t  t['tonefive'] = 0x01BD;\n\t  t['tonesix'] = 0x0185;\n\t  t['tonetwo'] = 0x01A8;\n\t  t['tonos'] = 0x0384;\n\t  t['tonsquare'] = 0x3327;\n\t  t['topatakthai'] = 0x0E0F;\n\t  t['tortoiseshellbracketleft'] = 0x3014;\n\t  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n\t  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n\t  t['tortoiseshellbracketright'] = 0x3015;\n\t  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n\t  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n\t  t['totaothai'] = 0x0E15;\n\t  t['tpalatalhook'] = 0x01AB;\n\t  t['tparen'] = 0x24AF;\n\t  t['trademark'] = 0x2122;\n\t  t['trademarksans'] = 0xF8EA;\n\t  t['trademarkserif'] = 0xF6DB;\n\t  t['tretroflexhook'] = 0x0288;\n\t  t['triagdn'] = 0x25BC;\n\t  t['triaglf'] = 0x25C4;\n\t  t['triagrt'] = 0x25BA;\n\t  t['triagup'] = 0x25B2;\n\t  t['ts'] = 0x02A6;\n\t  t['tsadi'] = 0x05E6;\n\t  t['tsadidagesh'] = 0xFB46;\n\t  t['tsadidageshhebrew'] = 0xFB46;\n\t  t['tsadihebrew'] = 0x05E6;\n\t  t['tsecyrillic'] = 0x0446;\n\t  t['tsere'] = 0x05B5;\n\t  t['tsere12'] = 0x05B5;\n\t  t['tsere1e'] = 0x05B5;\n\t  t['tsere2b'] = 0x05B5;\n\t  t['tserehebrew'] = 0x05B5;\n\t  t['tserenarrowhebrew'] = 0x05B5;\n\t  t['tserequarterhebrew'] = 0x05B5;\n\t  t['tserewidehebrew'] = 0x05B5;\n\t  t['tshecyrillic'] = 0x045B;\n\t  t['tsuperior'] = 0xF6F3;\n\t  t['ttabengali'] = 0x099F;\n\t  t['ttadeva'] = 0x091F;\n\t  t['ttagujarati'] = 0x0A9F;\n\t  t['ttagurmukhi'] = 0x0A1F;\n\t  t['tteharabic'] = 0x0679;\n\t  t['ttehfinalarabic'] = 0xFB67;\n\t  t['ttehinitialarabic'] = 0xFB68;\n\t  t['ttehmedialarabic'] = 0xFB69;\n\t  t['tthabengali'] = 0x09A0;\n\t  t['tthadeva'] = 0x0920;\n\t  t['tthagujarati'] = 0x0AA0;\n\t  t['tthagurmukhi'] = 0x0A20;\n\t  t['tturned'] = 0x0287;\n\t  t['tuhiragana'] = 0x3064;\n\t  t['tukatakana'] = 0x30C4;\n\t  t['tukatakanahalfwidth'] = 0xFF82;\n\t  t['tusmallhiragana'] = 0x3063;\n\t  t['tusmallkatakana'] = 0x30C3;\n\t  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n\t  t['twelvecircle'] = 0x246B;\n\t  t['twelveparen'] = 0x247F;\n\t  t['twelveperiod'] = 0x2493;\n\t  t['twelveroman'] = 0x217B;\n\t  t['twentycircle'] = 0x2473;\n\t  t['twentyhangzhou'] = 0x5344;\n\t  t['twentyparen'] = 0x2487;\n\t  t['twentyperiod'] = 0x249B;\n\t  t['two'] = 0x0032;\n\t  t['twoarabic'] = 0x0662;\n\t  t['twobengali'] = 0x09E8;\n\t  t['twocircle'] = 0x2461;\n\t  t['twocircleinversesansserif'] = 0x278B;\n\t  t['twodeva'] = 0x0968;\n\t  t['twodotenleader'] = 0x2025;\n\t  t['twodotleader'] = 0x2025;\n\t  t['twodotleadervertical'] = 0xFE30;\n\t  t['twogujarati'] = 0x0AE8;\n\t  t['twogurmukhi'] = 0x0A68;\n\t  t['twohackarabic'] = 0x0662;\n\t  t['twohangzhou'] = 0x3022;\n\t  t['twoideographicparen'] = 0x3221;\n\t  t['twoinferior'] = 0x2082;\n\t  t['twomonospace'] = 0xFF12;\n\t  t['twonumeratorbengali'] = 0x09F5;\n\t  t['twooldstyle'] = 0xF732;\n\t  t['twoparen'] = 0x2475;\n\t  t['twoperiod'] = 0x2489;\n\t  t['twopersian'] = 0x06F2;\n\t  t['tworoman'] = 0x2171;\n\t  t['twostroke'] = 0x01BB;\n\t  t['twosuperior'] = 0x00B2;\n\t  t['twothai'] = 0x0E52;\n\t  t['twothirds'] = 0x2154;\n\t  t['u'] = 0x0075;\n\t  t['uacute'] = 0x00FA;\n\t  t['ubar'] = 0x0289;\n\t  t['ubengali'] = 0x0989;\n\t  t['ubopomofo'] = 0x3128;\n\t  t['ubreve'] = 0x016D;\n\t  t['ucaron'] = 0x01D4;\n\t  t['ucircle'] = 0x24E4;\n\t  t['ucircumflex'] = 0x00FB;\n\t  t['ucircumflexbelow'] = 0x1E77;\n\t  t['ucyrillic'] = 0x0443;\n\t  t['udattadeva'] = 0x0951;\n\t  t['udblacute'] = 0x0171;\n\t  t['udblgrave'] = 0x0215;\n\t  t['udeva'] = 0x0909;\n\t  t['udieresis'] = 0x00FC;\n\t  t['udieresisacute'] = 0x01D8;\n\t  t['udieresisbelow'] = 0x1E73;\n\t  t['udieresiscaron'] = 0x01DA;\n\t  t['udieresiscyrillic'] = 0x04F1;\n\t  t['udieresisgrave'] = 0x01DC;\n\t  t['udieresismacron'] = 0x01D6;\n\t  t['udotbelow'] = 0x1EE5;\n\t  t['ugrave'] = 0x00F9;\n\t  t['ugujarati'] = 0x0A89;\n\t  t['ugurmukhi'] = 0x0A09;\n\t  t['uhiragana'] = 0x3046;\n\t  t['uhookabove'] = 0x1EE7;\n\t  t['uhorn'] = 0x01B0;\n\t  t['uhornacute'] = 0x1EE9;\n\t  t['uhorndotbelow'] = 0x1EF1;\n\t  t['uhorngrave'] = 0x1EEB;\n\t  t['uhornhookabove'] = 0x1EED;\n\t  t['uhorntilde'] = 0x1EEF;\n\t  t['uhungarumlaut'] = 0x0171;\n\t  t['uhungarumlautcyrillic'] = 0x04F3;\n\t  t['uinvertedbreve'] = 0x0217;\n\t  t['ukatakana'] = 0x30A6;\n\t  t['ukatakanahalfwidth'] = 0xFF73;\n\t  t['ukcyrillic'] = 0x0479;\n\t  t['ukorean'] = 0x315C;\n\t  t['umacron'] = 0x016B;\n\t  t['umacroncyrillic'] = 0x04EF;\n\t  t['umacrondieresis'] = 0x1E7B;\n\t  t['umatragurmukhi'] = 0x0A41;\n\t  t['umonospace'] = 0xFF55;\n\t  t['underscore'] = 0x005F;\n\t  t['underscoredbl'] = 0x2017;\n\t  t['underscoremonospace'] = 0xFF3F;\n\t  t['underscorevertical'] = 0xFE33;\n\t  t['underscorewavy'] = 0xFE4F;\n\t  t['union'] = 0x222A;\n\t  t['universal'] = 0x2200;\n\t  t['uogonek'] = 0x0173;\n\t  t['uparen'] = 0x24B0;\n\t  t['upblock'] = 0x2580;\n\t  t['upperdothebrew'] = 0x05C4;\n\t  t['upsilon'] = 0x03C5;\n\t  t['upsilondieresis'] = 0x03CB;\n\t  t['upsilondieresistonos'] = 0x03B0;\n\t  t['upsilonlatin'] = 0x028A;\n\t  t['upsilontonos'] = 0x03CD;\n\t  t['uptackbelowcmb'] = 0x031D;\n\t  t['uptackmod'] = 0x02D4;\n\t  t['uragurmukhi'] = 0x0A73;\n\t  t['uring'] = 0x016F;\n\t  t['ushortcyrillic'] = 0x045E;\n\t  t['usmallhiragana'] = 0x3045;\n\t  t['usmallkatakana'] = 0x30A5;\n\t  t['usmallkatakanahalfwidth'] = 0xFF69;\n\t  t['ustraightcyrillic'] = 0x04AF;\n\t  t['ustraightstrokecyrillic'] = 0x04B1;\n\t  t['utilde'] = 0x0169;\n\t  t['utildeacute'] = 0x1E79;\n\t  t['utildebelow'] = 0x1E75;\n\t  t['uubengali'] = 0x098A;\n\t  t['uudeva'] = 0x090A;\n\t  t['uugujarati'] = 0x0A8A;\n\t  t['uugurmukhi'] = 0x0A0A;\n\t  t['uumatragurmukhi'] = 0x0A42;\n\t  t['uuvowelsignbengali'] = 0x09C2;\n\t  t['uuvowelsigndeva'] = 0x0942;\n\t  t['uuvowelsigngujarati'] = 0x0AC2;\n\t  t['uvowelsignbengali'] = 0x09C1;\n\t  t['uvowelsigndeva'] = 0x0941;\n\t  t['uvowelsigngujarati'] = 0x0AC1;\n\t  t['v'] = 0x0076;\n\t  t['vadeva'] = 0x0935;\n\t  t['vagujarati'] = 0x0AB5;\n\t  t['vagurmukhi'] = 0x0A35;\n\t  t['vakatakana'] = 0x30F7;\n\t  t['vav'] = 0x05D5;\n\t  t['vavdagesh'] = 0xFB35;\n\t  t['vavdagesh65'] = 0xFB35;\n\t  t['vavdageshhebrew'] = 0xFB35;\n\t  t['vavhebrew'] = 0x05D5;\n\t  t['vavholam'] = 0xFB4B;\n\t  t['vavholamhebrew'] = 0xFB4B;\n\t  t['vavvavhebrew'] = 0x05F0;\n\t  t['vavyodhebrew'] = 0x05F1;\n\t  t['vcircle'] = 0x24E5;\n\t  t['vdotbelow'] = 0x1E7F;\n\t  t['vecyrillic'] = 0x0432;\n\t  t['veharabic'] = 0x06A4;\n\t  t['vehfinalarabic'] = 0xFB6B;\n\t  t['vehinitialarabic'] = 0xFB6C;\n\t  t['vehmedialarabic'] = 0xFB6D;\n\t  t['vekatakana'] = 0x30F9;\n\t  t['venus'] = 0x2640;\n\t  t['verticalbar'] = 0x007C;\n\t  t['verticallineabovecmb'] = 0x030D;\n\t  t['verticallinebelowcmb'] = 0x0329;\n\t  t['verticallinelowmod'] = 0x02CC;\n\t  t['verticallinemod'] = 0x02C8;\n\t  t['vewarmenian'] = 0x057E;\n\t  t['vhook'] = 0x028B;\n\t  t['vikatakana'] = 0x30F8;\n\t  t['viramabengali'] = 0x09CD;\n\t  t['viramadeva'] = 0x094D;\n\t  t['viramagujarati'] = 0x0ACD;\n\t  t['visargabengali'] = 0x0983;\n\t  t['visargadeva'] = 0x0903;\n\t  t['visargagujarati'] = 0x0A83;\n\t  t['vmonospace'] = 0xFF56;\n\t  t['voarmenian'] = 0x0578;\n\t  t['voicediterationhiragana'] = 0x309E;\n\t  t['voicediterationkatakana'] = 0x30FE;\n\t  t['voicedmarkkana'] = 0x309B;\n\t  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n\t  t['vokatakana'] = 0x30FA;\n\t  t['vparen'] = 0x24B1;\n\t  t['vtilde'] = 0x1E7D;\n\t  t['vturned'] = 0x028C;\n\t  t['vuhiragana'] = 0x3094;\n\t  t['vukatakana'] = 0x30F4;\n\t  t['w'] = 0x0077;\n\t  t['wacute'] = 0x1E83;\n\t  t['waekorean'] = 0x3159;\n\t  t['wahiragana'] = 0x308F;\n\t  t['wakatakana'] = 0x30EF;\n\t  t['wakatakanahalfwidth'] = 0xFF9C;\n\t  t['wakorean'] = 0x3158;\n\t  t['wasmallhiragana'] = 0x308E;\n\t  t['wasmallkatakana'] = 0x30EE;\n\t  t['wattosquare'] = 0x3357;\n\t  t['wavedash'] = 0x301C;\n\t  t['wavyunderscorevertical'] = 0xFE34;\n\t  t['wawarabic'] = 0x0648;\n\t  t['wawfinalarabic'] = 0xFEEE;\n\t  t['wawhamzaabovearabic'] = 0x0624;\n\t  t['wawhamzaabovefinalarabic'] = 0xFE86;\n\t  t['wbsquare'] = 0x33DD;\n\t  t['wcircle'] = 0x24E6;\n\t  t['wcircumflex'] = 0x0175;\n\t  t['wdieresis'] = 0x1E85;\n\t  t['wdotaccent'] = 0x1E87;\n\t  t['wdotbelow'] = 0x1E89;\n\t  t['wehiragana'] = 0x3091;\n\t  t['weierstrass'] = 0x2118;\n\t  t['wekatakana'] = 0x30F1;\n\t  t['wekorean'] = 0x315E;\n\t  t['weokorean'] = 0x315D;\n\t  t['wgrave'] = 0x1E81;\n\t  t['whitebullet'] = 0x25E6;\n\t  t['whitecircle'] = 0x25CB;\n\t  t['whitecircleinverse'] = 0x25D9;\n\t  t['whitecornerbracketleft'] = 0x300E;\n\t  t['whitecornerbracketleftvertical'] = 0xFE43;\n\t  t['whitecornerbracketright'] = 0x300F;\n\t  t['whitecornerbracketrightvertical'] = 0xFE44;\n\t  t['whitediamond'] = 0x25C7;\n\t  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n\t  t['whitedownpointingsmalltriangle'] = 0x25BF;\n\t  t['whitedownpointingtriangle'] = 0x25BD;\n\t  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n\t  t['whiteleftpointingtriangle'] = 0x25C1;\n\t  t['whitelenticularbracketleft'] = 0x3016;\n\t  t['whitelenticularbracketright'] = 0x3017;\n\t  t['whiterightpointingsmalltriangle'] = 0x25B9;\n\t  t['whiterightpointingtriangle'] = 0x25B7;\n\t  t['whitesmallsquare'] = 0x25AB;\n\t  t['whitesmilingface'] = 0x263A;\n\t  t['whitesquare'] = 0x25A1;\n\t  t['whitestar'] = 0x2606;\n\t  t['whitetelephone'] = 0x260F;\n\t  t['whitetortoiseshellbracketleft'] = 0x3018;\n\t  t['whitetortoiseshellbracketright'] = 0x3019;\n\t  t['whiteuppointingsmalltriangle'] = 0x25B5;\n\t  t['whiteuppointingtriangle'] = 0x25B3;\n\t  t['wihiragana'] = 0x3090;\n\t  t['wikatakana'] = 0x30F0;\n\t  t['wikorean'] = 0x315F;\n\t  t['wmonospace'] = 0xFF57;\n\t  t['wohiragana'] = 0x3092;\n\t  t['wokatakana'] = 0x30F2;\n\t  t['wokatakanahalfwidth'] = 0xFF66;\n\t  t['won'] = 0x20A9;\n\t  t['wonmonospace'] = 0xFFE6;\n\t  t['wowaenthai'] = 0x0E27;\n\t  t['wparen'] = 0x24B2;\n\t  t['wring'] = 0x1E98;\n\t  t['wsuperior'] = 0x02B7;\n\t  t['wturned'] = 0x028D;\n\t  t['wynn'] = 0x01BF;\n\t  t['x'] = 0x0078;\n\t  t['xabovecmb'] = 0x033D;\n\t  t['xbopomofo'] = 0x3112;\n\t  t['xcircle'] = 0x24E7;\n\t  t['xdieresis'] = 0x1E8D;\n\t  t['xdotaccent'] = 0x1E8B;\n\t  t['xeharmenian'] = 0x056D;\n\t  t['xi'] = 0x03BE;\n\t  t['xmonospace'] = 0xFF58;\n\t  t['xparen'] = 0x24B3;\n\t  t['xsuperior'] = 0x02E3;\n\t  t['y'] = 0x0079;\n\t  t['yaadosquare'] = 0x334E;\n\t  t['yabengali'] = 0x09AF;\n\t  t['yacute'] = 0x00FD;\n\t  t['yadeva'] = 0x092F;\n\t  t['yaekorean'] = 0x3152;\n\t  t['yagujarati'] = 0x0AAF;\n\t  t['yagurmukhi'] = 0x0A2F;\n\t  t['yahiragana'] = 0x3084;\n\t  t['yakatakana'] = 0x30E4;\n\t  t['yakatakanahalfwidth'] = 0xFF94;\n\t  t['yakorean'] = 0x3151;\n\t  t['yamakkanthai'] = 0x0E4E;\n\t  t['yasmallhiragana'] = 0x3083;\n\t  t['yasmallkatakana'] = 0x30E3;\n\t  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n\t  t['yatcyrillic'] = 0x0463;\n\t  t['ycircle'] = 0x24E8;\n\t  t['ycircumflex'] = 0x0177;\n\t  t['ydieresis'] = 0x00FF;\n\t  t['ydotaccent'] = 0x1E8F;\n\t  t['ydotbelow'] = 0x1EF5;\n\t  t['yeharabic'] = 0x064A;\n\t  t['yehbarreearabic'] = 0x06D2;\n\t  t['yehbarreefinalarabic'] = 0xFBAF;\n\t  t['yehfinalarabic'] = 0xFEF2;\n\t  t['yehhamzaabovearabic'] = 0x0626;\n\t  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n\t  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n\t  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n\t  t['yehinitialarabic'] = 0xFEF3;\n\t  t['yehmedialarabic'] = 0xFEF4;\n\t  t['yehmeeminitialarabic'] = 0xFCDD;\n\t  t['yehmeemisolatedarabic'] = 0xFC58;\n\t  t['yehnoonfinalarabic'] = 0xFC94;\n\t  t['yehthreedotsbelowarabic'] = 0x06D1;\n\t  t['yekorean'] = 0x3156;\n\t  t['yen'] = 0x00A5;\n\t  t['yenmonospace'] = 0xFFE5;\n\t  t['yeokorean'] = 0x3155;\n\t  t['yeorinhieuhkorean'] = 0x3186;\n\t  t['yerahbenyomohebrew'] = 0x05AA;\n\t  t['yerahbenyomolefthebrew'] = 0x05AA;\n\t  t['yericyrillic'] = 0x044B;\n\t  t['yerudieresiscyrillic'] = 0x04F9;\n\t  t['yesieungkorean'] = 0x3181;\n\t  t['yesieungpansioskorean'] = 0x3183;\n\t  t['yesieungsioskorean'] = 0x3182;\n\t  t['yetivhebrew'] = 0x059A;\n\t  t['ygrave'] = 0x1EF3;\n\t  t['yhook'] = 0x01B4;\n\t  t['yhookabove'] = 0x1EF7;\n\t  t['yiarmenian'] = 0x0575;\n\t  t['yicyrillic'] = 0x0457;\n\t  t['yikorean'] = 0x3162;\n\t  t['yinyang'] = 0x262F;\n\t  t['yiwnarmenian'] = 0x0582;\n\t  t['ymonospace'] = 0xFF59;\n\t  t['yod'] = 0x05D9;\n\t  t['yoddagesh'] = 0xFB39;\n\t  t['yoddageshhebrew'] = 0xFB39;\n\t  t['yodhebrew'] = 0x05D9;\n\t  t['yodyodhebrew'] = 0x05F2;\n\t  t['yodyodpatahhebrew'] = 0xFB1F;\n\t  t['yohiragana'] = 0x3088;\n\t  t['yoikorean'] = 0x3189;\n\t  t['yokatakana'] = 0x30E8;\n\t  t['yokatakanahalfwidth'] = 0xFF96;\n\t  t['yokorean'] = 0x315B;\n\t  t['yosmallhiragana'] = 0x3087;\n\t  t['yosmallkatakana'] = 0x30E7;\n\t  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n\t  t['yotgreek'] = 0x03F3;\n\t  t['yoyaekorean'] = 0x3188;\n\t  t['yoyakorean'] = 0x3187;\n\t  t['yoyakthai'] = 0x0E22;\n\t  t['yoyingthai'] = 0x0E0D;\n\t  t['yparen'] = 0x24B4;\n\t  t['ypogegrammeni'] = 0x037A;\n\t  t['ypogegrammenigreekcmb'] = 0x0345;\n\t  t['yr'] = 0x01A6;\n\t  t['yring'] = 0x1E99;\n\t  t['ysuperior'] = 0x02B8;\n\t  t['ytilde'] = 0x1EF9;\n\t  t['yturned'] = 0x028E;\n\t  t['yuhiragana'] = 0x3086;\n\t  t['yuikorean'] = 0x318C;\n\t  t['yukatakana'] = 0x30E6;\n\t  t['yukatakanahalfwidth'] = 0xFF95;\n\t  t['yukorean'] = 0x3160;\n\t  t['yusbigcyrillic'] = 0x046B;\n\t  t['yusbigiotifiedcyrillic'] = 0x046D;\n\t  t['yuslittlecyrillic'] = 0x0467;\n\t  t['yuslittleiotifiedcyrillic'] = 0x0469;\n\t  t['yusmallhiragana'] = 0x3085;\n\t  t['yusmallkatakana'] = 0x30E5;\n\t  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n\t  t['yuyekorean'] = 0x318B;\n\t  t['yuyeokorean'] = 0x318A;\n\t  t['yyabengali'] = 0x09DF;\n\t  t['yyadeva'] = 0x095F;\n\t  t['z'] = 0x007A;\n\t  t['zaarmenian'] = 0x0566;\n\t  t['zacute'] = 0x017A;\n\t  t['zadeva'] = 0x095B;\n\t  t['zagurmukhi'] = 0x0A5B;\n\t  t['zaharabic'] = 0x0638;\n\t  t['zahfinalarabic'] = 0xFEC6;\n\t  t['zahinitialarabic'] = 0xFEC7;\n\t  t['zahiragana'] = 0x3056;\n\t  t['zahmedialarabic'] = 0xFEC8;\n\t  t['zainarabic'] = 0x0632;\n\t  t['zainfinalarabic'] = 0xFEB0;\n\t  t['zakatakana'] = 0x30B6;\n\t  t['zaqefgadolhebrew'] = 0x0595;\n\t  t['zaqefqatanhebrew'] = 0x0594;\n\t  t['zarqahebrew'] = 0x0598;\n\t  t['zayin'] = 0x05D6;\n\t  t['zayindagesh'] = 0xFB36;\n\t  t['zayindageshhebrew'] = 0xFB36;\n\t  t['zayinhebrew'] = 0x05D6;\n\t  t['zbopomofo'] = 0x3117;\n\t  t['zcaron'] = 0x017E;\n\t  t['zcircle'] = 0x24E9;\n\t  t['zcircumflex'] = 0x1E91;\n\t  t['zcurl'] = 0x0291;\n\t  t['zdot'] = 0x017C;\n\t  t['zdotaccent'] = 0x017C;\n\t  t['zdotbelow'] = 0x1E93;\n\t  t['zecyrillic'] = 0x0437;\n\t  t['zedescendercyrillic'] = 0x0499;\n\t  t['zedieresiscyrillic'] = 0x04DF;\n\t  t['zehiragana'] = 0x305C;\n\t  t['zekatakana'] = 0x30BC;\n\t  t['zero'] = 0x0030;\n\t  t['zeroarabic'] = 0x0660;\n\t  t['zerobengali'] = 0x09E6;\n\t  t['zerodeva'] = 0x0966;\n\t  t['zerogujarati'] = 0x0AE6;\n\t  t['zerogurmukhi'] = 0x0A66;\n\t  t['zerohackarabic'] = 0x0660;\n\t  t['zeroinferior'] = 0x2080;\n\t  t['zeromonospace'] = 0xFF10;\n\t  t['zerooldstyle'] = 0xF730;\n\t  t['zeropersian'] = 0x06F0;\n\t  t['zerosuperior'] = 0x2070;\n\t  t['zerothai'] = 0x0E50;\n\t  t['zerowidthjoiner'] = 0xFEFF;\n\t  t['zerowidthnonjoiner'] = 0x200C;\n\t  t['zerowidthspace'] = 0x200B;\n\t  t['zeta'] = 0x03B6;\n\t  t['zhbopomofo'] = 0x3113;\n\t  t['zhearmenian'] = 0x056A;\n\t  t['zhebrevecyrillic'] = 0x04C2;\n\t  t['zhecyrillic'] = 0x0436;\n\t  t['zhedescendercyrillic'] = 0x0497;\n\t  t['zhedieresiscyrillic'] = 0x04DD;\n\t  t['zihiragana'] = 0x3058;\n\t  t['zikatakana'] = 0x30B8;\n\t  t['zinorhebrew'] = 0x05AE;\n\t  t['zlinebelow'] = 0x1E95;\n\t  t['zmonospace'] = 0xFF5A;\n\t  t['zohiragana'] = 0x305E;\n\t  t['zokatakana'] = 0x30BE;\n\t  t['zparen'] = 0x24B5;\n\t  t['zretroflexhook'] = 0x0290;\n\t  t['zstroke'] = 0x01B6;\n\t  t['zuhiragana'] = 0x305A;\n\t  t['zukatakana'] = 0x30BA;\n\t  t['.notdef'] = 0x0000;\n\t  t['angbracketleftbig'] = 0x2329;\n\t  t['angbracketleftBig'] = 0x2329;\n\t  t['angbracketleftbigg'] = 0x2329;\n\t  t['angbracketleftBigg'] = 0x2329;\n\t  t['angbracketrightBig'] = 0x232A;\n\t  t['angbracketrightbig'] = 0x232A;\n\t  t['angbracketrightBigg'] = 0x232A;\n\t  t['angbracketrightbigg'] = 0x232A;\n\t  t['arrowhookleft'] = 0x21AA;\n\t  t['arrowhookright'] = 0x21A9;\n\t  t['arrowlefttophalf'] = 0x21BC;\n\t  t['arrowleftbothalf'] = 0x21BD;\n\t  t['arrownortheast'] = 0x2197;\n\t  t['arrownorthwest'] = 0x2196;\n\t  t['arrowrighttophalf'] = 0x21C0;\n\t  t['arrowrightbothalf'] = 0x21C1;\n\t  t['arrowsoutheast'] = 0x2198;\n\t  t['arrowsouthwest'] = 0x2199;\n\t  t['backslashbig'] = 0x2216;\n\t  t['backslashBig'] = 0x2216;\n\t  t['backslashBigg'] = 0x2216;\n\t  t['backslashbigg'] = 0x2216;\n\t  t['bardbl'] = 0x2016;\n\t  t['bracehtipdownleft'] = 0xFE37;\n\t  t['bracehtipdownright'] = 0xFE37;\n\t  t['bracehtipupleft'] = 0xFE38;\n\t  t['bracehtipupright'] = 0xFE38;\n\t  t['braceleftBig'] = 0x007B;\n\t  t['braceleftbig'] = 0x007B;\n\t  t['braceleftbigg'] = 0x007B;\n\t  t['braceleftBigg'] = 0x007B;\n\t  t['bracerightBig'] = 0x007D;\n\t  t['bracerightbig'] = 0x007D;\n\t  t['bracerightbigg'] = 0x007D;\n\t  t['bracerightBigg'] = 0x007D;\n\t  t['bracketleftbig'] = 0x005B;\n\t  t['bracketleftBig'] = 0x005B;\n\t  t['bracketleftbigg'] = 0x005B;\n\t  t['bracketleftBigg'] = 0x005B;\n\t  t['bracketrightBig'] = 0x005D;\n\t  t['bracketrightbig'] = 0x005D;\n\t  t['bracketrightbigg'] = 0x005D;\n\t  t['bracketrightBigg'] = 0x005D;\n\t  t['ceilingleftbig'] = 0x2308;\n\t  t['ceilingleftBig'] = 0x2308;\n\t  t['ceilingleftBigg'] = 0x2308;\n\t  t['ceilingleftbigg'] = 0x2308;\n\t  t['ceilingrightbig'] = 0x2309;\n\t  t['ceilingrightBig'] = 0x2309;\n\t  t['ceilingrightbigg'] = 0x2309;\n\t  t['ceilingrightBigg'] = 0x2309;\n\t  t['circledotdisplay'] = 0x2299;\n\t  t['circledottext'] = 0x2299;\n\t  t['circlemultiplydisplay'] = 0x2297;\n\t  t['circlemultiplytext'] = 0x2297;\n\t  t['circleplusdisplay'] = 0x2295;\n\t  t['circleplustext'] = 0x2295;\n\t  t['contintegraldisplay'] = 0x222E;\n\t  t['contintegraltext'] = 0x222E;\n\t  t['coproductdisplay'] = 0x2210;\n\t  t['coproducttext'] = 0x2210;\n\t  t['floorleftBig'] = 0x230A;\n\t  t['floorleftbig'] = 0x230A;\n\t  t['floorleftbigg'] = 0x230A;\n\t  t['floorleftBigg'] = 0x230A;\n\t  t['floorrightbig'] = 0x230B;\n\t  t['floorrightBig'] = 0x230B;\n\t  t['floorrightBigg'] = 0x230B;\n\t  t['floorrightbigg'] = 0x230B;\n\t  t['hatwide'] = 0x0302;\n\t  t['hatwider'] = 0x0302;\n\t  t['hatwidest'] = 0x0302;\n\t  t['intercal'] = 0x1D40;\n\t  t['integraldisplay'] = 0x222B;\n\t  t['integraltext'] = 0x222B;\n\t  t['intersectiondisplay'] = 0x22C2;\n\t  t['intersectiontext'] = 0x22C2;\n\t  t['logicalanddisplay'] = 0x2227;\n\t  t['logicalandtext'] = 0x2227;\n\t  t['logicalordisplay'] = 0x2228;\n\t  t['logicalortext'] = 0x2228;\n\t  t['parenleftBig'] = 0x0028;\n\t  t['parenleftbig'] = 0x0028;\n\t  t['parenleftBigg'] = 0x0028;\n\t  t['parenleftbigg'] = 0x0028;\n\t  t['parenrightBig'] = 0x0029;\n\t  t['parenrightbig'] = 0x0029;\n\t  t['parenrightBigg'] = 0x0029;\n\t  t['parenrightbigg'] = 0x0029;\n\t  t['prime'] = 0x2032;\n\t  t['productdisplay'] = 0x220F;\n\t  t['producttext'] = 0x220F;\n\t  t['radicalbig'] = 0x221A;\n\t  t['radicalBig'] = 0x221A;\n\t  t['radicalBigg'] = 0x221A;\n\t  t['radicalbigg'] = 0x221A;\n\t  t['radicalbt'] = 0x221A;\n\t  t['radicaltp'] = 0x221A;\n\t  t['radicalvertex'] = 0x221A;\n\t  t['slashbig'] = 0x002F;\n\t  t['slashBig'] = 0x002F;\n\t  t['slashBigg'] = 0x002F;\n\t  t['slashbigg'] = 0x002F;\n\t  t['summationdisplay'] = 0x2211;\n\t  t['summationtext'] = 0x2211;\n\t  t['tildewide'] = 0x02DC;\n\t  t['tildewider'] = 0x02DC;\n\t  t['tildewidest'] = 0x02DC;\n\t  t['uniondisplay'] = 0x22C3;\n\t  t['unionmultidisplay'] = 0x228E;\n\t  t['unionmultitext'] = 0x228E;\n\t  t['unionsqdisplay'] = 0x2294;\n\t  t['unionsqtext'] = 0x2294;\n\t  t['uniontext'] = 0x22C3;\n\t  t['vextenddouble'] = 0x2225;\n\t  t['vextendsingle'] = 0x2223;\n\t});\n\tvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n\t  t['space'] = 0x0020;\n\t  t['a1'] = 0x2701;\n\t  t['a2'] = 0x2702;\n\t  t['a202'] = 0x2703;\n\t  t['a3'] = 0x2704;\n\t  t['a4'] = 0x260E;\n\t  t['a5'] = 0x2706;\n\t  t['a119'] = 0x2707;\n\t  t['a118'] = 0x2708;\n\t  t['a117'] = 0x2709;\n\t  t['a11'] = 0x261B;\n\t  t['a12'] = 0x261E;\n\t  t['a13'] = 0x270C;\n\t  t['a14'] = 0x270D;\n\t  t['a15'] = 0x270E;\n\t  t['a16'] = 0x270F;\n\t  t['a105'] = 0x2710;\n\t  t['a17'] = 0x2711;\n\t  t['a18'] = 0x2712;\n\t  t['a19'] = 0x2713;\n\t  t['a20'] = 0x2714;\n\t  t['a21'] = 0x2715;\n\t  t['a22'] = 0x2716;\n\t  t['a23'] = 0x2717;\n\t  t['a24'] = 0x2718;\n\t  t['a25'] = 0x2719;\n\t  t['a26'] = 0x271A;\n\t  t['a27'] = 0x271B;\n\t  t['a28'] = 0x271C;\n\t  t['a6'] = 0x271D;\n\t  t['a7'] = 0x271E;\n\t  t['a8'] = 0x271F;\n\t  t['a9'] = 0x2720;\n\t  t['a10'] = 0x2721;\n\t  t['a29'] = 0x2722;\n\t  t['a30'] = 0x2723;\n\t  t['a31'] = 0x2724;\n\t  t['a32'] = 0x2725;\n\t  t['a33'] = 0x2726;\n\t  t['a34'] = 0x2727;\n\t  t['a35'] = 0x2605;\n\t  t['a36'] = 0x2729;\n\t  t['a37'] = 0x272A;\n\t  t['a38'] = 0x272B;\n\t  t['a39'] = 0x272C;\n\t  t['a40'] = 0x272D;\n\t  t['a41'] = 0x272E;\n\t  t['a42'] = 0x272F;\n\t  t['a43'] = 0x2730;\n\t  t['a44'] = 0x2731;\n\t  t['a45'] = 0x2732;\n\t  t['a46'] = 0x2733;\n\t  t['a47'] = 0x2734;\n\t  t['a48'] = 0x2735;\n\t  t['a49'] = 0x2736;\n\t  t['a50'] = 0x2737;\n\t  t['a51'] = 0x2738;\n\t  t['a52'] = 0x2739;\n\t  t['a53'] = 0x273A;\n\t  t['a54'] = 0x273B;\n\t  t['a55'] = 0x273C;\n\t  t['a56'] = 0x273D;\n\t  t['a57'] = 0x273E;\n\t  t['a58'] = 0x273F;\n\t  t['a59'] = 0x2740;\n\t  t['a60'] = 0x2741;\n\t  t['a61'] = 0x2742;\n\t  t['a62'] = 0x2743;\n\t  t['a63'] = 0x2744;\n\t  t['a64'] = 0x2745;\n\t  t['a65'] = 0x2746;\n\t  t['a66'] = 0x2747;\n\t  t['a67'] = 0x2748;\n\t  t['a68'] = 0x2749;\n\t  t['a69'] = 0x274A;\n\t  t['a70'] = 0x274B;\n\t  t['a71'] = 0x25CF;\n\t  t['a72'] = 0x274D;\n\t  t['a73'] = 0x25A0;\n\t  t['a74'] = 0x274F;\n\t  t['a203'] = 0x2750;\n\t  t['a75'] = 0x2751;\n\t  t['a204'] = 0x2752;\n\t  t['a76'] = 0x25B2;\n\t  t['a77'] = 0x25BC;\n\t  t['a78'] = 0x25C6;\n\t  t['a79'] = 0x2756;\n\t  t['a81'] = 0x25D7;\n\t  t['a82'] = 0x2758;\n\t  t['a83'] = 0x2759;\n\t  t['a84'] = 0x275A;\n\t  t['a97'] = 0x275B;\n\t  t['a98'] = 0x275C;\n\t  t['a99'] = 0x275D;\n\t  t['a100'] = 0x275E;\n\t  t['a101'] = 0x2761;\n\t  t['a102'] = 0x2762;\n\t  t['a103'] = 0x2763;\n\t  t['a104'] = 0x2764;\n\t  t['a106'] = 0x2765;\n\t  t['a107'] = 0x2766;\n\t  t['a108'] = 0x2767;\n\t  t['a112'] = 0x2663;\n\t  t['a111'] = 0x2666;\n\t  t['a110'] = 0x2665;\n\t  t['a109'] = 0x2660;\n\t  t['a120'] = 0x2460;\n\t  t['a121'] = 0x2461;\n\t  t['a122'] = 0x2462;\n\t  t['a123'] = 0x2463;\n\t  t['a124'] = 0x2464;\n\t  t['a125'] = 0x2465;\n\t  t['a126'] = 0x2466;\n\t  t['a127'] = 0x2467;\n\t  t['a128'] = 0x2468;\n\t  t['a129'] = 0x2469;\n\t  t['a130'] = 0x2776;\n\t  t['a131'] = 0x2777;\n\t  t['a132'] = 0x2778;\n\t  t['a133'] = 0x2779;\n\t  t['a134'] = 0x277A;\n\t  t['a135'] = 0x277B;\n\t  t['a136'] = 0x277C;\n\t  t['a137'] = 0x277D;\n\t  t['a138'] = 0x277E;\n\t  t['a139'] = 0x277F;\n\t  t['a140'] = 0x2780;\n\t  t['a141'] = 0x2781;\n\t  t['a142'] = 0x2782;\n\t  t['a143'] = 0x2783;\n\t  t['a144'] = 0x2784;\n\t  t['a145'] = 0x2785;\n\t  t['a146'] = 0x2786;\n\t  t['a147'] = 0x2787;\n\t  t['a148'] = 0x2788;\n\t  t['a149'] = 0x2789;\n\t  t['a150'] = 0x278A;\n\t  t['a151'] = 0x278B;\n\t  t['a152'] = 0x278C;\n\t  t['a153'] = 0x278D;\n\t  t['a154'] = 0x278E;\n\t  t['a155'] = 0x278F;\n\t  t['a156'] = 0x2790;\n\t  t['a157'] = 0x2791;\n\t  t['a158'] = 0x2792;\n\t  t['a159'] = 0x2793;\n\t  t['a160'] = 0x2794;\n\t  t['a161'] = 0x2192;\n\t  t['a163'] = 0x2194;\n\t  t['a164'] = 0x2195;\n\t  t['a196'] = 0x2798;\n\t  t['a165'] = 0x2799;\n\t  t['a192'] = 0x279A;\n\t  t['a166'] = 0x279B;\n\t  t['a167'] = 0x279C;\n\t  t['a168'] = 0x279D;\n\t  t['a169'] = 0x279E;\n\t  t['a170'] = 0x279F;\n\t  t['a171'] = 0x27A0;\n\t  t['a172'] = 0x27A1;\n\t  t['a173'] = 0x27A2;\n\t  t['a162'] = 0x27A3;\n\t  t['a174'] = 0x27A4;\n\t  t['a175'] = 0x27A5;\n\t  t['a176'] = 0x27A6;\n\t  t['a177'] = 0x27A7;\n\t  t['a178'] = 0x27A8;\n\t  t['a179'] = 0x27A9;\n\t  t['a193'] = 0x27AA;\n\t  t['a180'] = 0x27AB;\n\t  t['a199'] = 0x27AC;\n\t  t['a181'] = 0x27AD;\n\t  t['a200'] = 0x27AE;\n\t  t['a182'] = 0x27AF;\n\t  t['a201'] = 0x27B1;\n\t  t['a183'] = 0x27B2;\n\t  t['a184'] = 0x27B3;\n\t  t['a197'] = 0x27B4;\n\t  t['a185'] = 0x27B5;\n\t  t['a194'] = 0x27B6;\n\t  t['a198'] = 0x27B7;\n\t  t['a186'] = 0x27B8;\n\t  t['a195'] = 0x27B9;\n\t  t['a187'] = 0x27BA;\n\t  t['a188'] = 0x27BB;\n\t  t['a189'] = 0x27BC;\n\t  t['a190'] = 0x27BD;\n\t  t['a191'] = 0x27BE;\n\t  t['a89'] = 0x2768;\n\t  t['a90'] = 0x2769;\n\t  t['a93'] = 0x276A;\n\t  t['a94'] = 0x276B;\n\t  t['a91'] = 0x276C;\n\t  t['a92'] = 0x276D;\n\t  t['a205'] = 0x276E;\n\t  t['a85'] = 0x276F;\n\t  t['a206'] = 0x2770;\n\t  t['a86'] = 0x2771;\n\t  t['a87'] = 0x2772;\n\t  t['a88'] = 0x2773;\n\t  t['a95'] = 0x2774;\n\t  t['a96'] = 0x2775;\n\t  t['.notdef'] = 0x0000;\n\t});\n\texports.getGlyphsUnicode = getGlyphsUnicode;\n\texports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ },\n\n/***/ 180:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpegStream = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _jpg = __webpack_require__(696);\n\t\n\tvar JpegStream = function JpegStreamClosure() {\n\t  function JpegStream(stream, maybeLength, dict, params) {\n\t    var ch = void 0;\n\t    while ((ch = stream.getByte()) !== -1) {\n\t      if (ch === 0xFF) {\n\t        stream.skip(-1);\n\t        break;\n\t      }\n\t    }\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  Object.defineProperty(JpegStream.prototype, 'bytes', {\n\t    get: function JpegStream_bytes() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t    configurable: true\n\t  });\n\t  JpegStream.prototype.ensureBuffer = function (requested) {};\n\t  JpegStream.prototype.readBlock = function () {\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var jpegImage = new _jpg.JpegImage();\n\t    var decodeArr = this.dict.getArray('Decode', 'D');\n\t    if (this.forceRGB && Array.isArray(decodeArr)) {\n\t      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n\t      var decodeArrLength = decodeArr.length;\n\t      var transform = new Int32Array(decodeArrLength);\n\t      var transformNeeded = false;\n\t      var maxValue = (1 << bitsPerComponent) - 1;\n\t      for (var i = 0; i < decodeArrLength; i += 2) {\n\t        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n\t        transform[i + 1] = decodeArr[i] * maxValue | 0;\n\t        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n\t          transformNeeded = true;\n\t        }\n\t      }\n\t      if (transformNeeded) {\n\t        jpegImage.decodeTransform = transform;\n\t      }\n\t    }\n\t    if ((0, _primitives.isDict)(this.params)) {\n\t      var colorTransform = this.params.get('ColorTransform');\n\t      if (Number.isInteger(colorTransform)) {\n\t        jpegImage.colorTransform = colorTransform;\n\t      }\n\t    }\n\t    jpegImage.parse(this.bytes);\n\t    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n\t    this.buffer = data;\n\t    this.bufferLength = data.length;\n\t    this.eof = true;\n\t  };\n\t  JpegStream.prototype.getIR = function () {\n\t    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n\t  };\n\t  return JpegStream;\n\t}();\n\texports.JpegStream = JpegStream;\n\n/***/ },\n\n/***/ 181:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.OperatorList = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar QueueOptimizer = function QueueOptimizerClosure() {\n\t  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n\t    var state = parentState;\n\t    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n\t      var item = pattern[i];\n\t      state = state[item] || (state[item] = []);\n\t    }\n\t    state[pattern[pattern.length - 1]] = {\n\t      checkFn: checkFn,\n\t      iterateFn: iterateFn,\n\t      processFn: processFn\n\t    };\n\t  }\n\t  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n\t    var iFirstPIMXO = iFirstSave + 2;\n\t    for (var i = 0; i < count; i++) {\n\t      var arg = argsArray[iFirstPIMXO + 4 * i];\n\t      var imageMask = arg.length === 1 && arg[0];\n\t      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n\t        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t    return count - i;\n\t  }\n\t  var InitialState = [];\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n\t    var fnArray = context.fnArray;\n\t    var iFirstSave = context.iCurr - 3;\n\t    var pos = (i - iFirstSave) % 4;\n\t    switch (pos) {\n\t      case 0:\n\t        return fnArray[i] === _util.OPS.save;\n\t      case 1:\n\t        return fnArray[i] === _util.OPS.transform;\n\t      case 2:\n\t        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n\t      case 3:\n\t        return fnArray[i] === _util.OPS.restore;\n\t    }\n\t  }, function foundInlineImageGroup(context, i) {\n\t    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n\t    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n\t    var MAX_WIDTH = 1000;\n\t    var IMAGE_PADDING = 1;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIIXO = curr - 1;\n\t    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n\t    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n\t      return i - (i - iFirstSave) % 4;\n\t    }\n\t    var maxX = 0;\n\t    var map = [],\n\t        maxLineHeight = 0;\n\t    var currentX = IMAGE_PADDING,\n\t        currentY = IMAGE_PADDING;\n\t    var q;\n\t    for (q = 0; q < count; q++) {\n\t      var transform = argsArray[iFirstTransform + (q << 2)];\n\t      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n\t      if (currentX + img.width > MAX_WIDTH) {\n\t        maxX = Math.max(maxX, currentX);\n\t        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n\t        currentX = 0;\n\t        maxLineHeight = 0;\n\t      }\n\t      map.push({\n\t        transform: transform,\n\t        x: currentX,\n\t        y: currentY,\n\t        w: img.width,\n\t        h: img.height\n\t      });\n\t      currentX += img.width + 2 * IMAGE_PADDING;\n\t      maxLineHeight = Math.max(maxLineHeight, img.height);\n\t    }\n\t    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n\t    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n\t    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n\t    var imgRowSize = imgWidth << 2;\n\t    for (q = 0; q < count; q++) {\n\t      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n\t      var rowSize = map[q].w << 2;\n\t      var dataOffset = 0;\n\t      var offset = map[q].x + map[q].y * imgWidth << 2;\n\t      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n\t      for (var k = 0, kk = map[q].h; k < kk; k++) {\n\t        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n\t        dataOffset += rowSize;\n\t        offset += imgRowSize;\n\t      }\n\t      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n\t      while (offset >= 0) {\n\t        data[offset - 4] = data[offset];\n\t        data[offset - 3] = data[offset + 1];\n\t        data[offset - 2] = data[offset + 2];\n\t        data[offset - 1] = data[offset + 3];\n\t        data[offset + rowSize] = data[offset + rowSize - 4];\n\t        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n\t        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n\t        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n\t        offset -= imgRowSize;\n\t      }\n\t    }\n\t    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n\t    argsArray.splice(iFirstSave, count * 4, [{\n\t      width: imgWidth,\n\t      height: imgHeight,\n\t      kind: _util.ImageKind.RGBA_32BPP,\n\t      data: imgData\n\t    }, map]);\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n\t    var fnArray = context.fnArray;\n\t    var iFirstSave = context.iCurr - 3;\n\t    var pos = (i - iFirstSave) % 4;\n\t    switch (pos) {\n\t      case 0:\n\t        return fnArray[i] === _util.OPS.save;\n\t      case 1:\n\t        return fnArray[i] === _util.OPS.transform;\n\t      case 2:\n\t        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n\t      case 3:\n\t        return fnArray[i] === _util.OPS.restore;\n\t    }\n\t  }, function foundImageMaskGroup(context, i) {\n\t    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n\t    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n\t    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIMXO = curr - 1;\n\t    var count = Math.floor((i - iFirstSave) / 4);\n\t    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n\t    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t      return i - (i - iFirstSave) % 4;\n\t    }\n\t    var q;\n\t    var isSameImage = false;\n\t    var iTransform, transformArgs;\n\t    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n\t    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n\t      isSameImage = true;\n\t      var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t      var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t      iTransform = iFirstTransform + 4;\n\t      var iPIMXO = iFirstPIMXO + 4;\n\t      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n\t        transformArgs = argsArray[iTransform];\n\t        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n\t          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t            isSameImage = false;\n\t          } else {\n\t            count = q;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    if (isSameImage) {\n\t      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n\t      var positions = new Float32Array(count * 2);\n\t      iTransform = iFirstTransform;\n\t      for (q = 0; q < count; q++, iTransform += 4) {\n\t        transformArgs = argsArray[iTransform];\n\t        positions[q << 1] = transformArgs[4];\n\t        positions[(q << 1) + 1] = transformArgs[5];\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n\t      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n\t    } else {\n\t      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n\t      var images = [];\n\t      for (q = 0; q < count; q++) {\n\t        transformArgs = argsArray[iFirstTransform + (q << 2)];\n\t        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n\t        images.push({\n\t          data: maskParams.data,\n\t          width: maskParams.width,\n\t          height: maskParams.height,\n\t          transform: transformArgs\n\t        });\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n\t      argsArray.splice(iFirstSave, count * 4, [images]);\n\t    }\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n\t    var argsArray = context.argsArray;\n\t    var iFirstTransform = context.iCurr - 2;\n\t    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n\t  }, function (context, i) {\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var iFirstSave = context.iCurr - 3;\n\t    var pos = (i - iFirstSave) % 4;\n\t    switch (pos) {\n\t      case 0:\n\t        return fnArray[i] === _util.OPS.save;\n\t      case 1:\n\t        if (fnArray[i] !== _util.OPS.transform) {\n\t          return false;\n\t        }\n\t        var iFirstTransform = context.iCurr - 2;\n\t        var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t        var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n\t          return false;\n\t        }\n\t        return true;\n\t      case 2:\n\t        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n\t          return false;\n\t        }\n\t        var iFirstPIXO = context.iCurr - 1;\n\t        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\t        if (argsArray[i][0] !== firstPIXOArg0) {\n\t          return false;\n\t        }\n\t        return true;\n\t      case 3:\n\t        return fnArray[i] === _util.OPS.restore;\n\t    }\n\t  }, function (context, i) {\n\t    var MIN_IMAGES_IN_BLOCK = 3;\n\t    var MAX_IMAGES_IN_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIXO = curr - 1;\n\t    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\t    var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t    var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n\t    if (count < MIN_IMAGES_IN_BLOCK) {\n\t      return i - (i - iFirstSave) % 4;\n\t    }\n\t    var positions = new Float32Array(count * 2);\n\t    var iTransform = iFirstTransform;\n\t    for (var q = 0; q < count; q++, iTransform += 4) {\n\t      var transformArgs = argsArray[iTransform];\n\t      positions[q << 1] = transformArgs[4];\n\t      positions[(q << 1) + 1] = transformArgs[5];\n\t    }\n\t    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n\t    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n\t    argsArray.splice(iFirstSave, count * 4, args);\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var iFirstSave = context.iCurr - 4;\n\t    var pos = (i - iFirstSave) % 5;\n\t    switch (pos) {\n\t      case 0:\n\t        return fnArray[i] === _util.OPS.beginText;\n\t      case 1:\n\t        return fnArray[i] === _util.OPS.setFont;\n\t      case 2:\n\t        return fnArray[i] === _util.OPS.setTextMatrix;\n\t      case 3:\n\t        if (fnArray[i] !== _util.OPS.showText) {\n\t          return false;\n\t        }\n\t        var iFirstSetFont = context.iCurr - 3;\n\t        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n\t        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\t        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n\t          return false;\n\t        }\n\t        return true;\n\t      case 4:\n\t        return fnArray[i] === _util.OPS.endText;\n\t    }\n\t  }, function (context, i) {\n\t    var MIN_CHARS_IN_BLOCK = 3;\n\t    var MAX_CHARS_IN_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstBeginText = curr - 4;\n\t    var iFirstSetFont = curr - 3;\n\t    var iFirstSetTextMatrix = curr - 2;\n\t    var iFirstShowText = curr - 1;\n\t    var iFirstEndText = curr;\n\t    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n\t    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\t    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n\t    if (count < MIN_CHARS_IN_BLOCK) {\n\t      return i - (i - iFirstBeginText) % 5;\n\t    }\n\t    var iFirst = iFirstBeginText;\n\t    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n\t      count++;\n\t      iFirst -= 5;\n\t    }\n\t    var iEndText = iFirst + 4;\n\t    for (var q = 1; q < count; q++) {\n\t      fnArray.splice(iEndText, 3);\n\t      argsArray.splice(iEndText, 3);\n\t      iEndText += 2;\n\t    }\n\t    return iEndText + 1;\n\t  });\n\t  function QueueOptimizer(queue) {\n\t    this.queue = queue;\n\t    this.state = null;\n\t    this.context = {\n\t      iCurr: 0,\n\t      fnArray: queue.fnArray,\n\t      argsArray: queue.argsArray\n\t    };\n\t    this.match = null;\n\t    this.lastProcessed = 0;\n\t  }\n\t  QueueOptimizer.prototype = {\n\t    _optimize: function _optimize() {\n\t      var fnArray = this.queue.fnArray;\n\t      var i = this.lastProcessed,\n\t          ii = fnArray.length;\n\t      var state = this.state;\n\t      var match = this.match;\n\t      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n\t        this.lastProcessed = ii;\n\t        return;\n\t      }\n\t      var context = this.context;\n\t      while (i < ii) {\n\t        if (match) {\n\t          var iterate = (0, match.iterateFn)(context, i);\n\t          if (iterate) {\n\t            i++;\n\t            continue;\n\t          }\n\t          i = (0, match.processFn)(context, i + 1);\n\t          ii = fnArray.length;\n\t          match = null;\n\t          state = null;\n\t          if (i >= ii) {\n\t            break;\n\t          }\n\t        }\n\t        state = (state || InitialState)[fnArray[i]];\n\t        if (!state || Array.isArray(state)) {\n\t          i++;\n\t          continue;\n\t        }\n\t        context.iCurr = i;\n\t        i++;\n\t        if (state.checkFn && !(0, state.checkFn)(context)) {\n\t          state = null;\n\t          continue;\n\t        }\n\t        match = state;\n\t        state = null;\n\t      }\n\t      this.state = state;\n\t      this.match = match;\n\t      this.lastProcessed = i;\n\t    },\n\t    push: function push(fn, args) {\n\t      this.queue.fnArray.push(fn);\n\t      this.queue.argsArray.push(args);\n\t      this._optimize();\n\t    },\n\t    flush: function flush() {\n\t      while (this.match) {\n\t        var length = this.queue.fnArray.length;\n\t        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n\t        this.match = null;\n\t        this.state = null;\n\t        this._optimize();\n\t      }\n\t    },\n\t    reset: function reset() {\n\t      this.state = null;\n\t      this.match = null;\n\t      this.lastProcessed = 0;\n\t    }\n\t  };\n\t  return QueueOptimizer;\n\t}();\n\tvar NullOptimizer = function NullOptimizerClosure() {\n\t  function NullOptimizer(queue) {\n\t    this.queue = queue;\n\t  }\n\t  NullOptimizer.prototype = {\n\t    push: function push(fn, args) {\n\t      this.queue.fnArray.push(fn);\n\t      this.queue.argsArray.push(args);\n\t    },\n\t    flush: function flush() {}\n\t  };\n\t  return NullOptimizer;\n\t}();\n\tvar OperatorList = function OperatorListClosure() {\n\t  var CHUNK_SIZE = 1000;\n\t  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n\t  function getTransfers(queue) {\n\t    var transfers = [];\n\t    var fnArray = queue.fnArray,\n\t        argsArray = queue.argsArray;\n\t    for (var i = 0, ii = queue.length; i < ii; i++) {\n\t      switch (fnArray[i]) {\n\t        case _util.OPS.paintInlineImageXObject:\n\t        case _util.OPS.paintInlineImageXObjectGroup:\n\t        case _util.OPS.paintImageMaskXObject:\n\t          var arg = argsArray[i][0];\n\t          if (!arg.cached) {\n\t            transfers.push(arg.data.buffer);\n\t          }\n\t          break;\n\t      }\n\t    }\n\t    return transfers;\n\t  }\n\t  function OperatorList(intent, messageHandler, pageIndex) {\n\t    this.messageHandler = messageHandler;\n\t    this.fnArray = [];\n\t    this.argsArray = [];\n\t    if (messageHandler && this.intent !== 'oplist') {\n\t      this.optimizer = new QueueOptimizer(this);\n\t    } else {\n\t      this.optimizer = new NullOptimizer(this);\n\t    }\n\t    this.dependencies = Object.create(null);\n\t    this._totalLength = 0;\n\t    this.pageIndex = pageIndex;\n\t    this.intent = intent;\n\t    this.weight = 0;\n\t  }\n\t  OperatorList.prototype = {\n\t    get length() {\n\t      return this.argsArray.length;\n\t    },\n\t    get totalLength() {\n\t      return this._totalLength + this.length;\n\t    },\n\t    addOp: function addOp(fn, args) {\n\t      this.optimizer.push(fn, args);\n\t      this.weight++;\n\t      if (this.messageHandler) {\n\t        if (this.weight >= CHUNK_SIZE) {\n\t          this.flush();\n\t        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n\t          this.flush();\n\t        }\n\t      }\n\t    },\n\t    addDependency: function addDependency(dependency) {\n\t      if (dependency in this.dependencies) {\n\t        return;\n\t      }\n\t      this.dependencies[dependency] = true;\n\t      this.addOp(_util.OPS.dependency, [dependency]);\n\t    },\n\t    addDependencies: function addDependencies(dependencies) {\n\t      for (var key in dependencies) {\n\t        this.addDependency(key);\n\t      }\n\t    },\n\t    addOpList: function addOpList(opList) {\n\t      _util.Util.extendObj(this.dependencies, opList.dependencies);\n\t      for (var i = 0, ii = opList.length; i < ii; i++) {\n\t        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n\t      }\n\t    },\n\t    getIR: function getIR() {\n\t      return {\n\t        fnArray: this.fnArray,\n\t        argsArray: this.argsArray,\n\t        length: this.length\n\t      };\n\t    },\n\t    flush: function flush(lastChunk) {\n\t      this.optimizer.flush();\n\t      var transfers = getTransfers(this);\n\t      var length = this.length;\n\t      this._totalLength += length;\n\t      this.messageHandler.send('RenderPageChunk', {\n\t        operatorList: {\n\t          fnArray: this.fnArray,\n\t          argsArray: this.argsArray,\n\t          lastChunk: lastChunk,\n\t          length: length\n\t        },\n\t        pageIndex: this.pageIndex,\n\t        intent: this.intent\n\t      }, transfers);\n\t      this.dependencies = Object.create(null);\n\t      this.fnArray.length = 0;\n\t      this.argsArray.length = 0;\n\t      this.weight = 0;\n\t      this.optimizer.reset();\n\t    }\n\t  };\n\t  return OperatorList;\n\t}();\n\texports.OperatorList = OperatorList;\n\n/***/ },\n\n/***/ 401:\n/***/ function(module, exports) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n\t  var QeTable = [{\n\t    qe: 0x5601,\n\t    nmps: 1,\n\t    nlps: 1,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x3401,\n\t    nmps: 2,\n\t    nlps: 6,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1801,\n\t    nmps: 3,\n\t    nlps: 9,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0AC1,\n\t    nmps: 4,\n\t    nlps: 12,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0521,\n\t    nmps: 5,\n\t    nlps: 29,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0221,\n\t    nmps: 38,\n\t    nlps: 33,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 7,\n\t    nlps: 6,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x5401,\n\t    nmps: 8,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x4801,\n\t    nmps: 9,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3801,\n\t    nmps: 10,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3001,\n\t    nmps: 11,\n\t    nlps: 17,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2401,\n\t    nmps: 12,\n\t    nlps: 18,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1C01,\n\t    nmps: 13,\n\t    nlps: 20,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1601,\n\t    nmps: 29,\n\t    nlps: 21,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 15,\n\t    nlps: 14,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x5401,\n\t    nmps: 16,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5101,\n\t    nmps: 17,\n\t    nlps: 15,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x4801,\n\t    nmps: 18,\n\t    nlps: 16,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3801,\n\t    nmps: 19,\n\t    nlps: 17,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3401,\n\t    nmps: 20,\n\t    nlps: 18,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3001,\n\t    nmps: 21,\n\t    nlps: 19,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2801,\n\t    nmps: 22,\n\t    nlps: 19,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2401,\n\t    nmps: 23,\n\t    nlps: 20,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2201,\n\t    nmps: 24,\n\t    nlps: 21,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1C01,\n\t    nmps: 25,\n\t    nlps: 22,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1801,\n\t    nmps: 26,\n\t    nlps: 23,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1601,\n\t    nmps: 27,\n\t    nlps: 24,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1401,\n\t    nmps: 28,\n\t    nlps: 25,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1201,\n\t    nmps: 29,\n\t    nlps: 26,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1101,\n\t    nmps: 30,\n\t    nlps: 27,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0AC1,\n\t    nmps: 31,\n\t    nlps: 28,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x09C1,\n\t    nmps: 32,\n\t    nlps: 29,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x08A1,\n\t    nmps: 33,\n\t    nlps: 30,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0521,\n\t    nmps: 34,\n\t    nlps: 31,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0441,\n\t    nmps: 35,\n\t    nlps: 32,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x02A1,\n\t    nmps: 36,\n\t    nlps: 33,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0221,\n\t    nmps: 37,\n\t    nlps: 34,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0141,\n\t    nmps: 38,\n\t    nlps: 35,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0111,\n\t    nmps: 39,\n\t    nlps: 36,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0085,\n\t    nmps: 40,\n\t    nlps: 37,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0049,\n\t    nmps: 41,\n\t    nlps: 38,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0025,\n\t    nmps: 42,\n\t    nlps: 39,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0015,\n\t    nmps: 43,\n\t    nlps: 40,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0009,\n\t    nmps: 44,\n\t    nlps: 41,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0005,\n\t    nmps: 45,\n\t    nlps: 42,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0001,\n\t    nmps: 45,\n\t    nlps: 43,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 46,\n\t    nlps: 46,\n\t    switchFlag: 0\n\t  }];\n\t  function ArithmeticDecoder(data, start, end) {\n\t    this.data = data;\n\t    this.bp = start;\n\t    this.dataEnd = end;\n\t    this.chigh = data[start];\n\t    this.clow = 0;\n\t    this.byteIn();\n\t    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n\t    this.clow = this.clow << 7 & 0xFFFF;\n\t    this.ct -= 7;\n\t    this.a = 0x8000;\n\t  }\n\t  ArithmeticDecoder.prototype = {\n\t    byteIn: function ArithmeticDecoder_byteIn() {\n\t      var data = this.data;\n\t      var bp = this.bp;\n\t      if (data[bp] === 0xFF) {\n\t        var b1 = data[bp + 1];\n\t        if (b1 > 0x8F) {\n\t          this.clow += 0xFF00;\n\t          this.ct = 8;\n\t        } else {\n\t          bp++;\n\t          this.clow += data[bp] << 9;\n\t          this.ct = 7;\n\t          this.bp = bp;\n\t        }\n\t      } else {\n\t        bp++;\n\t        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n\t        this.ct = 8;\n\t        this.bp = bp;\n\t      }\n\t      if (this.clow > 0xFFFF) {\n\t        this.chigh += this.clow >> 16;\n\t        this.clow &= 0xFFFF;\n\t      }\n\t    },\n\t    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n\t      var cx_index = contexts[pos] >> 1,\n\t          cx_mps = contexts[pos] & 1;\n\t      var qeTableIcx = QeTable[cx_index];\n\t      var qeIcx = qeTableIcx.qe;\n\t      var d;\n\t      var a = this.a - qeIcx;\n\t      if (this.chigh < qeIcx) {\n\t        if (a < qeIcx) {\n\t          a = qeIcx;\n\t          d = cx_mps;\n\t          cx_index = qeTableIcx.nmps;\n\t        } else {\n\t          a = qeIcx;\n\t          d = 1 ^ cx_mps;\n\t          if (qeTableIcx.switchFlag === 1) {\n\t            cx_mps = d;\n\t          }\n\t          cx_index = qeTableIcx.nlps;\n\t        }\n\t      } else {\n\t        this.chigh -= qeIcx;\n\t        if ((a & 0x8000) !== 0) {\n\t          this.a = a;\n\t          return cx_mps;\n\t        }\n\t        if (a < qeIcx) {\n\t          d = 1 ^ cx_mps;\n\t          if (qeTableIcx.switchFlag === 1) {\n\t            cx_mps = d;\n\t          }\n\t          cx_index = qeTableIcx.nlps;\n\t        } else {\n\t          d = cx_mps;\n\t          cx_index = qeTableIcx.nmps;\n\t        }\n\t      }\n\t      do {\n\t        if (this.ct === 0) {\n\t          this.byteIn();\n\t        }\n\t        a <<= 1;\n\t        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n\t        this.clow = this.clow << 1 & 0xFFFF;\n\t        this.ct--;\n\t      } while ((a & 0x8000) === 0);\n\t      this.a = a;\n\t      contexts[pos] = cx_index << 1 | cx_mps;\n\t      return d;\n\t    }\n\t  };\n\t  return ArithmeticDecoder;\n\t}();\n\texports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ },\n\n/***/ 402:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CCITTFaxDecoder = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n\t  var ccittEOL = -2;\n\t  var ccittEOF = -1;\n\t  var twoDimPass = 0;\n\t  var twoDimHoriz = 1;\n\t  var twoDimVert0 = 2;\n\t  var twoDimVertR1 = 3;\n\t  var twoDimVertL1 = 4;\n\t  var twoDimVertR2 = 5;\n\t  var twoDimVertL2 = 6;\n\t  var twoDimVertR3 = 7;\n\t  var twoDimVertL3 = 8;\n\t  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n\t  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n\t  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n\t  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n\t  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n\t  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n\t  function CCITTFaxDecoder(source) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    if (!source || typeof source.next !== 'function') {\n\t      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n\t    }\n\t    this.source = source;\n\t    this.eof = false;\n\t    this.encoding = options['K'] || 0;\n\t    this.eoline = options['EndOfLine'] || false;\n\t    this.byteAlign = options['EncodedByteAlign'] || false;\n\t    this.columns = options['Columns'] || 1728;\n\t    this.rows = options['Rows'] || 0;\n\t    var eoblock = options['EndOfBlock'];\n\t    if (eoblock === null || eoblock === undefined) {\n\t      eoblock = true;\n\t    }\n\t    this.eoblock = eoblock;\n\t    this.black = options['BlackIs1'] || false;\n\t    this.codingLine = new Uint32Array(this.columns + 1);\n\t    this.refLine = new Uint32Array(this.columns + 2);\n\t    this.codingLine[0] = this.columns;\n\t    this.codingPos = 0;\n\t    this.row = 0;\n\t    this.nextLine2D = this.encoding < 0;\n\t    this.inputBits = 0;\n\t    this.inputBuf = 0;\n\t    this.outputBits = 0;\n\t    this.rowsDone = false;\n\t    var code1 = void 0;\n\t    while ((code1 = this._lookBits(12)) === 0) {\n\t      this._eatBits(1);\n\t    }\n\t    if (code1 === 1) {\n\t      this._eatBits(12);\n\t    }\n\t    if (this.encoding > 0) {\n\t      this.nextLine2D = !this._lookBits(1);\n\t      this._eatBits(1);\n\t    }\n\t  }\n\t  CCITTFaxDecoder.prototype = {\n\t    readNextChar: function readNextChar() {\n\t      if (this.eof) {\n\t        return -1;\n\t      }\n\t      var refLine = this.refLine;\n\t      var codingLine = this.codingLine;\n\t      var columns = this.columns;\n\t      var refPos = void 0,\n\t          blackPixels = void 0,\n\t          bits = void 0,\n\t          i = void 0;\n\t      if (this.outputBits === 0) {\n\t        if (this.rowsDone) {\n\t          this.eof = true;\n\t        }\n\t        if (this.eof) {\n\t          return -1;\n\t        }\n\t        this.err = false;\n\t        var code1 = void 0,\n\t            code2 = void 0,\n\t            code3 = void 0;\n\t        if (this.nextLine2D) {\n\t          for (i = 0; codingLine[i] < columns; ++i) {\n\t            refLine[i] = codingLine[i];\n\t          }\n\t          refLine[i++] = columns;\n\t          refLine[i] = columns;\n\t          codingLine[0] = 0;\n\t          this.codingPos = 0;\n\t          refPos = 0;\n\t          blackPixels = 0;\n\t          while (codingLine[this.codingPos] < columns) {\n\t            code1 = this._getTwoDimCode();\n\t            switch (code1) {\n\t              case twoDimPass:\n\t                this._addPixels(refLine[refPos + 1], blackPixels);\n\t                if (refLine[refPos + 1] < columns) {\n\t                  refPos += 2;\n\t                }\n\t                break;\n\t              case twoDimHoriz:\n\t                code1 = code2 = 0;\n\t                if (blackPixels) {\n\t                  do {\n\t                    code1 += code3 = this._getBlackCode();\n\t                  } while (code3 >= 64);\n\t                  do {\n\t                    code2 += code3 = this._getWhiteCode();\n\t                  } while (code3 >= 64);\n\t                } else {\n\t                  do {\n\t                    code1 += code3 = this._getWhiteCode();\n\t                  } while (code3 >= 64);\n\t                  do {\n\t                    code2 += code3 = this._getBlackCode();\n\t                  } while (code3 >= 64);\n\t                }\n\t                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n\t                }\n\t                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                  refPos += 2;\n\t                }\n\t                break;\n\t              case twoDimVertR3:\n\t                this._addPixels(refLine[refPos] + 3, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertR2:\n\t                this._addPixels(refLine[refPos] + 2, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertR1:\n\t                this._addPixels(refLine[refPos] + 1, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVert0:\n\t                this._addPixels(refLine[refPos], blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL3:\n\t                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL2:\n\t                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL1:\n\t                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case ccittEOF:\n\t                this._addPixels(columns, 0);\n\t                this.eof = true;\n\t                break;\n\t              default:\n\t                (0, _util.info)('bad 2d code');\n\t                this._addPixels(columns, 0);\n\t                this.err = true;\n\t            }\n\t          }\n\t        } else {\n\t          codingLine[0] = 0;\n\t          this.codingPos = 0;\n\t          blackPixels = 0;\n\t          while (codingLine[this.codingPos] < columns) {\n\t            code1 = 0;\n\t            if (blackPixels) {\n\t              do {\n\t                code1 += code3 = this._getBlackCode();\n\t              } while (code3 >= 64);\n\t            } else {\n\t              do {\n\t                code1 += code3 = this._getWhiteCode();\n\t              } while (code3 >= 64);\n\t            }\n\t            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t            blackPixels ^= 1;\n\t          }\n\t        }\n\t        var gotEOL = false;\n\t        if (this.byteAlign) {\n\t          this.inputBits &= ~7;\n\t        }\n\t        if (!this.eoblock && this.row === this.rows - 1) {\n\t          this.rowsDone = true;\n\t        } else {\n\t          code1 = this._lookBits(12);\n\t          if (this.eoline) {\n\t            while (code1 !== ccittEOF && code1 !== 1) {\n\t              this._eatBits(1);\n\t              code1 = this._lookBits(12);\n\t            }\n\t          } else {\n\t            while (code1 === 0) {\n\t              this._eatBits(1);\n\t              code1 = this._lookBits(12);\n\t            }\n\t          }\n\t          if (code1 === 1) {\n\t            this._eatBits(12);\n\t            gotEOL = true;\n\t          } else if (code1 === ccittEOF) {\n\t            this.eof = true;\n\t          }\n\t        }\n\t        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n\t          this.nextLine2D = !this._lookBits(1);\n\t          this._eatBits(1);\n\t        }\n\t        if (this.eoblock && gotEOL && this.byteAlign) {\n\t          code1 = this._lookBits(12);\n\t          if (code1 === 1) {\n\t            this._eatBits(12);\n\t            if (this.encoding > 0) {\n\t              this._lookBits(1);\n\t              this._eatBits(1);\n\t            }\n\t            if (this.encoding >= 0) {\n\t              for (i = 0; i < 4; ++i) {\n\t                code1 = this._lookBits(12);\n\t                if (code1 !== 1) {\n\t                  (0, _util.info)('bad rtc code: ' + code1);\n\t                }\n\t                this._eatBits(12);\n\t                if (this.encoding > 0) {\n\t                  this._lookBits(1);\n\t                  this._eatBits(1);\n\t                }\n\t              }\n\t            }\n\t            this.eof = true;\n\t          }\n\t        } else if (this.err && this.eoline) {\n\t          while (true) {\n\t            code1 = this._lookBits(13);\n\t            if (code1 === ccittEOF) {\n\t              this.eof = true;\n\t              return -1;\n\t            }\n\t            if (code1 >> 1 === 1) {\n\t              break;\n\t            }\n\t            this._eatBits(1);\n\t          }\n\t          this._eatBits(12);\n\t          if (this.encoding > 0) {\n\t            this._eatBits(1);\n\t            this.nextLine2D = !(code1 & 1);\n\t          }\n\t        }\n\t        if (codingLine[0] > 0) {\n\t          this.outputBits = codingLine[this.codingPos = 0];\n\t        } else {\n\t          this.outputBits = codingLine[this.codingPos = 1];\n\t        }\n\t        this.row++;\n\t      }\n\t      var c = void 0;\n\t      if (this.outputBits >= 8) {\n\t        c = this.codingPos & 1 ? 0 : 0xFF;\n\t        this.outputBits -= 8;\n\t        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n\t          this.codingPos++;\n\t          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t        }\n\t      } else {\n\t        bits = 8;\n\t        c = 0;\n\t        do {\n\t          if (this.outputBits > bits) {\n\t            c <<= bits;\n\t            if (!(this.codingPos & 1)) {\n\t              c |= 0xFF >> 8 - bits;\n\t            }\n\t            this.outputBits -= bits;\n\t            bits = 0;\n\t          } else {\n\t            c <<= this.outputBits;\n\t            if (!(this.codingPos & 1)) {\n\t              c |= 0xFF >> 8 - this.outputBits;\n\t            }\n\t            bits -= this.outputBits;\n\t            this.outputBits = 0;\n\t            if (codingLine[this.codingPos] < columns) {\n\t              this.codingPos++;\n\t              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t            } else if (bits > 0) {\n\t              c <<= bits;\n\t              bits = 0;\n\t            }\n\t          }\n\t        } while (bits);\n\t      }\n\t      if (this.black) {\n\t        c ^= 0xFF;\n\t      }\n\t      return c;\n\t    },\n\t    _addPixels: function _addPixels(a1, blackPixels) {\n\t      var codingLine = this.codingLine;\n\t      var codingPos = this.codingPos;\n\t      if (a1 > codingLine[codingPos]) {\n\t        if (a1 > this.columns) {\n\t          (0, _util.info)('row is wrong length');\n\t          this.err = true;\n\t          a1 = this.columns;\n\t        }\n\t        if (codingPos & 1 ^ blackPixels) {\n\t          ++codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      }\n\t      this.codingPos = codingPos;\n\t    },\n\t    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n\t      var codingLine = this.codingLine;\n\t      var codingPos = this.codingPos;\n\t      if (a1 > codingLine[codingPos]) {\n\t        if (a1 > this.columns) {\n\t          (0, _util.info)('row is wrong length');\n\t          this.err = true;\n\t          a1 = this.columns;\n\t        }\n\t        if (codingPos & 1 ^ blackPixels) {\n\t          ++codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      } else if (a1 < codingLine[codingPos]) {\n\t        if (a1 < 0) {\n\t          (0, _util.info)('invalid code');\n\t          this.err = true;\n\t          a1 = 0;\n\t        }\n\t        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n\t          --codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      }\n\t      this.codingPos = codingPos;\n\t    },\n\t    _findTableCode: function _findTableCode(start, end, table, limit) {\n\t      var limitValue = limit || 0;\n\t      for (var i = start; i <= end; ++i) {\n\t        var code = this._lookBits(i);\n\t        if (code === ccittEOF) {\n\t          return [true, 1, false];\n\t        }\n\t        if (i < end) {\n\t          code <<= end - i;\n\t        }\n\t        if (!limitValue || code >= limitValue) {\n\t          var p = table[code - limitValue];\n\t          if (p[0] === i) {\n\t            this._eatBits(i);\n\t            return [true, p[1], true];\n\t          }\n\t        }\n\t      }\n\t      return [false, 0, false];\n\t    },\n\t    _getTwoDimCode: function _getTwoDimCode() {\n\t      var code = 0;\n\t      var p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(7);\n\t        p = twoDimTable[code];\n\t        if (p && p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(1, 7, twoDimTable);\n\t        if (result[0] && result[2]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('Bad two dim code');\n\t      return ccittEOF;\n\t    },\n\t    _getWhiteCode: function _getWhiteCode() {\n\t      var code = 0;\n\t      var p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(12);\n\t        if (code === ccittEOF) {\n\t          return 1;\n\t        }\n\t        if (code >> 5 === 0) {\n\t          p = whiteTable1[code];\n\t        } else {\n\t          p = whiteTable2[code >> 3];\n\t        }\n\t        if (p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(1, 9, whiteTable2);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(11, 12, whiteTable1);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('bad white code');\n\t      this._eatBits(1);\n\t      return 1;\n\t    },\n\t    _getBlackCode: function _getBlackCode() {\n\t      var code = void 0,\n\t          p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(13);\n\t        if (code === ccittEOF) {\n\t          return 1;\n\t        }\n\t        if (code >> 7 === 0) {\n\t          p = blackTable1[code];\n\t        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n\t          p = blackTable2[(code >> 1) - 64];\n\t        } else {\n\t          p = blackTable3[code >> 7];\n\t        }\n\t        if (p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(2, 6, blackTable3);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(7, 12, blackTable2, 64);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(10, 13, blackTable1);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('bad black code');\n\t      this._eatBits(1);\n\t      return 1;\n\t    },\n\t    _lookBits: function _lookBits(n) {\n\t      var c = void 0;\n\t      while (this.inputBits < n) {\n\t        if ((c = this.source.next()) === -1) {\n\t          if (this.inputBits === 0) {\n\t            return ccittEOF;\n\t          }\n\t          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n\t        }\n\t        this.inputBuf = this.inputBuf << 8 | c;\n\t        this.inputBits += 8;\n\t      }\n\t      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n\t    },\n\t    _eatBits: function _eatBits(n) {\n\t      if ((this.inputBits -= n) < 0) {\n\t        this.inputBits = 0;\n\t      }\n\t    }\n\t  };\n\t  return CCITTFaxDecoder;\n\t}();\n\texports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ },\n\n/***/ 403:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _charsets = __webpack_require__(687);\n\t\n\tvar _encodings = __webpack_require__(98);\n\t\n\tvar MAX_SUBR_NESTING = 10;\n\tvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\tvar CFFParser = function CFFParserClosure() {\n\t  var CharstringValidationData = [null, {\n\t    id: 'hstem',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, null, {\n\t    id: 'vstem',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'vmoveto',\n\t    min: 1,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'rlineto',\n\t    min: 2,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hlineto',\n\t    min: 1,\n\t    resetStack: true\n\t  }, {\n\t    id: 'vlineto',\n\t    min: 1,\n\t    resetStack: true\n\t  }, {\n\t    id: 'rrcurveto',\n\t    min: 6,\n\t    resetStack: true\n\t  }, null, {\n\t    id: 'callsubr',\n\t    min: 1,\n\t    undefStack: true\n\t  }, {\n\t    id: 'return',\n\t    min: 0,\n\t    undefStack: true\n\t  }, null, null, {\n\t    id: 'endchar',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, null, null, null, {\n\t    id: 'hstemhm',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'hintmask',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'cntrmask',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'rmoveto',\n\t    min: 2,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'hmoveto',\n\t    min: 1,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'vstemhm',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'rcurveline',\n\t    min: 8,\n\t    resetStack: true\n\t  }, {\n\t    id: 'rlinecurve',\n\t    min: 8,\n\t    resetStack: true\n\t  }, {\n\t    id: 'vvcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hhcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, null, {\n\t    id: 'callgsubr',\n\t    min: 1,\n\t    undefStack: true\n\t  }, {\n\t    id: 'vhcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hvcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }];\n\t  var CharstringValidationData12 = [null, null, null, {\n\t    id: 'and',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, {\n\t    id: 'or',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, {\n\t    id: 'not',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, null, null, null, {\n\t    id: 'abs',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'add',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] + stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'sub',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] - stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'div',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] / stack[index - 1];\n\t    }\n\t  }, null, {\n\t    id: 'neg',\n\t    min: 1,\n\t    stackDelta: 0,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 1] = -stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'eq',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, null, null, {\n\t    id: 'drop',\n\t    min: 1,\n\t    stackDelta: -1\n\t  }, null, {\n\t    id: 'put',\n\t    min: 2,\n\t    stackDelta: -2\n\t  }, {\n\t    id: 'get',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'ifelse',\n\t    min: 4,\n\t    stackDelta: -3\n\t  }, {\n\t    id: 'random',\n\t    min: 0,\n\t    stackDelta: 1\n\t  }, {\n\t    id: 'mul',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] * stack[index - 1];\n\t    }\n\t  }, null, {\n\t    id: 'sqrt',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'dup',\n\t    min: 1,\n\t    stackDelta: 1\n\t  }, {\n\t    id: 'exch',\n\t    min: 2,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'index',\n\t    min: 2,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'roll',\n\t    min: 3,\n\t    stackDelta: -2\n\t  }, null, null, null, {\n\t    id: 'hflex',\n\t    min: 7,\n\t    resetStack: true\n\t  }, {\n\t    id: 'flex',\n\t    min: 13,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hflex1',\n\t    min: 9,\n\t    resetStack: true\n\t  }, {\n\t    id: 'flex1',\n\t    min: 11,\n\t    resetStack: true\n\t  }];\n\t  function CFFParser(file, properties, seacAnalysisEnabled) {\n\t    this.bytes = file.getBytes();\n\t    this.properties = properties;\n\t    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t  }\n\t  CFFParser.prototype = {\n\t    parse: function CFFParser_parse() {\n\t      var properties = this.properties;\n\t      var cff = new CFF();\n\t      this.cff = cff;\n\t      var header = this.parseHeader();\n\t      var nameIndex = this.parseIndex(header.endPos);\n\t      var topDictIndex = this.parseIndex(nameIndex.endPos);\n\t      var stringIndex = this.parseIndex(topDictIndex.endPos);\n\t      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n\t      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n\t      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n\t      cff.header = header.obj;\n\t      cff.names = this.parseNameIndex(nameIndex.obj);\n\t      cff.strings = this.parseStringIndex(stringIndex.obj);\n\t      cff.topDict = topDict;\n\t      cff.globalSubrIndex = globalSubrIndex.obj;\n\t      this.parsePrivateDict(cff.topDict);\n\t      cff.isCIDFont = topDict.hasName('ROS');\n\t      var charStringOffset = topDict.getByName('CharStrings');\n\t      var charStringIndex = this.parseIndex(charStringOffset).obj;\n\t      var fontMatrix = topDict.getByName('FontMatrix');\n\t      if (fontMatrix) {\n\t        properties.fontMatrix = fontMatrix;\n\t      }\n\t      var fontBBox = topDict.getByName('FontBBox');\n\t      if (fontBBox) {\n\t        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t        properties.ascentScaled = true;\n\t      }\n\t      var charset, encoding;\n\t      if (cff.isCIDFont) {\n\t        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n\t        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n\t          var dictRaw = fdArrayIndex.get(i);\n\t          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n\t          this.parsePrivateDict(fontDict);\n\t          cff.fdArray.push(fontDict);\n\t        }\n\t        encoding = null;\n\t        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n\t        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n\t      } else {\n\t        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n\t        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n\t      }\n\t      cff.charset = charset;\n\t      cff.encoding = encoding;\n\t      var charStringsAndSeacs = this.parseCharStrings({\n\t        charStrings: charStringIndex,\n\t        localSubrIndex: topDict.privateDict.subrsIndex,\n\t        globalSubrIndex: globalSubrIndex.obj,\n\t        fdSelect: cff.fdSelect,\n\t        fdArray: cff.fdArray,\n\t        privateDict: topDict.privateDict\n\t      });\n\t      cff.charStrings = charStringsAndSeacs.charStrings;\n\t      cff.seacs = charStringsAndSeacs.seacs;\n\t      cff.widths = charStringsAndSeacs.widths;\n\t      return cff;\n\t    },\n\t    parseHeader: function CFFParser_parseHeader() {\n\t      var bytes = this.bytes;\n\t      var bytesLength = bytes.length;\n\t      var offset = 0;\n\t      while (offset < bytesLength && bytes[offset] !== 1) {\n\t        ++offset;\n\t      }\n\t      if (offset >= bytesLength) {\n\t        throw new _util.FormatError('Invalid CFF header');\n\t      }\n\t      if (offset !== 0) {\n\t        (0, _util.info)('cff data is shifted');\n\t        bytes = bytes.subarray(offset);\n\t        this.bytes = bytes;\n\t      }\n\t      var major = bytes[0];\n\t      var minor = bytes[1];\n\t      var hdrSize = bytes[2];\n\t      var offSize = bytes[3];\n\t      var header = new CFFHeader(major, minor, hdrSize, offSize);\n\t      return {\n\t        obj: header,\n\t        endPos: hdrSize\n\t      };\n\t    },\n\t    parseDict: function CFFParser_parseDict(dict) {\n\t      var pos = 0;\n\t      function parseOperand() {\n\t        var value = dict[pos++];\n\t        if (value === 30) {\n\t          return parseFloatOperand();\n\t        } else if (value === 28) {\n\t          value = dict[pos++];\n\t          value = (value << 24 | dict[pos++] << 16) >> 16;\n\t          return value;\n\t        } else if (value === 29) {\n\t          value = dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          return value;\n\t        } else if (value >= 32 && value <= 246) {\n\t          return value - 139;\n\t        } else if (value >= 247 && value <= 250) {\n\t          return (value - 247) * 256 + dict[pos++] + 108;\n\t        } else if (value >= 251 && value <= 254) {\n\t          return -((value - 251) * 256) - dict[pos++] - 108;\n\t        }\n\t        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n\t        return NaN;\n\t      }\n\t      function parseFloatOperand() {\n\t        var str = '';\n\t        var eof = 15;\n\t        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\t        var length = dict.length;\n\t        while (pos < length) {\n\t          var b = dict[pos++];\n\t          var b1 = b >> 4;\n\t          var b2 = b & 15;\n\t          if (b1 === eof) {\n\t            break;\n\t          }\n\t          str += lookup[b1];\n\t          if (b2 === eof) {\n\t            break;\n\t          }\n\t          str += lookup[b2];\n\t        }\n\t        return parseFloat(str);\n\t      }\n\t      var operands = [];\n\t      var entries = [];\n\t      pos = 0;\n\t      var end = dict.length;\n\t      while (pos < end) {\n\t        var b = dict[pos];\n\t        if (b <= 21) {\n\t          if (b === 12) {\n\t            b = b << 8 | dict[++pos];\n\t          }\n\t          entries.push([b, operands]);\n\t          operands = [];\n\t          ++pos;\n\t        } else {\n\t          operands.push(parseOperand());\n\t        }\n\t      }\n\t      return entries;\n\t    },\n\t    parseIndex: function CFFParser_parseIndex(pos) {\n\t      var cffIndex = new CFFIndex();\n\t      var bytes = this.bytes;\n\t      var count = bytes[pos++] << 8 | bytes[pos++];\n\t      var offsets = [];\n\t      var end = pos;\n\t      var i, ii;\n\t      if (count !== 0) {\n\t        var offsetSize = bytes[pos++];\n\t        var startPos = pos + (count + 1) * offsetSize - 1;\n\t        for (i = 0, ii = count + 1; i < ii; ++i) {\n\t          var offset = 0;\n\t          for (var j = 0; j < offsetSize; ++j) {\n\t            offset <<= 8;\n\t            offset += bytes[pos++];\n\t          }\n\t          offsets.push(startPos + offset);\n\t        }\n\t        end = offsets[count];\n\t      }\n\t      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n\t        var offsetStart = offsets[i];\n\t        var offsetEnd = offsets[i + 1];\n\t        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n\t      }\n\t      return {\n\t        obj: cffIndex,\n\t        endPos: end\n\t      };\n\t    },\n\t    parseNameIndex: function CFFParser_parseNameIndex(index) {\n\t      var names = [];\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t        var name = index.get(i);\n\t        names.push((0, _util.bytesToString)(name));\n\t      }\n\t      return names;\n\t    },\n\t    parseStringIndex: function CFFParser_parseStringIndex(index) {\n\t      var strings = new CFFStrings();\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t        var data = index.get(i);\n\t        strings.add((0, _util.bytesToString)(data));\n\t      }\n\t      return strings;\n\t    },\n\t    createDict: function CFFParser_createDict(Type, dict, strings) {\n\t      var cffDict = new Type(strings);\n\t      for (var i = 0, ii = dict.length; i < ii; ++i) {\n\t        var pair = dict[i];\n\t        var key = pair[0];\n\t        var value = pair[1];\n\t        cffDict.setByKey(key, value);\n\t      }\n\t      return cffDict;\n\t    },\n\t    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n\t      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n\t        return false;\n\t      }\n\t      var stackSize = state.stackSize;\n\t      var stack = state.stack;\n\t      var length = data.length;\n\t      for (var j = 0; j < length;) {\n\t        var value = data[j++];\n\t        var validationCommand = null;\n\t        if (value === 12) {\n\t          var q = data[j++];\n\t          if (q === 0) {\n\t            data[j - 2] = 139;\n\t            data[j - 1] = 22;\n\t            stackSize = 0;\n\t          } else {\n\t            validationCommand = CharstringValidationData12[q];\n\t          }\n\t        } else if (value === 28) {\n\t          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n\t          j += 2;\n\t          stackSize++;\n\t        } else if (value === 14) {\n\t          if (stackSize >= 4) {\n\t            stackSize -= 4;\n\t            if (this.seacAnalysisEnabled) {\n\t              state.seac = stack.slice(stackSize, stackSize + 4);\n\t              return false;\n\t            }\n\t          }\n\t          validationCommand = CharstringValidationData[value];\n\t        } else if (value >= 32 && value <= 246) {\n\t          stack[stackSize] = value - 139;\n\t          stackSize++;\n\t        } else if (value >= 247 && value <= 254) {\n\t          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n\t          j++;\n\t          stackSize++;\n\t        } else if (value === 255) {\n\t          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n\t          j += 4;\n\t          stackSize++;\n\t        } else if (value === 19 || value === 20) {\n\t          state.hints += stackSize >> 1;\n\t          j += state.hints + 7 >> 3;\n\t          stackSize %= 2;\n\t          validationCommand = CharstringValidationData[value];\n\t        } else if (value === 10 || value === 29) {\n\t          var subrsIndex;\n\t          if (value === 10) {\n\t            subrsIndex = localSubrIndex;\n\t          } else {\n\t            subrsIndex = globalSubrIndex;\n\t          }\n\t          if (!subrsIndex) {\n\t            validationCommand = CharstringValidationData[value];\n\t            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n\t            return false;\n\t          }\n\t          var bias = 32768;\n\t          if (subrsIndex.count < 1240) {\n\t            bias = 107;\n\t          } else if (subrsIndex.count < 33900) {\n\t            bias = 1131;\n\t          }\n\t          var subrNumber = stack[--stackSize] + bias;\n\t          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n\t            validationCommand = CharstringValidationData[value];\n\t            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n\t            return false;\n\t          }\n\t          state.stackSize = stackSize;\n\t          state.callDepth++;\n\t          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n\t          if (!valid) {\n\t            return false;\n\t          }\n\t          state.callDepth--;\n\t          stackSize = state.stackSize;\n\t          continue;\n\t        } else if (value === 11) {\n\t          state.stackSize = stackSize;\n\t          return true;\n\t        } else {\n\t          validationCommand = CharstringValidationData[value];\n\t        }\n\t        if (validationCommand) {\n\t          if (validationCommand.stem) {\n\t            state.hints += stackSize >> 1;\n\t          }\n\t          if ('min' in validationCommand) {\n\t            if (!state.undefStack && stackSize < validationCommand.min) {\n\t              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n\t              return false;\n\t            }\n\t          }\n\t          if (state.firstStackClearing && validationCommand.stackClearing) {\n\t            state.firstStackClearing = false;\n\t            stackSize -= validationCommand.min;\n\t            if (stackSize >= 2 && validationCommand.stem) {\n\t              stackSize %= 2;\n\t            } else if (stackSize > 1) {\n\t              (0, _util.warn)('Found too many parameters for stack-clearing command');\n\t            }\n\t            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n\t              state.width = stack[stackSize - 1];\n\t            }\n\t          }\n\t          if ('stackDelta' in validationCommand) {\n\t            if ('stackFn' in validationCommand) {\n\t              validationCommand.stackFn(stack, stackSize);\n\t            }\n\t            stackSize += validationCommand.stackDelta;\n\t          } else if (validationCommand.stackClearing) {\n\t            stackSize = 0;\n\t          } else if (validationCommand.resetStack) {\n\t            stackSize = 0;\n\t            state.undefStack = false;\n\t          } else if (validationCommand.undefStack) {\n\t            stackSize = 0;\n\t            state.undefStack = true;\n\t            state.firstStackClearing = false;\n\t          }\n\t        }\n\t      }\n\t      state.stackSize = stackSize;\n\t      return true;\n\t    },\n\t    parseCharStrings: function parseCharStrings(_ref) {\n\t      var charStrings = _ref.charStrings,\n\t          localSubrIndex = _ref.localSubrIndex,\n\t          globalSubrIndex = _ref.globalSubrIndex,\n\t          fdSelect = _ref.fdSelect,\n\t          fdArray = _ref.fdArray,\n\t          privateDict = _ref.privateDict;\n\t\n\t      var seacs = [];\n\t      var widths = [];\n\t      var count = charStrings.count;\n\t      for (var i = 0; i < count; i++) {\n\t        var charstring = charStrings.get(i);\n\t        var state = {\n\t          callDepth: 0,\n\t          stackSize: 0,\n\t          stack: [],\n\t          undefStack: true,\n\t          hints: 0,\n\t          firstStackClearing: true,\n\t          seac: null,\n\t          width: null\n\t        };\n\t        var valid = true;\n\t        var localSubrToUse = null;\n\t        var privateDictToUse = privateDict;\n\t        if (fdSelect && fdArray.length) {\n\t          var fdIndex = fdSelect.getFDIndex(i);\n\t          if (fdIndex === -1) {\n\t            (0, _util.warn)('Glyph index is not in fd select.');\n\t            valid = false;\n\t          }\n\t          if (fdIndex >= fdArray.length) {\n\t            (0, _util.warn)('Invalid fd index for glyph index.');\n\t            valid = false;\n\t          }\n\t          if (valid) {\n\t            privateDictToUse = fdArray[fdIndex].privateDict;\n\t            localSubrToUse = privateDictToUse.subrsIndex;\n\t          }\n\t        } else if (localSubrIndex) {\n\t          localSubrToUse = localSubrIndex;\n\t        }\n\t        if (valid) {\n\t          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n\t        }\n\t        if (state.width !== null) {\n\t          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n\t          widths[i] = nominalWidth + state.width;\n\t        } else {\n\t          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n\t          widths[i] = defaultWidth;\n\t        }\n\t        if (state.seac !== null) {\n\t          seacs[i] = state.seac;\n\t        }\n\t        if (!valid) {\n\t          charStrings.set(i, new Uint8Array([14]));\n\t        }\n\t      }\n\t      return {\n\t        charStrings: charStrings,\n\t        seacs: seacs,\n\t        widths: widths\n\t      };\n\t    },\n\t\n\t    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n\t      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n\t      parentDict.setByKey(18, [0, 0]);\n\t      parentDict.privateDict = privateDict;\n\t    },\n\t    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n\t      if (!parentDict.hasName('Private')) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var privateOffset = parentDict.getByName('Private');\n\t      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n\t        parentDict.removeByName('Private');\n\t        return;\n\t      }\n\t      var size = privateOffset[0];\n\t      var offset = privateOffset[1];\n\t      if (size === 0 || offset >= this.bytes.length) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var privateDictEnd = offset + size;\n\t      var dictData = this.bytes.subarray(offset, privateDictEnd);\n\t      var dict = this.parseDict(dictData);\n\t      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n\t      parentDict.privateDict = privateDict;\n\t      if (!privateDict.getByName('Subrs')) {\n\t        return;\n\t      }\n\t      var subrsOffset = privateDict.getByName('Subrs');\n\t      var relativeOffset = offset + subrsOffset;\n\t      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var subrsIndex = this.parseIndex(relativeOffset);\n\t      privateDict.subrsIndex = subrsIndex.obj;\n\t    },\n\t    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n\t      if (pos === 0) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n\t      } else if (pos === 1) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n\t      } else if (pos === 2) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n\t      }\n\t      var bytes = this.bytes;\n\t      var start = pos;\n\t      var format = bytes[pos++];\n\t      var charset = ['.notdef'];\n\t      var id, count, i;\n\t      length -= 1;\n\t      switch (format) {\n\t        case 0:\n\t          for (i = 0; i < length; i++) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            charset.push(cid ? id : strings.get(id));\n\t          }\n\t          break;\n\t        case 1:\n\t          while (charset.length <= length) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            count = bytes[pos++];\n\t            for (i = 0; i <= count; i++) {\n\t              charset.push(cid ? id++ : strings.get(id++));\n\t            }\n\t          }\n\t          break;\n\t        case 2:\n\t          while (charset.length <= length) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            count = bytes[pos++] << 8 | bytes[pos++];\n\t            for (i = 0; i <= count; i++) {\n\t              charset.push(cid ? id++ : strings.get(id++));\n\t            }\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('Unknown charset format');\n\t      }\n\t      var end = pos;\n\t      var raw = bytes.subarray(start, end);\n\t      return new CFFCharset(false, format, charset, raw);\n\t    },\n\t    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n\t      var encoding = Object.create(null);\n\t      var bytes = this.bytes;\n\t      var predefined = false;\n\t      var format, i, ii;\n\t      var raw = null;\n\t      function readSupplement() {\n\t        var supplementsCount = bytes[pos++];\n\t        for (i = 0; i < supplementsCount; i++) {\n\t          var code = bytes[pos++];\n\t          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n\t          encoding[code] = charset.indexOf(strings.get(sid));\n\t        }\n\t      }\n\t      if (pos === 0 || pos === 1) {\n\t        predefined = true;\n\t        format = pos;\n\t        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n\t        for (i = 0, ii = charset.length; i < ii; i++) {\n\t          var index = baseEncoding.indexOf(charset[i]);\n\t          if (index !== -1) {\n\t            encoding[index] = i;\n\t          }\n\t        }\n\t      } else {\n\t        var dataStart = pos;\n\t        format = bytes[pos++];\n\t        switch (format & 0x7f) {\n\t          case 0:\n\t            var glyphsCount = bytes[pos++];\n\t            for (i = 1; i <= glyphsCount; i++) {\n\t              encoding[bytes[pos++]] = i;\n\t            }\n\t            break;\n\t          case 1:\n\t            var rangesCount = bytes[pos++];\n\t            var gid = 1;\n\t            for (i = 0; i < rangesCount; i++) {\n\t              var start = bytes[pos++];\n\t              var left = bytes[pos++];\n\t              for (var j = start; j <= start + left; j++) {\n\t                encoding[j] = gid++;\n\t              }\n\t            }\n\t            break;\n\t          default:\n\t            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n\t        }\n\t        var dataEnd = pos;\n\t        if (format & 0x80) {\n\t          bytes[dataStart] &= 0x7f;\n\t          readSupplement();\n\t        }\n\t        raw = bytes.subarray(dataStart, dataEnd);\n\t      }\n\t      format = format & 0x7f;\n\t      return new CFFEncoding(predefined, format, encoding, raw);\n\t    },\n\t    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n\t      var start = pos;\n\t      var bytes = this.bytes;\n\t      var format = bytes[pos++];\n\t      var fdSelect = [],\n\t          rawBytes;\n\t      var i,\n\t          invalidFirstGID = false;\n\t      switch (format) {\n\t        case 0:\n\t          for (i = 0; i < length; ++i) {\n\t            var id = bytes[pos++];\n\t            fdSelect.push(id);\n\t          }\n\t          rawBytes = bytes.subarray(start, pos);\n\t          break;\n\t        case 3:\n\t          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n\t          for (i = 0; i < rangesCount; ++i) {\n\t            var first = bytes[pos++] << 8 | bytes[pos++];\n\t            if (i === 0 && first !== 0) {\n\t              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n\t              invalidFirstGID = true;\n\t              first = 0;\n\t            }\n\t            var fdIndex = bytes[pos++];\n\t            var next = bytes[pos] << 8 | bytes[pos + 1];\n\t            for (var j = first; j < next; ++j) {\n\t              fdSelect.push(fdIndex);\n\t            }\n\t          }\n\t          pos += 2;\n\t          rawBytes = bytes.subarray(start, pos);\n\t          if (invalidFirstGID) {\n\t            rawBytes[3] = rawBytes[4] = 0;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n\t      }\n\t      if (fdSelect.length !== length) {\n\t        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n\t      }\n\t      return new CFFFDSelect(fdSelect, rawBytes);\n\t    }\n\t  };\n\t  return CFFParser;\n\t}();\n\tvar CFF = function CFFClosure() {\n\t  function CFF() {\n\t    this.header = null;\n\t    this.names = [];\n\t    this.topDict = null;\n\t    this.strings = new CFFStrings();\n\t    this.globalSubrIndex = null;\n\t    this.encoding = null;\n\t    this.charset = null;\n\t    this.charStrings = null;\n\t    this.fdArray = [];\n\t    this.fdSelect = null;\n\t    this.isCIDFont = false;\n\t  }\n\t  return CFF;\n\t}();\n\tvar CFFHeader = function CFFHeaderClosure() {\n\t  function CFFHeader(major, minor, hdrSize, offSize) {\n\t    this.major = major;\n\t    this.minor = minor;\n\t    this.hdrSize = hdrSize;\n\t    this.offSize = offSize;\n\t  }\n\t  return CFFHeader;\n\t}();\n\tvar CFFStrings = function CFFStringsClosure() {\n\t  function CFFStrings() {\n\t    this.strings = [];\n\t  }\n\t  CFFStrings.prototype = {\n\t    get: function CFFStrings_get(index) {\n\t      if (index >= 0 && index <= 390) {\n\t        return CFFStandardStrings[index];\n\t      }\n\t      if (index - 391 <= this.strings.length) {\n\t        return this.strings[index - 391];\n\t      }\n\t      return CFFStandardStrings[0];\n\t    },\n\t    add: function CFFStrings_add(value) {\n\t      this.strings.push(value);\n\t    },\n\t    get count() {\n\t      return this.strings.length;\n\t    }\n\t  };\n\t  return CFFStrings;\n\t}();\n\tvar CFFIndex = function CFFIndexClosure() {\n\t  function CFFIndex() {\n\t    this.objects = [];\n\t    this.length = 0;\n\t  }\n\t  CFFIndex.prototype = {\n\t    add: function CFFIndex_add(data) {\n\t      this.length += data.length;\n\t      this.objects.push(data);\n\t    },\n\t    set: function CFFIndex_set(index, data) {\n\t      this.length += data.length - this.objects[index].length;\n\t      this.objects[index] = data;\n\t    },\n\t    get: function CFFIndex_get(index) {\n\t      return this.objects[index];\n\t    },\n\t    get count() {\n\t      return this.objects.length;\n\t    }\n\t  };\n\t  return CFFIndex;\n\t}();\n\tvar CFFDict = function CFFDictClosure() {\n\t  function CFFDict(tables, strings) {\n\t    this.keyToNameMap = tables.keyToNameMap;\n\t    this.nameToKeyMap = tables.nameToKeyMap;\n\t    this.defaults = tables.defaults;\n\t    this.types = tables.types;\n\t    this.opcodes = tables.opcodes;\n\t    this.order = tables.order;\n\t    this.strings = strings;\n\t    this.values = Object.create(null);\n\t  }\n\t  CFFDict.prototype = {\n\t    setByKey: function CFFDict_setByKey(key, value) {\n\t      if (!(key in this.keyToNameMap)) {\n\t        return false;\n\t      }\n\t      var valueLength = value.length;\n\t      if (valueLength === 0) {\n\t        return true;\n\t      }\n\t      for (var i = 0; i < valueLength; i++) {\n\t        if (isNaN(value[i])) {\n\t          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n\t          return true;\n\t        }\n\t      }\n\t      var type = this.types[key];\n\t      if (type === 'num' || type === 'sid' || type === 'offset') {\n\t        value = value[0];\n\t      }\n\t      this.values[key] = value;\n\t      return true;\n\t    },\n\t    setByName: function CFFDict_setByName(name, value) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n\t      }\n\t      this.values[this.nameToKeyMap[name]] = value;\n\t    },\n\t    hasName: function CFFDict_hasName(name) {\n\t      return this.nameToKeyMap[name] in this.values;\n\t    },\n\t    getByName: function CFFDict_getByName(name) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n\t      }\n\t      var key = this.nameToKeyMap[name];\n\t      if (!(key in this.values)) {\n\t        return this.defaults[key];\n\t      }\n\t      return this.values[key];\n\t    },\n\t    removeByName: function CFFDict_removeByName(name) {\n\t      delete this.values[this.nameToKeyMap[name]];\n\t    }\n\t  };\n\t  CFFDict.createTables = function CFFDict_createTables(layout) {\n\t    var tables = {\n\t      keyToNameMap: {},\n\t      nameToKeyMap: {},\n\t      defaults: {},\n\t      types: {},\n\t      opcodes: {},\n\t      order: []\n\t    };\n\t    for (var i = 0, ii = layout.length; i < ii; ++i) {\n\t      var entry = layout[i];\n\t      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n\t      tables.keyToNameMap[key] = entry[1];\n\t      tables.nameToKeyMap[entry[1]] = key;\n\t      tables.types[key] = entry[2];\n\t      tables.defaults[key] = entry[3];\n\t      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n\t      tables.order.push(key);\n\t    }\n\t    return tables;\n\t  };\n\t  return CFFDict;\n\t}();\n\tvar CFFTopDict = function CFFTopDictClosure() {\n\t  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n\t  var tables = null;\n\t  function CFFTopDict(strings) {\n\t    if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t    }\n\t    CFFDict.call(this, tables, strings);\n\t    this.privateDict = null;\n\t  }\n\t  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n\t  return CFFTopDict;\n\t}();\n\tvar CFFPrivateDict = function CFFPrivateDictClosure() {\n\t  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n\t  var tables = null;\n\t  function CFFPrivateDict(strings) {\n\t    if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t    }\n\t    CFFDict.call(this, tables, strings);\n\t    this.subrsIndex = null;\n\t  }\n\t  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n\t  return CFFPrivateDict;\n\t}();\n\tvar CFFCharsetPredefinedTypes = {\n\t  ISO_ADOBE: 0,\n\t  EXPERT: 1,\n\t  EXPERT_SUBSET: 2\n\t};\n\tvar CFFCharset = function CFFCharsetClosure() {\n\t  function CFFCharset(predefined, format, charset, raw) {\n\t    this.predefined = predefined;\n\t    this.format = format;\n\t    this.charset = charset;\n\t    this.raw = raw;\n\t  }\n\t  return CFFCharset;\n\t}();\n\tvar CFFEncoding = function CFFEncodingClosure() {\n\t  function CFFEncoding(predefined, format, encoding, raw) {\n\t    this.predefined = predefined;\n\t    this.format = format;\n\t    this.encoding = encoding;\n\t    this.raw = raw;\n\t  }\n\t  return CFFEncoding;\n\t}();\n\tvar CFFFDSelect = function CFFFDSelectClosure() {\n\t  function CFFFDSelect(fdSelect, raw) {\n\t    this.fdSelect = fdSelect;\n\t    this.raw = raw;\n\t  }\n\t  CFFFDSelect.prototype = {\n\t    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n\t      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n\t        return -1;\n\t      }\n\t      return this.fdSelect[glyphIndex];\n\t    }\n\t  };\n\t  return CFFFDSelect;\n\t}();\n\tvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n\t  function CFFOffsetTracker() {\n\t    this.offsets = Object.create(null);\n\t  }\n\t  CFFOffsetTracker.prototype = {\n\t    isTracking: function CFFOffsetTracker_isTracking(key) {\n\t      return key in this.offsets;\n\t    },\n\t    track: function CFFOffsetTracker_track(key, location) {\n\t      if (key in this.offsets) {\n\t        throw new _util.FormatError('Already tracking location of ' + key);\n\t      }\n\t      this.offsets[key] = location;\n\t    },\n\t    offset: function CFFOffsetTracker_offset(value) {\n\t      for (var key in this.offsets) {\n\t        this.offsets[key] += value;\n\t      }\n\t    },\n\t    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n\t      if (!(key in this.offsets)) {\n\t        throw new _util.FormatError('Not tracking location of ' + key);\n\t      }\n\t      var data = output.data;\n\t      var dataOffset = this.offsets[key];\n\t      var size = 5;\n\t      for (var i = 0, ii = values.length; i < ii; ++i) {\n\t        var offset0 = i * size + dataOffset;\n\t        var offset1 = offset0 + 1;\n\t        var offset2 = offset0 + 2;\n\t        var offset3 = offset0 + 3;\n\t        var offset4 = offset0 + 4;\n\t        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n\t          throw new _util.FormatError('writing to an offset that is not empty');\n\t        }\n\t        var value = values[i];\n\t        data[offset0] = 0x1d;\n\t        data[offset1] = value >> 24 & 0xFF;\n\t        data[offset2] = value >> 16 & 0xFF;\n\t        data[offset3] = value >> 8 & 0xFF;\n\t        data[offset4] = value & 0xFF;\n\t      }\n\t    }\n\t  };\n\t  return CFFOffsetTracker;\n\t}();\n\tvar CFFCompiler = function CFFCompilerClosure() {\n\t  function CFFCompiler(cff) {\n\t    this.cff = cff;\n\t  }\n\t  CFFCompiler.prototype = {\n\t    compile: function CFFCompiler_compile() {\n\t      var cff = this.cff;\n\t      var output = {\n\t        data: [],\n\t        length: 0,\n\t        add: function CFFCompiler_add(data) {\n\t          this.data = this.data.concat(data);\n\t          this.length = this.data.length;\n\t        }\n\t      };\n\t      var header = this.compileHeader(cff.header);\n\t      output.add(header);\n\t      var nameIndex = this.compileNameIndex(cff.names);\n\t      output.add(nameIndex);\n\t      if (cff.isCIDFont) {\n\t        if (cff.topDict.hasName('FontMatrix')) {\n\t          var base = cff.topDict.getByName('FontMatrix');\n\t          cff.topDict.removeByName('FontMatrix');\n\t          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n\t            var subDict = cff.fdArray[i];\n\t            var matrix = base.slice(0);\n\t            if (subDict.hasName('FontMatrix')) {\n\t              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n\t            }\n\t            subDict.setByName('FontMatrix', matrix);\n\t          }\n\t        }\n\t      }\n\t      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n\t      output.add(compiled.output);\n\t      var topDictTracker = compiled.trackers[0];\n\t      var stringIndex = this.compileStringIndex(cff.strings.strings);\n\t      output.add(stringIndex);\n\t      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n\t      output.add(globalSubrIndex);\n\t      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n\t        if (cff.encoding.predefined) {\n\t          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n\t        } else {\n\t          var encoding = this.compileEncoding(cff.encoding);\n\t          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n\t          output.add(encoding);\n\t        }\n\t      }\n\t      if (cff.charset && cff.topDict.hasName('charset')) {\n\t        if (cff.charset.predefined) {\n\t          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n\t        } else {\n\t          var charset = this.compileCharset(cff.charset);\n\t          topDictTracker.setEntryLocation('charset', [output.length], output);\n\t          output.add(charset);\n\t        }\n\t      }\n\t      var charStrings = this.compileCharStrings(cff.charStrings);\n\t      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n\t      output.add(charStrings);\n\t      if (cff.isCIDFont) {\n\t        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n\t        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n\t        output.add(fdSelect);\n\t        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n\t        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n\t        output.add(compiled.output);\n\t        var fontDictTrackers = compiled.trackers;\n\t        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n\t      }\n\t      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n\t      output.add([0]);\n\t      return output.data;\n\t    },\n\t    encodeNumber: function CFFCompiler_encodeNumber(value) {\n\t      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n\t        return this.encodeInteger(value);\n\t      }\n\t      return this.encodeFloat(value);\n\t    },\n\t    encodeFloat: function CFFCompiler_encodeFloat(num) {\n\t      var value = num.toString();\n\t      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n\t      if (m) {\n\t        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n\t        value = (Math.round(num * epsilon) / epsilon).toString();\n\t      }\n\t      var nibbles = '';\n\t      var i, ii;\n\t      for (i = 0, ii = value.length; i < ii; ++i) {\n\t        var a = value[i];\n\t        if (a === 'e') {\n\t          nibbles += value[++i] === '-' ? 'c' : 'b';\n\t        } else if (a === '.') {\n\t          nibbles += 'a';\n\t        } else if (a === '-') {\n\t          nibbles += 'e';\n\t        } else {\n\t          nibbles += a;\n\t        }\n\t      }\n\t      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n\t      var out = [30];\n\t      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n\t        out.push(parseInt(nibbles.substr(i, 2), 16));\n\t      }\n\t      return out;\n\t    },\n\t    encodeInteger: function CFFCompiler_encodeInteger(value) {\n\t      var code;\n\t      if (value >= -107 && value <= 107) {\n\t        code = [value + 139];\n\t      } else if (value >= 108 && value <= 1131) {\n\t        value = value - 108;\n\t        code = [(value >> 8) + 247, value & 0xFF];\n\t      } else if (value >= -1131 && value <= -108) {\n\t        value = -value - 108;\n\t        code = [(value >> 8) + 251, value & 0xFF];\n\t      } else if (value >= -32768 && value <= 32767) {\n\t        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n\t      } else {\n\t        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n\t      }\n\t      return code;\n\t    },\n\t    compileHeader: function CFFCompiler_compileHeader(header) {\n\t      return [header.major, header.minor, header.hdrSize, header.offSize];\n\t    },\n\t    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n\t      var nameIndex = new CFFIndex();\n\t      for (var i = 0, ii = names.length; i < ii; ++i) {\n\t        var name = names[i];\n\t        var length = Math.min(name.length, 127);\n\t        var sanitizedName = new Array(length);\n\t        for (var j = 0; j < length; j++) {\n\t          var char = name[j];\n\t          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n\t            char = '_';\n\t          }\n\t          sanitizedName[j] = char;\n\t        }\n\t        sanitizedName = sanitizedName.join('');\n\t        if (sanitizedName === '') {\n\t          sanitizedName = 'Bad_Font_Name';\n\t        }\n\t        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n\t      }\n\t      return this.compileIndex(nameIndex);\n\t    },\n\t    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n\t      var fontDictTrackers = [];\n\t      var fdArrayIndex = new CFFIndex();\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t        var fontDict = dicts[i];\n\t        if (removeCidKeys) {\n\t          fontDict.removeByName('CIDFontVersion');\n\t          fontDict.removeByName('CIDFontRevision');\n\t          fontDict.removeByName('CIDFontType');\n\t          fontDict.removeByName('CIDCount');\n\t          fontDict.removeByName('UIDBase');\n\t        }\n\t        var fontDictTracker = new CFFOffsetTracker();\n\t        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n\t        fontDictTrackers.push(fontDictTracker);\n\t        fdArrayIndex.add(fontDictData);\n\t        fontDictTracker.offset(length);\n\t      }\n\t      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n\t      return {\n\t        trackers: fontDictTrackers,\n\t        output: fdArrayIndex\n\t      };\n\t    },\n\t    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t        var fontDict = dicts[i];\n\t        var privateDict = fontDict.privateDict;\n\t        if (!privateDict || !fontDict.hasName('Private')) {\n\t          throw new _util.FormatError('There must be a private dictionary.');\n\t        }\n\t        var privateDictTracker = new CFFOffsetTracker();\n\t        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n\t        var outputLength = output.length;\n\t        privateDictTracker.offset(outputLength);\n\t        if (!privateDictData.length) {\n\t          outputLength = 0;\n\t        }\n\t        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n\t        output.add(privateDictData);\n\t        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n\t          var subrs = this.compileIndex(privateDict.subrsIndex);\n\t          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n\t          output.add(subrs);\n\t        }\n\t      }\n\t    },\n\t    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n\t      var out = [];\n\t      var order = dict.order;\n\t      for (var i = 0; i < order.length; ++i) {\n\t        var key = order[i];\n\t        if (!(key in dict.values)) {\n\t          continue;\n\t        }\n\t        var values = dict.values[key];\n\t        var types = dict.types[key];\n\t        if (!Array.isArray(types)) {\n\t          types = [types];\n\t        }\n\t        if (!Array.isArray(values)) {\n\t          values = [values];\n\t        }\n\t        if (values.length === 0) {\n\t          continue;\n\t        }\n\t        for (var j = 0, jj = types.length; j < jj; ++j) {\n\t          var type = types[j];\n\t          var value = values[j];\n\t          switch (type) {\n\t            case 'num':\n\t            case 'sid':\n\t              out = out.concat(this.encodeNumber(value));\n\t              break;\n\t            case 'offset':\n\t              var name = dict.keyToNameMap[key];\n\t              if (!offsetTracker.isTracking(name)) {\n\t                offsetTracker.track(name, out.length);\n\t              }\n\t              out = out.concat([0x1d, 0, 0, 0, 0]);\n\t              break;\n\t            case 'array':\n\t            case 'delta':\n\t              out = out.concat(this.encodeNumber(value));\n\t              for (var k = 1, kk = values.length; k < kk; ++k) {\n\t                out = out.concat(this.encodeNumber(values[k]));\n\t              }\n\t              break;\n\t            default:\n\t              throw new _util.FormatError('Unknown data type of ' + type);\n\t          }\n\t        }\n\t        out = out.concat(dict.opcodes[key]);\n\t      }\n\t      return out;\n\t    },\n\t    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n\t      var stringIndex = new CFFIndex();\n\t      for (var i = 0, ii = strings.length; i < ii; ++i) {\n\t        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n\t      }\n\t      return this.compileIndex(stringIndex);\n\t    },\n\t    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n\t      var globalSubrIndex = this.cff.globalSubrIndex;\n\t      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n\t    },\n\t    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n\t      return this.compileIndex(charStrings);\n\t    },\n\t    compileCharset: function CFFCompiler_compileCharset(charset) {\n\t      return this.compileTypedArray(charset.raw);\n\t    },\n\t    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n\t      return this.compileTypedArray(encoding.raw);\n\t    },\n\t    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n\t      return this.compileTypedArray(fdSelect);\n\t    },\n\t    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n\t      var out = [];\n\t      for (var i = 0, ii = data.length; i < ii; ++i) {\n\t        out[i] = data[i];\n\t      }\n\t      return out;\n\t    },\n\t    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n\t      trackers = trackers || [];\n\t      var objects = index.objects;\n\t      var count = objects.length;\n\t      if (count === 0) {\n\t        return [0, 0, 0];\n\t      }\n\t      var data = [count >> 8 & 0xFF, count & 0xff];\n\t      var lastOffset = 1,\n\t          i;\n\t      for (i = 0; i < count; ++i) {\n\t        lastOffset += objects[i].length;\n\t      }\n\t      var offsetSize;\n\t      if (lastOffset < 0x100) {\n\t        offsetSize = 1;\n\t      } else if (lastOffset < 0x10000) {\n\t        offsetSize = 2;\n\t      } else if (lastOffset < 0x1000000) {\n\t        offsetSize = 3;\n\t      } else {\n\t        offsetSize = 4;\n\t      }\n\t      data.push(offsetSize);\n\t      var relativeOffset = 1;\n\t      for (i = 0; i < count + 1; i++) {\n\t        if (offsetSize === 1) {\n\t          data.push(relativeOffset & 0xFF);\n\t        } else if (offsetSize === 2) {\n\t          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        } else if (offsetSize === 3) {\n\t          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        } else {\n\t          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        }\n\t        if (objects[i]) {\n\t          relativeOffset += objects[i].length;\n\t        }\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t        if (trackers[i]) {\n\t          trackers[i].offset(data.length);\n\t        }\n\t        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n\t          data.push(objects[i][j]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t  };\n\t  return CFFCompiler;\n\t}();\n\texports.CFFStandardStrings = CFFStandardStrings;\n\texports.CFFParser = CFFParser;\n\texports.CFF = CFF;\n\texports.CFFHeader = CFFHeader;\n\texports.CFFStrings = CFFStrings;\n\texports.CFFIndex = CFFIndex;\n\texports.CFFCharset = CFFCharset;\n\texports.CFFTopDict = CFFTopDict;\n\texports.CFFPrivateDict = CFFPrivateDict;\n\texports.CFFCompiler = CFFCompiler;\n\n/***/ },\n\n/***/ 404:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar ChunkedStream = function ChunkedStreamClosure() {\n\t  function ChunkedStream(length, chunkSize, manager) {\n\t    this.bytes = new Uint8Array(length);\n\t    this.start = 0;\n\t    this.pos = 0;\n\t    this.end = length;\n\t    this.chunkSize = chunkSize;\n\t    this.loadedChunks = [];\n\t    this.numChunksLoaded = 0;\n\t    this.numChunks = Math.ceil(length / chunkSize);\n\t    this.manager = manager;\n\t    this.progressiveDataLength = 0;\n\t    this.lastSuccessfulEnsureByteChunk = -1;\n\t  }\n\t  ChunkedStream.prototype = {\n\t    getMissingChunks: function ChunkedStream_getMissingChunks() {\n\t      var chunks = [];\n\t      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t          chunks.push(chunk);\n\t        }\n\t      }\n\t      return chunks;\n\t    },\n\t    getBaseStreams: function ChunkedStream_getBaseStreams() {\n\t      return [this];\n\t    },\n\t    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n\t      return this.numChunksLoaded === this.numChunks;\n\t    },\n\t    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n\t      var end = begin + chunk.byteLength;\n\t      if (begin % this.chunkSize !== 0) {\n\t        throw new Error('Bad begin offset: ' + begin);\n\t      }\n\t      var length = this.bytes.length;\n\t      if (end % this.chunkSize !== 0 && end !== length) {\n\t        throw new Error('Bad end offset: ' + end);\n\t      }\n\t      this.bytes.set(new Uint8Array(chunk), begin);\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t        if (!this.loadedChunks[curChunk]) {\n\t          this.loadedChunks[curChunk] = true;\n\t          ++this.numChunksLoaded;\n\t        }\n\t      }\n\t    },\n\t    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n\t      var position = this.progressiveDataLength;\n\t      var beginChunk = Math.floor(position / this.chunkSize);\n\t      this.bytes.set(new Uint8Array(data), position);\n\t      position += data.byteLength;\n\t      this.progressiveDataLength = position;\n\t      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t        if (!this.loadedChunks[curChunk]) {\n\t          this.loadedChunks[curChunk] = true;\n\t          ++this.numChunksLoaded;\n\t        }\n\t      }\n\t    },\n\t    ensureByte: function ChunkedStream_ensureByte(pos) {\n\t      var chunk = Math.floor(pos / this.chunkSize);\n\t      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n\t        return;\n\t      }\n\t      if (!this.loadedChunks[chunk]) {\n\t        throw new _util.MissingDataException(pos, pos + 1);\n\t      }\n\t      this.lastSuccessfulEnsureByteChunk = chunk;\n\t    },\n\t    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n\t      if (begin >= end) {\n\t        return;\n\t      }\n\t      if (end <= this.progressiveDataLength) {\n\t        return;\n\t      }\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t          throw new _util.MissingDataException(begin, end);\n\t        }\n\t      }\n\t    },\n\t    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n\t      var chunk,\n\t          numChunks = this.numChunks;\n\t      for (var i = 0; i < numChunks; ++i) {\n\t        chunk = (beginChunk + i) % numChunks;\n\t        if (!this.loadedChunks[chunk]) {\n\t          return chunk;\n\t        }\n\t      }\n\t      return null;\n\t    },\n\t    hasChunk: function ChunkedStream_hasChunk(chunk) {\n\t      return !!this.loadedChunks[chunk];\n\t    },\n\t    get length() {\n\t      return this.end - this.start;\n\t    },\n\t    get isEmpty() {\n\t      return this.length === 0;\n\t    },\n\t    getByte: function ChunkedStream_getByte() {\n\t      var pos = this.pos;\n\t      if (pos >= this.end) {\n\t        return -1;\n\t      }\n\t      this.ensureByte(pos);\n\t      return this.bytes[this.pos++];\n\t    },\n\t    getUint16: function ChunkedStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function ChunkedStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function ChunkedStream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t        this.ensureRange(pos, strEnd);\n\t        return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t        end = strEnd;\n\t      }\n\t      this.ensureRange(pos, end);\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t    },\n\t    peekByte: function ChunkedStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function ChunkedStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    getByteRange: function ChunkedStream_getBytes(begin, end) {\n\t      this.ensureRange(begin, end);\n\t      return this.bytes.subarray(begin, end);\n\t    },\n\t    skip: function ChunkedStream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function ChunkedStream_reset() {\n\t      this.pos = this.start;\n\t    },\n\t    moveStart: function ChunkedStream_moveStart() {\n\t      this.start = this.pos;\n\t    },\n\t    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n\t      this.ensureRange(start, start + length);\n\t      function ChunkedStreamSubstream() {}\n\t      ChunkedStreamSubstream.prototype = Object.create(this);\n\t      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n\t        var chunkSize = this.chunkSize;\n\t        var beginChunk = Math.floor(this.start / chunkSize);\n\t        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n\t        var missingChunks = [];\n\t        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t          if (!this.loadedChunks[chunk]) {\n\t            missingChunks.push(chunk);\n\t          }\n\t        }\n\t        return missingChunks;\n\t      };\n\t      var subStream = new ChunkedStreamSubstream();\n\t      subStream.pos = subStream.start = start;\n\t      subStream.end = start + length || this.end;\n\t      subStream.dict = dict;\n\t      return subStream;\n\t    }\n\t  };\n\t  return ChunkedStream;\n\t}();\n\tvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n\t  function ChunkedStreamManager(pdfNetworkStream, args) {\n\t    var chunkSize = args.rangeChunkSize;\n\t    var length = args.length;\n\t    this.stream = new ChunkedStream(length, chunkSize, this);\n\t    this.length = length;\n\t    this.chunkSize = chunkSize;\n\t    this.pdfNetworkStream = pdfNetworkStream;\n\t    this.url = args.url;\n\t    this.disableAutoFetch = args.disableAutoFetch;\n\t    this.msgHandler = args.msgHandler;\n\t    this.currRequestId = 0;\n\t    this.chunksNeededByRequest = Object.create(null);\n\t    this.requestsByChunk = Object.create(null);\n\t    this.promisesByRequest = Object.create(null);\n\t    this.progressiveDataLength = 0;\n\t    this.aborted = false;\n\t    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n\t  }\n\t  ChunkedStreamManager.prototype = {\n\t    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n\t      var _this = this;\n\t\n\t      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n\t      if (!rangeReader.isStreamingSupported) {\n\t        rangeReader.onProgress = this.onProgress.bind(this);\n\t      }\n\t      var chunks = [],\n\t          loaded = 0;\n\t      var manager = this;\n\t      var promise = new Promise(function (resolve, reject) {\n\t        var readChunk = function readChunk(chunk) {\n\t          try {\n\t            if (!chunk.done) {\n\t              var data = chunk.value;\n\t              chunks.push(data);\n\t              loaded += (0, _util.arrayByteLength)(data);\n\t              if (rangeReader.isStreamingSupported) {\n\t                manager.onProgress({ loaded: loaded });\n\t              }\n\t              rangeReader.read().then(readChunk, reject);\n\t              return;\n\t            }\n\t            var chunkData = (0, _util.arraysToBytes)(chunks);\n\t            chunks = null;\n\t            resolve(chunkData);\n\t          } catch (e) {\n\t            reject(e);\n\t          }\n\t        };\n\t        rangeReader.read().then(readChunk, reject);\n\t      });\n\t      promise.then(function (data) {\n\t        if (_this.aborted) {\n\t          return;\n\t        }\n\t        _this.onReceiveData({\n\t          chunk: data,\n\t          begin: begin\n\t        });\n\t      });\n\t    },\n\t    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n\t      var missingChunks = this.stream.getMissingChunks();\n\t      this._requestChunks(missingChunks);\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n\t      var requestId = this.currRequestId++;\n\t      var i, ii;\n\t      var chunksNeeded = Object.create(null);\n\t      this.chunksNeededByRequest[requestId] = chunksNeeded;\n\t      for (i = 0, ii = chunks.length; i < ii; i++) {\n\t        if (!this.stream.hasChunk(chunks[i])) {\n\t          chunksNeeded[chunks[i]] = true;\n\t        }\n\t      }\n\t      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n\t        return Promise.resolve();\n\t      }\n\t      var capability = (0, _util.createPromiseCapability)();\n\t      this.promisesByRequest[requestId] = capability;\n\t      var chunksToRequest = [];\n\t      for (var chunk in chunksNeeded) {\n\t        chunk = chunk | 0;\n\t        if (!(chunk in this.requestsByChunk)) {\n\t          this.requestsByChunk[chunk] = [];\n\t          chunksToRequest.push(chunk);\n\t        }\n\t        this.requestsByChunk[chunk].push(requestId);\n\t      }\n\t      if (!chunksToRequest.length) {\n\t        return capability.promise;\n\t      }\n\t      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\t      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n\t        var groupedChunk = groupedChunksToRequest[i];\n\t        var begin = groupedChunk.beginChunk * this.chunkSize;\n\t        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n\t        this.sendRequest(begin, end);\n\t      }\n\t      return capability.promise;\n\t    },\n\t    getStream: function ChunkedStreamManager_getStream() {\n\t      return this.stream;\n\t    },\n\t    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n\t      end = Math.min(end, this.length);\n\t      var beginChunk = this.getBeginChunk(begin);\n\t      var endChunk = this.getEndChunk(end);\n\t      var chunks = [];\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        chunks.push(chunk);\n\t      }\n\t      return this._requestChunks(chunks);\n\t    },\n\t    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n\t      ranges = ranges || [];\n\t      var chunksToRequest = [];\n\t      for (var i = 0; i < ranges.length; i++) {\n\t        var beginChunk = this.getBeginChunk(ranges[i].begin);\n\t        var endChunk = this.getEndChunk(ranges[i].end);\n\t        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t          if (chunksToRequest.indexOf(chunk) < 0) {\n\t            chunksToRequest.push(chunk);\n\t          }\n\t        }\n\t      }\n\t      chunksToRequest.sort(function (a, b) {\n\t        return a - b;\n\t      });\n\t      return this._requestChunks(chunksToRequest);\n\t    },\n\t    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n\t      var groupedChunks = [];\n\t      var beginChunk = -1;\n\t      var prevChunk = -1;\n\t      for (var i = 0; i < chunks.length; ++i) {\n\t        var chunk = chunks[i];\n\t        if (beginChunk < 0) {\n\t          beginChunk = chunk;\n\t        }\n\t        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n\t          groupedChunks.push({\n\t            beginChunk: beginChunk,\n\t            endChunk: prevChunk + 1\n\t          });\n\t          beginChunk = chunk;\n\t        }\n\t        if (i + 1 === chunks.length) {\n\t          groupedChunks.push({\n\t            beginChunk: beginChunk,\n\t            endChunk: chunk + 1\n\t          });\n\t        }\n\t        prevChunk = chunk;\n\t      }\n\t      return groupedChunks;\n\t    },\n\t    onProgress: function ChunkedStreamManager_onProgress(args) {\n\t      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n\t      this.msgHandler.send('DocProgress', {\n\t        loaded: bytesLoaded,\n\t        total: this.length\n\t      });\n\t    },\n\t    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n\t      var chunk = args.chunk;\n\t      var isProgressive = args.begin === undefined;\n\t      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n\t      var end = begin + chunk.byteLength;\n\t      var beginChunk = Math.floor(begin / this.chunkSize);\n\t      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n\t      if (isProgressive) {\n\t        this.stream.onReceiveProgressiveData(chunk);\n\t        this.progressiveDataLength = end;\n\t      } else {\n\t        this.stream.onReceiveData(begin, chunk);\n\t      }\n\t      if (this.stream.allChunksLoaded()) {\n\t        this._loadedStreamCapability.resolve(this.stream);\n\t      }\n\t      var loadedRequests = [];\n\t      var i, requestId;\n\t      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        var requestIds = this.requestsByChunk[chunk] || [];\n\t        delete this.requestsByChunk[chunk];\n\t        for (i = 0; i < requestIds.length; ++i) {\n\t          requestId = requestIds[i];\n\t          var chunksNeeded = this.chunksNeededByRequest[requestId];\n\t          if (chunk in chunksNeeded) {\n\t            delete chunksNeeded[chunk];\n\t          }\n\t          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n\t            continue;\n\t          }\n\t          loadedRequests.push(requestId);\n\t        }\n\t      }\n\t      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n\t        var nextEmptyChunk;\n\t        if (this.stream.numChunksLoaded === 1) {\n\t          var lastChunk = this.stream.numChunks - 1;\n\t          if (!this.stream.hasChunk(lastChunk)) {\n\t            nextEmptyChunk = lastChunk;\n\t          }\n\t        } else {\n\t          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n\t        }\n\t        if (Number.isInteger(nextEmptyChunk)) {\n\t          this._requestChunks([nextEmptyChunk]);\n\t        }\n\t      }\n\t      for (i = 0; i < loadedRequests.length; ++i) {\n\t        requestId = loadedRequests[i];\n\t        var capability = this.promisesByRequest[requestId];\n\t        delete this.promisesByRequest[requestId];\n\t        capability.resolve();\n\t      }\n\t      this.msgHandler.send('DocProgress', {\n\t        loaded: this.stream.numChunksLoaded * this.chunkSize,\n\t        total: this.length\n\t      });\n\t    },\n\t    onError: function ChunkedStreamManager_onError(err) {\n\t      this._loadedStreamCapability.reject(err);\n\t    },\n\t    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n\t      var chunk = Math.floor(begin / this.chunkSize);\n\t      return chunk;\n\t    },\n\t    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n\t      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n\t      return chunk;\n\t    },\n\t    abort: function ChunkedStreamManager_abort() {\n\t      this.aborted = true;\n\t      if (this.pdfNetworkStream) {\n\t        this.pdfNetworkStream.cancelAllRequests('abort');\n\t      }\n\t      for (var requestId in this.promisesByRequest) {\n\t        var capability = this.promisesByRequest[requestId];\n\t        capability.reject(new Error('Request was aborted'));\n\t      }\n\t    }\n\t  };\n\t  return ChunkedStreamManager;\n\t}();\n\texports.ChunkedStream = ChunkedStream;\n\texports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ },\n\n/***/ 405:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar ARCFourCipher = function ARCFourCipherClosure() {\n\t  function ARCFourCipher(key) {\n\t    this.a = 0;\n\t    this.b = 0;\n\t    var s = new Uint8Array(256);\n\t    var i,\n\t        j = 0,\n\t        tmp,\n\t        keyLength = key.length;\n\t    for (i = 0; i < 256; ++i) {\n\t      s[i] = i;\n\t    }\n\t    for (i = 0; i < 256; ++i) {\n\t      tmp = s[i];\n\t      j = j + tmp + key[i % keyLength] & 0xFF;\n\t      s[i] = s[j];\n\t      s[j] = tmp;\n\t    }\n\t    this.s = s;\n\t  }\n\t  ARCFourCipher.prototype = {\n\t    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n\t      var i,\n\t          n = data.length,\n\t          tmp,\n\t          tmp2;\n\t      var a = this.a,\n\t          b = this.b,\n\t          s = this.s;\n\t      var output = new Uint8Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        a = a + 1 & 0xFF;\n\t        tmp = s[a];\n\t        b = b + tmp & 0xFF;\n\t        tmp2 = s[b];\n\t        s[a] = tmp2;\n\t        s[b] = tmp;\n\t        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n\t      }\n\t      this.a = a;\n\t      this.b = b;\n\t      return output;\n\t    }\n\t  };\n\t  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n\t  return ARCFourCipher;\n\t}();\n\tvar calculateMD5 = function calculateMD5Closure() {\n\t  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n\t  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n\t  function hash(data, offset, length) {\n\t    var h0 = 1732584193,\n\t        h1 = -271733879,\n\t        h2 = -1732584194,\n\t        h3 = 271733878;\n\t    var paddedLength = length + 72 & ~63;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 8;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = length << 3 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    var w = new Int32Array(16);\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j, i += 4) {\n\t        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n\t      }\n\t      var a = h0,\n\t          b = h1,\n\t          c = h2,\n\t          d = h3,\n\t          f,\n\t          g;\n\t      for (j = 0; j < 64; ++j) {\n\t        if (j < 16) {\n\t          f = b & c | ~b & d;\n\t          g = j;\n\t        } else if (j < 32) {\n\t          f = d & b | ~d & c;\n\t          g = 5 * j + 1 & 15;\n\t        } else if (j < 48) {\n\t          f = b ^ c ^ d;\n\t          g = 3 * j + 5 & 15;\n\t        } else {\n\t          f = c ^ (b | ~d);\n\t          g = 7 * j & 15;\n\t        }\n\t        var tmp = d,\n\t            rotateArg = a + f + k[j] + w[g] | 0,\n\t            rotate = r[j];\n\t        d = c;\n\t        c = b;\n\t        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n\t        a = tmp;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t    }\n\t    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n\t  }\n\t  return hash;\n\t}();\n\tvar Word64 = function Word64Closure() {\n\t  function Word64(highInteger, lowInteger) {\n\t    this.high = highInteger | 0;\n\t    this.low = lowInteger | 0;\n\t  }\n\t  Word64.prototype = {\n\t    and: function Word64_and(word) {\n\t      this.high &= word.high;\n\t      this.low &= word.low;\n\t    },\n\t    xor: function Word64_xor(word) {\n\t      this.high ^= word.high;\n\t      this.low ^= word.low;\n\t    },\n\t    or: function Word64_or(word) {\n\t      this.high |= word.high;\n\t      this.low |= word.low;\n\t    },\n\t    shiftRight: function Word64_shiftRight(places) {\n\t      if (places >= 32) {\n\t        this.low = this.high >>> places - 32 | 0;\n\t        this.high = 0;\n\t      } else {\n\t        this.low = this.low >>> places | this.high << 32 - places;\n\t        this.high = this.high >>> places | 0;\n\t      }\n\t    },\n\t    shiftLeft: function Word64_shiftLeft(places) {\n\t      if (places >= 32) {\n\t        this.high = this.low << places - 32;\n\t        this.low = 0;\n\t      } else {\n\t        this.high = this.high << places | this.low >>> 32 - places;\n\t        this.low = this.low << places;\n\t      }\n\t    },\n\t    rotateRight: function Word64_rotateRight(places) {\n\t      var low, high;\n\t      if (places & 32) {\n\t        high = this.low;\n\t        low = this.high;\n\t      } else {\n\t        low = this.low;\n\t        high = this.high;\n\t      }\n\t      places &= 31;\n\t      this.low = low >>> places | high << 32 - places;\n\t      this.high = high >>> places | low << 32 - places;\n\t    },\n\t    not: function Word64_not() {\n\t      this.high = ~this.high;\n\t      this.low = ~this.low;\n\t    },\n\t    add: function Word64_add(word) {\n\t      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n\t      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n\t      if (lowAdd > 0xFFFFFFFF) {\n\t        highAdd += 1;\n\t      }\n\t      this.low = lowAdd | 0;\n\t      this.high = highAdd | 0;\n\t    },\n\t    copyTo: function Word64_copyTo(bytes, offset) {\n\t      bytes[offset] = this.high >>> 24 & 0xFF;\n\t      bytes[offset + 1] = this.high >> 16 & 0xFF;\n\t      bytes[offset + 2] = this.high >> 8 & 0xFF;\n\t      bytes[offset + 3] = this.high & 0xFF;\n\t      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n\t      bytes[offset + 5] = this.low >> 16 & 0xFF;\n\t      bytes[offset + 6] = this.low >> 8 & 0xFF;\n\t      bytes[offset + 7] = this.low & 0xFF;\n\t    },\n\t    assign: function Word64_assign(word) {\n\t      this.high = word.high;\n\t      this.low = word.low;\n\t    }\n\t  };\n\t  return Word64;\n\t}();\n\tvar calculateSHA256 = function calculateSHA256Closure() {\n\t  function rotr(x, n) {\n\t    return x >>> n | x << 32 - n;\n\t  }\n\t  function ch(x, y, z) {\n\t    return x & y ^ ~x & z;\n\t  }\n\t  function maj(x, y, z) {\n\t    return x & y ^ x & z ^ y & z;\n\t  }\n\t  function sigma(x) {\n\t    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n\t  }\n\t  function sigmaPrime(x) {\n\t    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n\t  }\n\t  function littleSigma(x) {\n\t    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n\t  }\n\t  function littleSigmaPrime(x) {\n\t    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n\t  }\n\t  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\t  function hash(data, offset, length) {\n\t    var h0 = 0x6a09e667,\n\t        h1 = 0xbb67ae85,\n\t        h2 = 0x3c6ef372,\n\t        h3 = 0xa54ff53a,\n\t        h4 = 0x510e527f,\n\t        h5 = 0x9b05688c,\n\t        h6 = 0x1f83d9ab,\n\t        h7 = 0x5be0cd19;\n\t    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 8;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length << 3 & 0xFF;\n\t    var w = new Uint32Array(64);\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t        i += 4;\n\t      }\n\t      for (j = 16; j < 64; ++j) {\n\t        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n\t      }\n\t      var a = h0,\n\t          b = h1,\n\t          c = h2,\n\t          d = h3,\n\t          e = h4,\n\t          f = h5,\n\t          g = h6,\n\t          h = h7,\n\t          t1,\n\t          t2;\n\t      for (j = 0; j < 64; ++j) {\n\t        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n\t        t2 = sigma(a) + maj(a, b, c);\n\t        h = g;\n\t        g = f;\n\t        f = e;\n\t        e = d + t1 | 0;\n\t        d = c;\n\t        c = b;\n\t        b = a;\n\t        a = t1 + t2 | 0;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t      h4 = h4 + e | 0;\n\t      h5 = h5 + f | 0;\n\t      h6 = h6 + g | 0;\n\t      h7 = h7 + h | 0;\n\t    }\n\t    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n\t  }\n\t  return hash;\n\t}();\n\tvar calculateSHA512 = function calculateSHA512Closure() {\n\t  function ch(result, x, y, z, tmp) {\n\t    result.assign(x);\n\t    result.and(y);\n\t    tmp.assign(x);\n\t    tmp.not();\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t  }\n\t  function maj(result, x, y, z, tmp) {\n\t    result.assign(x);\n\t    result.and(y);\n\t    tmp.assign(x);\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t    tmp.assign(y);\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t  }\n\t  function sigma(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(28);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(34);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(39);\n\t    result.xor(tmp);\n\t  }\n\t  function sigmaPrime(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(14);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(18);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(41);\n\t    result.xor(tmp);\n\t  }\n\t  function littleSigma(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(1);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(8);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.shiftRight(7);\n\t    result.xor(tmp);\n\t  }\n\t  function littleSigmaPrime(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(19);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(61);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.shiftRight(6);\n\t    result.xor(tmp);\n\t  }\n\t  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n\t  function hash(data, offset, length, mode384) {\n\t    mode384 = !!mode384;\n\t    var h0, h1, h2, h3, h4, h5, h6, h7;\n\t    if (!mode384) {\n\t      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n\t      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n\t      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n\t      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n\t      h4 = new Word64(0x510e527f, 0xade682d1);\n\t      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n\t      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n\t      h7 = new Word64(0x5be0cd19, 0x137e2179);\n\t    } else {\n\t      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n\t      h1 = new Word64(0x629a292a, 0x367cd507);\n\t      h2 = new Word64(0x9159015a, 0x3070dd17);\n\t      h3 = new Word64(0x152fecd8, 0xf70e5939);\n\t      h4 = new Word64(0x67332667, 0xffc00b31);\n\t      h5 = new Word64(0x8eb44a87, 0x68581511);\n\t      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n\t      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n\t    }\n\t    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 16;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length << 3 & 0xFF;\n\t    var w = new Array(80);\n\t    for (i = 0; i < 80; i++) {\n\t      w[i] = new Word64(0, 0);\n\t    }\n\t    var a = new Word64(0, 0),\n\t        b = new Word64(0, 0),\n\t        c = new Word64(0, 0);\n\t    var d = new Word64(0, 0),\n\t        e = new Word64(0, 0),\n\t        f = new Word64(0, 0);\n\t    var g = new Word64(0, 0),\n\t        h = new Word64(0, 0);\n\t    var t1 = new Word64(0, 0),\n\t        t2 = new Word64(0, 0);\n\t    var tmp1 = new Word64(0, 0),\n\t        tmp2 = new Word64(0, 0),\n\t        tmp3;\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n\t        i += 8;\n\t      }\n\t      for (j = 16; j < 80; ++j) {\n\t        tmp3 = w[j];\n\t        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n\t        tmp3.add(w[j - 7]);\n\t        littleSigma(tmp1, w[j - 15], tmp2);\n\t        tmp3.add(tmp1);\n\t        tmp3.add(w[j - 16]);\n\t      }\n\t      a.assign(h0);\n\t      b.assign(h1);\n\t      c.assign(h2);\n\t      d.assign(h3);\n\t      e.assign(h4);\n\t      f.assign(h5);\n\t      g.assign(h6);\n\t      h.assign(h7);\n\t      for (j = 0; j < 80; ++j) {\n\t        t1.assign(h);\n\t        sigmaPrime(tmp1, e, tmp2);\n\t        t1.add(tmp1);\n\t        ch(tmp1, e, f, g, tmp2);\n\t        t1.add(tmp1);\n\t        t1.add(k[j]);\n\t        t1.add(w[j]);\n\t        sigma(t2, a, tmp2);\n\t        maj(tmp1, a, b, c, tmp2);\n\t        t2.add(tmp1);\n\t        tmp3 = h;\n\t        h = g;\n\t        g = f;\n\t        f = e;\n\t        d.add(t1);\n\t        e = d;\n\t        d = c;\n\t        c = b;\n\t        b = a;\n\t        tmp3.assign(t1);\n\t        tmp3.add(t2);\n\t        a = tmp3;\n\t      }\n\t      h0.add(a);\n\t      h1.add(b);\n\t      h2.add(c);\n\t      h3.add(d);\n\t      h4.add(e);\n\t      h5.add(f);\n\t      h6.add(g);\n\t      h7.add(h);\n\t    }\n\t    var result;\n\t    if (!mode384) {\n\t      result = new Uint8Array(64);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t      h6.copyTo(result, 48);\n\t      h7.copyTo(result, 56);\n\t    } else {\n\t      result = new Uint8Array(48);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t    }\n\t    return result;\n\t  }\n\t  return hash;\n\t}();\n\tvar calculateSHA384 = function calculateSHA384Closure() {\n\t  function hash(data, offset, length) {\n\t    return calculateSHA512(data, offset, length, true);\n\t  }\n\t  return hash;\n\t}();\n\tvar NullCipher = function NullCipherClosure() {\n\t  function NullCipher() {}\n\t  NullCipher.prototype = {\n\t    decryptBlock: function NullCipher_decryptBlock(data) {\n\t      return data;\n\t    }\n\t  };\n\t  return NullCipher;\n\t}();\n\tvar AES128Cipher = function AES128CipherClosure() {\n\t  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n\t  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n\t  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n\t  var mixCol = new Uint8Array(256);\n\t  for (var i = 0; i < 256; i++) {\n\t    if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t    } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t    }\n\t  }\n\t  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\t  function expandKey128(cipherKey) {\n\t    var b = 176,\n\t        result = new Uint8Array(b);\n\t    result.set(cipherKey);\n\t    for (var j = 16, i = 1; j < b; ++i) {\n\t      var t1 = result[j - 3],\n\t          t2 = result[j - 2],\n\t          t3 = result[j - 1],\n\t          t4 = result[j - 4];\n\t      t1 = s[t1];\n\t      t2 = s[t2];\n\t      t3 = s[t3];\n\t      t4 = s[t4];\n\t      t1 = t1 ^ rcon[i];\n\t      for (var n = 0; n < 4; ++n) {\n\t        result[j] = t1 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t2 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t3 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t4 ^= result[j - 16];\n\t        j++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function decrypt128(input, key) {\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    var i, j, k;\n\t    var t, u, v;\n\t    for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    for (i = 9; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = mix[state[j]],\n\t            s1 = mix[state[j + 1]],\n\t            s2 = mix[state[j + 2]],\n\t            s3 = mix[state[j + 3]];\n\t        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t        state[j] = t >>> 24 & 0xFF;\n\t        state[j + 1] = t >> 16 & 0xFF;\n\t        state[j + 2] = t >> 8 & 0xFF;\n\t        state[j + 3] = t & 0xFF;\n\t      }\n\t    }\n\t    t = state[13];\n\t    state[13] = state[9];\n\t    state[9] = state[5];\n\t    state[5] = state[1];\n\t    state[1] = t;\n\t    t = state[14];\n\t    u = state[10];\n\t    state[14] = state[6];\n\t    state[10] = state[2];\n\t    state[6] = t;\n\t    state[2] = u;\n\t    t = state[15];\n\t    u = state[11];\n\t    v = state[7];\n\t    state[15] = state[3];\n\t    state[11] = t;\n\t    state[7] = u;\n\t    state[3] = v;\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t    }\n\t    return state;\n\t  }\n\t  function encrypt128(input, key) {\n\t    var t, u, v, j, k;\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t    }\n\t    for (i = 1; i < 10; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = state[j + 0],\n\t            s1 = state[j + 1];\n\t        var s2 = state[j + 2],\n\t            s3 = state[j + 3];\n\t        t = s0 ^ s1 ^ s2 ^ s3;\n\t        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t    }\n\t    v = state[1];\n\t    state[1] = state[5];\n\t    state[5] = state[9];\n\t    state[9] = state[13];\n\t    state[13] = v;\n\t    v = state[2];\n\t    u = state[6];\n\t    state[2] = state[10];\n\t    state[6] = state[14];\n\t    state[10] = v;\n\t    state[14] = u;\n\t    v = state[3];\n\t    u = state[7];\n\t    t = state[11];\n\t    state[3] = state[15];\n\t    state[7] = v;\n\t    state[11] = u;\n\t    state[15] = t;\n\t    for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    return state;\n\t  }\n\t  function AES128Cipher(key) {\n\t    this.key = expandKey128(key);\n\t    this.buffer = new Uint8Array(16);\n\t    this.bufferPosition = 0;\n\t  }\n\t  function decryptBlock2(data, finalize) {\n\t    var i,\n\t        j,\n\t        ii,\n\t        sourceLength = data.length,\n\t        buffer = this.buffer,\n\t        bufferLength = this.bufferPosition,\n\t        result = [],\n\t        iv = this.iv;\n\t    for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t        continue;\n\t      }\n\t      var plain = decrypt128(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t        plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t    }\n\t    this.buffer = buffer;\n\t    this.bufferLength = bufferLength;\n\t    this.iv = iv;\n\t    if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t    }\n\t    var outputLength = 16 * result.length;\n\t    if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t          if (lastBlock[i] !== psLen) {\n\t            psLen = 0;\n\t            break;\n\t          }\n\t        }\n\t        outputLength -= psLen;\n\t        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t    }\n\t    var output = new Uint8Array(outputLength);\n\t    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t    }\n\t    return output;\n\t  }\n\t  AES128Cipher.prototype = {\n\t    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n\t      var i,\n\t          sourceLength = data.length;\n\t      var buffer = this.buffer,\n\t          bufferLength = this.bufferPosition;\n\t      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t        buffer[bufferLength] = data[i];\n\t      }\n\t      if (bufferLength < 16) {\n\t        this.bufferLength = bufferLength;\n\t        return new Uint8Array([]);\n\t      }\n\t      this.iv = buffer;\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data.subarray(16), finalize);\n\t    },\n\t    encrypt: function AES128Cipher_encrypt(data, iv) {\n\t      var i,\n\t          j,\n\t          ii,\n\t          sourceLength = data.length,\n\t          buffer = this.buffer,\n\t          bufferLength = this.bufferPosition,\n\t          result = [];\n\t      if (!iv) {\n\t        iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t        buffer[bufferLength] = data[i];\n\t        ++bufferLength;\n\t        if (bufferLength < 16) {\n\t          continue;\n\t        }\n\t        for (j = 0; j < 16; ++j) {\n\t          buffer[j] ^= iv[j];\n\t        }\n\t        var cipher = encrypt128(buffer, this.key);\n\t        iv = cipher;\n\t        result.push(cipher);\n\t        buffer = new Uint8Array(16);\n\t        bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t        return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t        output.set(result[i], j);\n\t      }\n\t      return output;\n\t    }\n\t  };\n\t  return AES128Cipher;\n\t}();\n\tvar AES256Cipher = function AES256CipherClosure() {\n\t  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n\t  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n\t  var mixCol = new Uint8Array(256);\n\t  for (var i = 0; i < 256; i++) {\n\t    if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t    } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t    }\n\t  }\n\t  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\t  function expandKey256(cipherKey) {\n\t    var b = 240,\n\t        result = new Uint8Array(b);\n\t    var r = 1;\n\t    result.set(cipherKey);\n\t    for (var j = 32, i = 1; j < b; ++i) {\n\t      var t1, t2, t3, t4;\n\t      if (j % 32 === 16) {\n\t        t1 = s[t1];\n\t        t2 = s[t2];\n\t        t3 = s[t3];\n\t        t4 = s[t4];\n\t      } else if (j % 32 === 0) {\n\t        t1 = result[j - 3];\n\t        t2 = result[j - 2];\n\t        t3 = result[j - 1];\n\t        t4 = result[j - 4];\n\t        t1 = s[t1];\n\t        t2 = s[t2];\n\t        t3 = s[t3];\n\t        t4 = s[t4];\n\t        t1 = t1 ^ r;\n\t        if ((r <<= 1) >= 256) {\n\t          r = (r ^ 0x1b) & 0xFF;\n\t        }\n\t      }\n\t      for (var n = 0; n < 4; ++n) {\n\t        result[j] = t1 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t2 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t3 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t4 ^= result[j - 32];\n\t        j++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function decrypt256(input, key) {\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    var i, j, k;\n\t    var t, u, v;\n\t    for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    for (i = 13; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = mix[state[j]],\n\t            s1 = mix[state[j + 1]],\n\t            s2 = mix[state[j + 2]],\n\t            s3 = mix[state[j + 3]];\n\t        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t        state[j] = t >>> 24 & 0xFF;\n\t        state[j + 1] = t >> 16 & 0xFF;\n\t        state[j + 2] = t >> 8 & 0xFF;\n\t        state[j + 3] = t & 0xFF;\n\t      }\n\t    }\n\t    t = state[13];\n\t    state[13] = state[9];\n\t    state[9] = state[5];\n\t    state[5] = state[1];\n\t    state[1] = t;\n\t    t = state[14];\n\t    u = state[10];\n\t    state[14] = state[6];\n\t    state[10] = state[2];\n\t    state[6] = t;\n\t    state[2] = u;\n\t    t = state[15];\n\t    u = state[11];\n\t    v = state[7];\n\t    state[15] = state[3];\n\t    state[11] = t;\n\t    state[7] = u;\n\t    state[3] = v;\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t    }\n\t    return state;\n\t  }\n\t  function encrypt256(input, key) {\n\t    var t, u, v, i, j, k;\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t    }\n\t    for (i = 1; i < 14; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = state[j + 0],\n\t            s1 = state[j + 1];\n\t        var s2 = state[j + 2],\n\t            s3 = state[j + 3];\n\t        t = s0 ^ s1 ^ s2 ^ s3;\n\t        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t    }\n\t    v = state[1];\n\t    state[1] = state[5];\n\t    state[5] = state[9];\n\t    state[9] = state[13];\n\t    state[13] = v;\n\t    v = state[2];\n\t    u = state[6];\n\t    state[2] = state[10];\n\t    state[6] = state[14];\n\t    state[10] = v;\n\t    state[14] = u;\n\t    v = state[3];\n\t    u = state[7];\n\t    t = state[11];\n\t    state[3] = state[15];\n\t    state[7] = v;\n\t    state[11] = u;\n\t    state[15] = t;\n\t    for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    return state;\n\t  }\n\t  function AES256Cipher(key) {\n\t    this.key = expandKey256(key);\n\t    this.buffer = new Uint8Array(16);\n\t    this.bufferPosition = 0;\n\t  }\n\t  function decryptBlock2(data, finalize) {\n\t    var i,\n\t        j,\n\t        ii,\n\t        sourceLength = data.length,\n\t        buffer = this.buffer,\n\t        bufferLength = this.bufferPosition,\n\t        result = [],\n\t        iv = this.iv;\n\t    for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t        continue;\n\t      }\n\t      var plain = decrypt256(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t        plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t    }\n\t    this.buffer = buffer;\n\t    this.bufferLength = bufferLength;\n\t    this.iv = iv;\n\t    if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t    }\n\t    var outputLength = 16 * result.length;\n\t    if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t          if (lastBlock[i] !== psLen) {\n\t            psLen = 0;\n\t            break;\n\t          }\n\t        }\n\t        outputLength -= psLen;\n\t        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t    }\n\t    var output = new Uint8Array(outputLength);\n\t    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t    }\n\t    return output;\n\t  }\n\t  AES256Cipher.prototype = {\n\t    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n\t      var i,\n\t          sourceLength = data.length;\n\t      var buffer = this.buffer,\n\t          bufferLength = this.bufferPosition;\n\t      if (iv) {\n\t        this.iv = iv;\n\t      } else {\n\t        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t          buffer[bufferLength] = data[i];\n\t        }\n\t        if (bufferLength < 16) {\n\t          this.bufferLength = bufferLength;\n\t          return new Uint8Array([]);\n\t        }\n\t        this.iv = buffer;\n\t        data = data.subarray(16);\n\t      }\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data, finalize);\n\t    },\n\t    encrypt: function AES256Cipher_encrypt(data, iv) {\n\t      var i,\n\t          j,\n\t          ii,\n\t          sourceLength = data.length,\n\t          buffer = this.buffer,\n\t          bufferLength = this.bufferPosition,\n\t          result = [];\n\t      if (!iv) {\n\t        iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t        buffer[bufferLength] = data[i];\n\t        ++bufferLength;\n\t        if (bufferLength < 16) {\n\t          continue;\n\t        }\n\t        for (j = 0; j < 16; ++j) {\n\t          buffer[j] ^= iv[j];\n\t        }\n\t        var cipher = encrypt256(buffer, this.key);\n\t        this.iv = cipher;\n\t        result.push(cipher);\n\t        buffer = new Uint8Array(16);\n\t        bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t        return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t        output.set(result[i], j);\n\t      }\n\t      return output;\n\t    }\n\t  };\n\t  return AES256Cipher;\n\t}();\n\tvar PDF17 = function PDF17Closure() {\n\t  function compareByteArrays(array1, array2) {\n\t    if (array1.length !== array2.length) {\n\t      return false;\n\t    }\n\t    for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t  function PDF17() {}\n\t  PDF17.prototype = {\n\t    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, ownerPassword);\n\t    },\n\t    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, userPassword);\n\t    },\n\t    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t    },\n\t    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t    }\n\t  };\n\t  return PDF17;\n\t}();\n\tvar PDF20 = function PDF20Closure() {\n\t  function concatArrays(array1, array2) {\n\t    var t = new Uint8Array(array1.length + array2.length);\n\t    t.set(array1, 0);\n\t    t.set(array2, array1.length);\n\t    return t;\n\t  }\n\t  function calculatePDF20Hash(password, input, userBytes) {\n\t    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n\t    var e = [0];\n\t    var i = 0;\n\t    while (i < 64 || e[e.length - 1] > i - 32) {\n\t      var arrayLength = password.length + k.length + userBytes.length;\n\t      var k1 = new Uint8Array(arrayLength * 64);\n\t      var array = concatArrays(password, k);\n\t      array = concatArrays(array, userBytes);\n\t      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n\t        k1.set(array, pos);\n\t      }\n\t      var cipher = new AES128Cipher(k.subarray(0, 16));\n\t      e = cipher.encrypt(k1, k.subarray(16, 32));\n\t      var remainder = 0;\n\t      for (var z = 0; z < 16; z++) {\n\t        remainder *= 256 % 3;\n\t        remainder %= 3;\n\t        remainder += (e[z] >>> 0) % 3;\n\t        remainder %= 3;\n\t      }\n\t      if (remainder === 0) {\n\t        k = calculateSHA256(e, 0, e.length);\n\t      } else if (remainder === 1) {\n\t        k = calculateSHA384(e, 0, e.length);\n\t      } else if (remainder === 2) {\n\t        k = calculateSHA512(e, 0, e.length);\n\t      }\n\t      i++;\n\t    }\n\t    return k.subarray(0, 32);\n\t  }\n\t  function PDF20() {}\n\t  function compareByteArrays(array1, array2) {\n\t    if (array1.length !== array2.length) {\n\t      return false;\n\t    }\n\t    for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t  PDF20.prototype = {\n\t    hash: function PDF20_hash(password, concatBytes, userBytes) {\n\t      return calculatePDF20Hash(password, concatBytes, userBytes);\n\t    },\n\t    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculatePDF20Hash(password, hashData, userBytes);\n\t      return compareByteArrays(result, ownerPassword);\n\t    },\n\t    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculatePDF20Hash(password, hashData, []);\n\t      return compareByteArrays(result, userPassword);\n\t    },\n\t    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculatePDF20Hash(password, hashData, userBytes);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t    },\n\t    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculatePDF20Hash(password, hashData, []);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t    }\n\t  };\n\t  return PDF20;\n\t}();\n\tvar CipherTransform = function CipherTransformClosure() {\n\t  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n\t    this.StringCipherConstructor = stringCipherConstructor;\n\t    this.StreamCipherConstructor = streamCipherConstructor;\n\t  }\n\t  CipherTransform.prototype = {\n\t    createStream: function CipherTransform_createStream(stream, length) {\n\t      var cipher = new this.StreamCipherConstructor();\n\t      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n\t        return cipher.decryptBlock(data, finalize);\n\t      });\n\t    },\n\t    decryptString: function CipherTransform_decryptString(s) {\n\t      var cipher = new this.StringCipherConstructor();\n\t      var data = (0, _util.stringToBytes)(s);\n\t      data = cipher.decryptBlock(data, true);\n\t      return (0, _util.bytesToString)(data);\n\t    }\n\t  };\n\t  return CipherTransform;\n\t}();\n\tvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n\t  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n\t  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n\t    if (password) {\n\t      var passwordLength = Math.min(127, password.length);\n\t      password = password.subarray(0, passwordLength);\n\t    } else {\n\t      password = [];\n\t    }\n\t    var pdfAlgorithm;\n\t    if (revision === 6) {\n\t      pdfAlgorithm = new PDF20();\n\t    } else {\n\t      pdfAlgorithm = new PDF17();\n\t    }\n\t    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n\t      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n\t    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n\t      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n\t    }\n\t    return null;\n\t  }\n\t  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n\t    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n\t    var hashData = new Uint8Array(hashDataSize),\n\t        i = 0,\n\t        j,\n\t        n;\n\t    if (password) {\n\t      n = Math.min(32, password.length);\n\t      for (; i < n; ++i) {\n\t        hashData[i] = password[i];\n\t      }\n\t    }\n\t    j = 0;\n\t    while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t    }\n\t    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n\t      hashData[i++] = ownerPassword[j];\n\t    }\n\t    hashData[i++] = flags & 0xFF;\n\t    hashData[i++] = flags >> 8 & 0xFF;\n\t    hashData[i++] = flags >> 16 & 0xFF;\n\t    hashData[i++] = flags >>> 24 & 0xFF;\n\t    for (j = 0, n = fileId.length; j < n; ++j) {\n\t      hashData[i++] = fileId[j];\n\t    }\n\t    if (revision >= 4 && !encryptMetadata) {\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t    }\n\t    var hash = calculateMD5(hashData, 0, i);\n\t    var keyLengthInBytes = keyLength >> 3;\n\t    if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t        hash = calculateMD5(hash, 0, keyLengthInBytes);\n\t      }\n\t    }\n\t    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n\t    var cipher, checkData;\n\t    if (revision >= 3) {\n\t      for (i = 0; i < 32; ++i) {\n\t        hashData[i] = defaultPasswordBytes[i];\n\t      }\n\t      for (j = 0, n = fileId.length; j < n; ++j) {\n\t        hashData[i++] = fileId[j];\n\t      }\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n\t      n = encryptionKey.length;\n\t      var derivedKey = new Uint8Array(n),\n\t          k;\n\t      for (j = 1; j <= 19; ++j) {\n\t        for (k = 0; k < n; ++k) {\n\t          derivedKey[k] = encryptionKey[k] ^ j;\n\t        }\n\t        cipher = new ARCFourCipher(derivedKey);\n\t        checkData = cipher.encryptBlock(checkData);\n\t      }\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t        if (userPassword[j] !== checkData[j]) {\n\t          return null;\n\t        }\n\t      }\n\t    } else {\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(defaultPasswordBytes);\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t        if (userPassword[j] !== checkData[j]) {\n\t          return null;\n\t        }\n\t      }\n\t    }\n\t    return encryptionKey;\n\t  }\n\t  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n\t    var hashData = new Uint8Array(32),\n\t        i = 0,\n\t        j,\n\t        n;\n\t    n = Math.min(32, password.length);\n\t    for (; i < n; ++i) {\n\t      hashData[i] = password[i];\n\t    }\n\t    j = 0;\n\t    while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t    }\n\t    var hash = calculateMD5(hashData, 0, i);\n\t    var keyLengthInBytes = keyLength >> 3;\n\t    if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t        hash = calculateMD5(hash, 0, hash.length);\n\t      }\n\t    }\n\t    var cipher, userPassword;\n\t    if (revision >= 3) {\n\t      userPassword = ownerPassword;\n\t      var derivedKey = new Uint8Array(keyLengthInBytes),\n\t          k;\n\t      for (j = 19; j >= 0; j--) {\n\t        for (k = 0; k < keyLengthInBytes; ++k) {\n\t          derivedKey[k] = hash[k] ^ j;\n\t        }\n\t        cipher = new ARCFourCipher(derivedKey);\n\t        userPassword = cipher.encryptBlock(userPassword);\n\t      }\n\t    } else {\n\t      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n\t      userPassword = cipher.encryptBlock(ownerPassword);\n\t    }\n\t    return userPassword;\n\t  }\n\t  var identityName = _primitives.Name.get('Identity');\n\t  function CipherTransformFactory(dict, fileId, password) {\n\t    var filter = dict.get('Filter');\n\t    if (!(0, _primitives.isName)(filter, 'Standard')) {\n\t      throw new _util.FormatError('unknown encryption method');\n\t    }\n\t    this.dict = dict;\n\t    var algorithm = dict.get('V');\n\t    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n\t      throw new _util.FormatError('unsupported encryption algorithm');\n\t    }\n\t    this.algorithm = algorithm;\n\t    var keyLength = dict.get('Length');\n\t    if (!keyLength) {\n\t      if (algorithm <= 3) {\n\t        keyLength = 40;\n\t      } else {\n\t        var cfDict = dict.get('CF');\n\t        var streamCryptoName = dict.get('StmF');\n\t        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n\t          cfDict.suppressEncryption = true;\n\t          var handlerDict = cfDict.get(streamCryptoName.name);\n\t          keyLength = handlerDict && handlerDict.get('Length') || 128;\n\t          if (keyLength < 40) {\n\t            keyLength <<= 3;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n\t      throw new _util.FormatError('invalid key length');\n\t    }\n\t    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n\t    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n\t    var flags = dict.get('P');\n\t    var revision = dict.get('R');\n\t    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n\t    this.encryptMetadata = encryptMetadata;\n\t    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n\t    var passwordBytes;\n\t    if (password) {\n\t      if (revision === 6) {\n\t        try {\n\t          password = (0, _util.utf8StringToString)(password);\n\t        } catch (ex) {\n\t          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n\t        }\n\t      }\n\t      passwordBytes = (0, _util.stringToBytes)(password);\n\t    }\n\t    var encryptionKey;\n\t    if (algorithm !== 5) {\n\t      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t    } else {\n\t      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n\t      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n\t      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n\t      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n\t      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n\t      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n\t      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n\t      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n\t      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n\t    }\n\t    if (!encryptionKey && !password) {\n\t      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n\t    } else if (!encryptionKey && password) {\n\t      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n\t      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t    }\n\t    if (!encryptionKey) {\n\t      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n\t    }\n\t    this.encryptionKey = encryptionKey;\n\t    if (algorithm >= 4) {\n\t      var cf = dict.get('CF');\n\t      if ((0, _primitives.isDict)(cf)) {\n\t        cf.suppressEncryption = true;\n\t      }\n\t      this.cf = cf;\n\t      this.stmf = dict.get('StmF') || identityName;\n\t      this.strf = dict.get('StrF') || identityName;\n\t      this.eff = dict.get('EFF') || this.stmf;\n\t    }\n\t  }\n\t  function buildObjectKey(num, gen, encryptionKey, isAes) {\n\t    var key = new Uint8Array(encryptionKey.length + 9),\n\t        i,\n\t        n;\n\t    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n\t      key[i] = encryptionKey[i];\n\t    }\n\t    key[i++] = num & 0xFF;\n\t    key[i++] = num >> 8 & 0xFF;\n\t    key[i++] = num >> 16 & 0xFF;\n\t    key[i++] = gen & 0xFF;\n\t    key[i++] = gen >> 8 & 0xFF;\n\t    if (isAes) {\n\t      key[i++] = 0x73;\n\t      key[i++] = 0x41;\n\t      key[i++] = 0x6C;\n\t      key[i++] = 0x54;\n\t    }\n\t    var hash = calculateMD5(key, 0, i);\n\t    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n\t  }\n\t  function buildCipherConstructor(cf, name, num, gen, key) {\n\t    if (!(0, _primitives.isName)(name)) {\n\t      throw new _util.FormatError('Invalid crypt filter name.');\n\t    }\n\t    var cryptFilter = cf.get(name.name);\n\t    var cfm;\n\t    if (cryptFilter !== null && cryptFilter !== undefined) {\n\t      cfm = cryptFilter.get('CFM');\n\t    }\n\t    if (!cfm || cfm.name === 'None') {\n\t      return function cipherTransformFactoryBuildCipherConstructorNone() {\n\t        return new NullCipher();\n\t      };\n\t    }\n\t    if (cfm.name === 'V2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorV2() {\n\t        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n\t      };\n\t    }\n\t    if (cfm.name === 'AESV2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n\t        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n\t      };\n\t    }\n\t    if (cfm.name === 'AESV3') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n\t        return new AES256Cipher(key);\n\t      };\n\t    }\n\t    throw new _util.FormatError('Unknown crypto method');\n\t  }\n\t  CipherTransformFactory.prototype = {\n\t    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n\t      if (this.algorithm === 4 || this.algorithm === 5) {\n\t        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n\t      }\n\t      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n\t      var cipherConstructor = function buildCipherCipherConstructor() {\n\t        return new ARCFourCipher(key);\n\t      };\n\t      return new CipherTransform(cipherConstructor, cipherConstructor);\n\t    }\n\t  };\n\t  return CipherTransformFactory;\n\t}();\n\texports.AES128Cipher = AES128Cipher;\n\texports.AES256Cipher = AES256Cipher;\n\texports.ARCFourCipher = ARCFourCipher;\n\texports.CipherTransformFactory = CipherTransformFactory;\n\texports.PDF17 = PDF17;\n\texports.PDF20 = PDF20;\n\texports.calculateMD5 = calculateMD5;\n\texports.calculateSHA256 = calculateSHA256;\n\texports.calculateSHA384 = calculateSHA384;\n\texports.calculateSHA512 = calculateSHA512;\n\n/***/ },\n\n/***/ 406:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _ps_parser = __webpack_require__(702);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar IsEvalSupportedCached = {\n\t  get value() {\n\t    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n\t  }\n\t};\n\t\n\tvar PDFFunctionFactory = function () {\n\t  function PDFFunctionFactory(_ref) {\n\t    var xref = _ref.xref,\n\t        _ref$isEvalSupported = _ref.isEvalSupported,\n\t        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\t\n\t    _classCallCheck(this, PDFFunctionFactory);\n\t\n\t    this.xref = xref;\n\t    this.isEvalSupported = isEvalSupported !== false;\n\t  }\n\t\n\t  _createClass(PDFFunctionFactory, [{\n\t    key: 'create',\n\t    value: function create(fn) {\n\t      return PDFFunction.parse({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fn: fn\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createFromArray',\n\t    value: function createFromArray(fnObj) {\n\t      return PDFFunction.parseArray({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fnObj: fnObj\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createFromIR',\n\t    value: function createFromIR(IR) {\n\t      return PDFFunction.fromIR({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        IR: IR\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createIR',\n\t    value: function createIR(fn) {\n\t      return PDFFunction.getIR({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fn: fn\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return PDFFunctionFactory;\n\t}();\n\t\n\tvar PDFFunction = function PDFFunctionClosure() {\n\t  var CONSTRUCT_SAMPLED = 0;\n\t  var CONSTRUCT_INTERPOLATED = 2;\n\t  var CONSTRUCT_STICHED = 3;\n\t  var CONSTRUCT_POSTSCRIPT = 4;\n\t  return {\n\t    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n\t      var i, ii;\n\t      var length = 1;\n\t      for (i = 0, ii = size.length; i < ii; i++) {\n\t        length *= size[i];\n\t      }\n\t      length *= outputSize;\n\t      var array = new Array(length);\n\t      var codeSize = 0;\n\t      var codeBuf = 0;\n\t      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\t      var strBytes = stream.getBytes((length * bps + 7) / 8);\n\t      var strIdx = 0;\n\t      for (i = 0; i < length; i++) {\n\t        while (codeSize < bps) {\n\t          codeBuf <<= 8;\n\t          codeBuf |= strBytes[strIdx++];\n\t          codeSize += 8;\n\t        }\n\t        codeSize -= bps;\n\t        array[i] = (codeBuf >> codeSize) * sampleMul;\n\t        codeBuf &= (1 << codeSize) - 1;\n\t      }\n\t      return array;\n\t    },\n\t    getIR: function getIR(_ref2) {\n\t      var xref = _ref2.xref,\n\t          isEvalSupported = _ref2.isEvalSupported,\n\t          fn = _ref2.fn;\n\t\n\t      var dict = fn.dict;\n\t      if (!dict) {\n\t        dict = fn;\n\t      }\n\t      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n\t      var typeNum = dict.get('FunctionType');\n\t      var typeFn = types[typeNum];\n\t      if (!typeFn) {\n\t        throw new _util.FormatError('Unknown type of function');\n\t      }\n\t      return typeFn.call(this, {\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        fn: fn,\n\t        dict: dict\n\t      });\n\t    },\n\t    fromIR: function fromIR(_ref3) {\n\t      var xref = _ref3.xref,\n\t          isEvalSupported = _ref3.isEvalSupported,\n\t          IR = _ref3.IR;\n\t\n\t      var type = IR[0];\n\t      switch (type) {\n\t        case CONSTRUCT_SAMPLED:\n\t          return this.constructSampledFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        case CONSTRUCT_INTERPOLATED:\n\t          return this.constructInterpolatedFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        case CONSTRUCT_STICHED:\n\t          return this.constructStichedFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        default:\n\t          return this.constructPostScriptFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t      }\n\t    },\n\t    parse: function parse(_ref4) {\n\t      var xref = _ref4.xref,\n\t          isEvalSupported = _ref4.isEvalSupported,\n\t          fn = _ref4.fn;\n\t\n\t      var IR = this.getIR({\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        fn: fn\n\t      });\n\t      return this.fromIR({\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        IR: IR\n\t      });\n\t    },\n\t    parseArray: function parseArray(_ref5) {\n\t      var xref = _ref5.xref,\n\t          isEvalSupported = _ref5.isEvalSupported,\n\t          fnObj = _ref5.fnObj;\n\t\n\t      if (!Array.isArray(fnObj)) {\n\t        return this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: fnObj\n\t        });\n\t      }\n\t      var fnArray = [];\n\t      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n\t        fnArray.push(this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: xref.fetchIfRef(fnObj[j])\n\t        }));\n\t      }\n\t      return function (src, srcOffset, dest, destOffset) {\n\t        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n\t          fnArray[i](src, srcOffset, dest, destOffset + i);\n\t        }\n\t      };\n\t    },\n\t    constructSampled: function constructSampled(_ref6) {\n\t      var xref = _ref6.xref,\n\t          isEvalSupported = _ref6.isEvalSupported,\n\t          fn = _ref6.fn,\n\t          dict = _ref6.dict;\n\t\n\t      function toMultiArray(arr) {\n\t        var inputLength = arr.length;\n\t        var out = [];\n\t        var index = 0;\n\t        for (var i = 0; i < inputLength; i += 2) {\n\t          out[index] = [arr[i], arr[i + 1]];\n\t          ++index;\n\t        }\n\t        return out;\n\t      }\n\t      var domain = dict.getArray('Domain');\n\t      var range = dict.getArray('Range');\n\t      if (!domain || !range) {\n\t        throw new _util.FormatError('No domain or range');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      var outputSize = range.length / 2;\n\t      domain = toMultiArray(domain);\n\t      range = toMultiArray(range);\n\t      var size = dict.get('Size');\n\t      var bps = dict.get('BitsPerSample');\n\t      var order = dict.get('Order') || 1;\n\t      if (order !== 1) {\n\t        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n\t      }\n\t      var encode = dict.getArray('Encode');\n\t      if (!encode) {\n\t        encode = [];\n\t        for (var i = 0; i < inputSize; ++i) {\n\t          encode.push(0);\n\t          encode.push(size[i] - 1);\n\t        }\n\t      }\n\t      encode = toMultiArray(encode);\n\t      var decode = dict.getArray('Decode');\n\t      if (!decode) {\n\t        decode = range;\n\t      } else {\n\t        decode = toMultiArray(decode);\n\t      }\n\t      var samples = this.getSampleArray(size, outputSize, bps, fn);\n\t      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n\t    },\n\t    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n\t      var xref = _ref7.xref,\n\t          isEvalSupported = _ref7.isEvalSupported,\n\t          IR = _ref7.IR;\n\t\n\t      function interpolate(x, xmin, xmax, ymin, ymax) {\n\t        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n\t      }\n\t      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var m = IR[1];\n\t        var domain = IR[2];\n\t        var encode = IR[3];\n\t        var decode = IR[4];\n\t        var samples = IR[5];\n\t        var size = IR[6];\n\t        var n = IR[7];\n\t        var range = IR[9];\n\t        var cubeVertices = 1 << m;\n\t        var cubeN = new Float64Array(cubeVertices);\n\t        var cubeVertex = new Uint32Array(cubeVertices);\n\t        var i, j;\n\t        for (j = 0; j < cubeVertices; j++) {\n\t          cubeN[j] = 1;\n\t        }\n\t        var k = n,\n\t            pos = 1;\n\t        for (i = 0; i < m; ++i) {\n\t          var domain_2i = domain[i][0];\n\t          var domain_2i_1 = domain[i][1];\n\t          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n\t          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n\t          var size_i = size[i];\n\t          e = Math.min(Math.max(e, 0), size_i - 1);\n\t          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n\t          var n0 = e0 + 1 - e;\n\t          var n1 = e - e0;\n\t          var offset0 = e0 * k;\n\t          var offset1 = offset0 + k;\n\t          for (j = 0; j < cubeVertices; j++) {\n\t            if (j & pos) {\n\t              cubeN[j] *= n1;\n\t              cubeVertex[j] += offset1;\n\t            } else {\n\t              cubeN[j] *= n0;\n\t              cubeVertex[j] += offset0;\n\t            }\n\t          }\n\t          k *= size_i;\n\t          pos <<= 1;\n\t        }\n\t        for (j = 0; j < n; ++j) {\n\t          var rj = 0;\n\t          for (i = 0; i < cubeVertices; i++) {\n\t            rj += samples[cubeVertex[i] + j] * cubeN[i];\n\t          }\n\t          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\t          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n\t        }\n\t      };\n\t    },\n\t    constructInterpolated: function constructInterpolated(_ref8) {\n\t      var xref = _ref8.xref,\n\t          isEvalSupported = _ref8.isEvalSupported,\n\t          fn = _ref8.fn,\n\t          dict = _ref8.dict;\n\t\n\t      var c0 = dict.getArray('C0') || [0];\n\t      var c1 = dict.getArray('C1') || [1];\n\t      var n = dict.get('N');\n\t      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n\t        throw new _util.FormatError('Illegal dictionary for interpolated function');\n\t      }\n\t      var length = c0.length;\n\t      var diff = [];\n\t      for (var i = 0; i < length; ++i) {\n\t        diff.push(c1[i] - c0[i]);\n\t      }\n\t      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n\t    },\n\t    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n\t      var xref = _ref9.xref,\n\t          isEvalSupported = _ref9.isEvalSupported,\n\t          IR = _ref9.IR;\n\t\n\t      var c0 = IR[1];\n\t      var diff = IR[2];\n\t      var n = IR[3];\n\t      var length = diff.length;\n\t      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\t        for (var j = 0; j < length; ++j) {\n\t          dest[destOffset + j] = c0[j] + x * diff[j];\n\t        }\n\t      };\n\t    },\n\t    constructStiched: function constructStiched(_ref10) {\n\t      var xref = _ref10.xref,\n\t          isEvalSupported = _ref10.isEvalSupported,\n\t          fn = _ref10.fn,\n\t          dict = _ref10.dict;\n\t\n\t      var domain = dict.getArray('Domain');\n\t      if (!domain) {\n\t        throw new _util.FormatError('No domain');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      if (inputSize !== 1) {\n\t        throw new _util.FormatError('Bad domain for stiched function');\n\t      }\n\t      var fnRefs = dict.get('Functions');\n\t      var fns = [];\n\t      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n\t        fns.push(this.getIR({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: xref.fetchIfRef(fnRefs[i])\n\t        }));\n\t      }\n\t      var bounds = dict.getArray('Bounds');\n\t      var encode = dict.getArray('Encode');\n\t      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n\t    },\n\t    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n\t      var xref = _ref11.xref,\n\t          isEvalSupported = _ref11.isEvalSupported,\n\t          IR = _ref11.IR;\n\t\n\t      var domain = IR[1];\n\t      var bounds = IR[2];\n\t      var encode = IR[3];\n\t      var fnsIR = IR[4];\n\t      var fns = [];\n\t      var tmpBuf = new Float32Array(1);\n\t      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n\t        fns.push(this.fromIR({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          IR: fnsIR[i]\n\t        }));\n\t      }\n\t      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var clip = function constructStichedFromIRClip(v, min, max) {\n\t          if (v > max) {\n\t            v = max;\n\t          } else if (v < min) {\n\t            v = min;\n\t          }\n\t          return v;\n\t        };\n\t        var v = clip(src[srcOffset], domain[0], domain[1]);\n\t        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n\t          if (v < bounds[i]) {\n\t            break;\n\t          }\n\t        }\n\t        var dmin = domain[0];\n\t        if (i > 0) {\n\t          dmin = bounds[i - 1];\n\t        }\n\t        var dmax = domain[1];\n\t        if (i < bounds.length) {\n\t          dmax = bounds[i];\n\t        }\n\t        var rmin = encode[2 * i];\n\t        var rmax = encode[2 * i + 1];\n\t        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\t        fns[i](tmpBuf, 0, dest, destOffset);\n\t      };\n\t    },\n\t    constructPostScript: function constructPostScript(_ref12) {\n\t      var xref = _ref12.xref,\n\t          isEvalSupported = _ref12.isEvalSupported,\n\t          fn = _ref12.fn,\n\t          dict = _ref12.dict;\n\t\n\t      var domain = dict.getArray('Domain');\n\t      var range = dict.getArray('Range');\n\t      if (!domain) {\n\t        throw new _util.FormatError('No domain.');\n\t      }\n\t      if (!range) {\n\t        throw new _util.FormatError('No range.');\n\t      }\n\t      var lexer = new _ps_parser.PostScriptLexer(fn);\n\t      var parser = new _ps_parser.PostScriptParser(lexer);\n\t      var code = parser.parse();\n\t      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n\t    },\n\t    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n\t      var xref = _ref13.xref,\n\t          isEvalSupported = _ref13.isEvalSupported,\n\t          IR = _ref13.IR;\n\t\n\t      var domain = IR[1];\n\t      var range = IR[2];\n\t      var code = IR[3];\n\t      if (isEvalSupported && IsEvalSupportedCached.value) {\n\t        var compiled = new PostScriptCompiler().compile(code, domain, range);\n\t        if (compiled) {\n\t          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n\t        }\n\t      }\n\t      (0, _util.info)('Unable to compile PS function');\n\t      var numOutputs = range.length >> 1;\n\t      var numInputs = domain.length >> 1;\n\t      var evaluator = new PostScriptEvaluator(code);\n\t      var cache = Object.create(null);\n\t      var MAX_CACHE_SIZE = 2048 * 4;\n\t      var cache_available = MAX_CACHE_SIZE;\n\t      var tmpBuf = new Float32Array(numInputs);\n\t      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var i, value;\n\t        var key = '';\n\t        var input = tmpBuf;\n\t        for (i = 0; i < numInputs; i++) {\n\t          value = src[srcOffset + i];\n\t          input[i] = value;\n\t          key += value + '_';\n\t        }\n\t        var cachedValue = cache[key];\n\t        if (cachedValue !== undefined) {\n\t          dest.set(cachedValue, destOffset);\n\t          return;\n\t        }\n\t        var output = new Float32Array(numOutputs);\n\t        var stack = evaluator.execute(input);\n\t        var stackIndex = stack.length - numOutputs;\n\t        for (i = 0; i < numOutputs; i++) {\n\t          value = stack[stackIndex + i];\n\t          var bound = range[i * 2];\n\t          if (value < bound) {\n\t            value = bound;\n\t          } else {\n\t            bound = range[i * 2 + 1];\n\t            if (value > bound) {\n\t              value = bound;\n\t            }\n\t          }\n\t          output[i] = value;\n\t        }\n\t        if (cache_available > 0) {\n\t          cache_available--;\n\t          cache[key] = output;\n\t        }\n\t        dest.set(output, destOffset);\n\t      };\n\t    }\n\t  };\n\t}();\n\tfunction isPDFFunction(v) {\n\t  var fnDict;\n\t  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n\t    return false;\n\t  } else if ((0, _primitives.isDict)(v)) {\n\t    fnDict = v;\n\t  } else if ((0, _primitives.isStream)(v)) {\n\t    fnDict = v.dict;\n\t  } else {\n\t    return false;\n\t  }\n\t  return fnDict.has('FunctionType');\n\t}\n\tvar PostScriptStack = function PostScriptStackClosure() {\n\t  var MAX_STACK_SIZE = 100;\n\t  function PostScriptStack(initialStack) {\n\t    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n\t  }\n\t  PostScriptStack.prototype = {\n\t    push: function PostScriptStack_push(value) {\n\t      if (this.stack.length >= MAX_STACK_SIZE) {\n\t        throw new Error('PostScript function stack overflow.');\n\t      }\n\t      this.stack.push(value);\n\t    },\n\t    pop: function PostScriptStack_pop() {\n\t      if (this.stack.length <= 0) {\n\t        throw new Error('PostScript function stack underflow.');\n\t      }\n\t      return this.stack.pop();\n\t    },\n\t    copy: function PostScriptStack_copy(n) {\n\t      if (this.stack.length + n >= MAX_STACK_SIZE) {\n\t        throw new Error('PostScript function stack overflow.');\n\t      }\n\t      var stack = this.stack;\n\t      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n\t        stack.push(stack[i]);\n\t      }\n\t    },\n\t    index: function PostScriptStack_index(n) {\n\t      this.push(this.stack[this.stack.length - n - 1]);\n\t    },\n\t    roll: function PostScriptStack_roll(n, p) {\n\t      var stack = this.stack;\n\t      var l = stack.length - n;\n\t      var r = stack.length - 1,\n\t          c = l + (p - Math.floor(p / n) * n),\n\t          i,\n\t          j,\n\t          t;\n\t      for (i = l, j = r; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t      for (i = l, j = c - 1; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t      for (i = c, j = r; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t    }\n\t  };\n\t  return PostScriptStack;\n\t}();\n\tvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n\t  function PostScriptEvaluator(operators) {\n\t    this.operators = operators;\n\t  }\n\t  PostScriptEvaluator.prototype = {\n\t    execute: function PostScriptEvaluator_execute(initialStack) {\n\t      var stack = new PostScriptStack(initialStack);\n\t      var counter = 0;\n\t      var operators = this.operators;\n\t      var length = operators.length;\n\t      var operator, a, b;\n\t      while (counter < length) {\n\t        operator = operators[counter++];\n\t        if (typeof operator === 'number') {\n\t          stack.push(operator);\n\t          continue;\n\t        }\n\t        switch (operator) {\n\t          case 'jz':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if (!a) {\n\t              counter = b;\n\t            }\n\t            break;\n\t          case 'j':\n\t            a = stack.pop();\n\t            counter = a;\n\t            break;\n\t          case 'abs':\n\t            a = stack.pop();\n\t            stack.push(Math.abs(a));\n\t            break;\n\t          case 'add':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a + b);\n\t            break;\n\t          case 'and':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a && b);\n\t            } else {\n\t              stack.push(a & b);\n\t            }\n\t            break;\n\t          case 'atan':\n\t            a = stack.pop();\n\t            stack.push(Math.atan(a));\n\t            break;\n\t          case 'bitshift':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if (a > 0) {\n\t              stack.push(a << b);\n\t            } else {\n\t              stack.push(a >> b);\n\t            }\n\t            break;\n\t          case 'ceiling':\n\t            a = stack.pop();\n\t            stack.push(Math.ceil(a));\n\t            break;\n\t          case 'copy':\n\t            a = stack.pop();\n\t            stack.copy(a);\n\t            break;\n\t          case 'cos':\n\t            a = stack.pop();\n\t            stack.push(Math.cos(a));\n\t            break;\n\t          case 'cvi':\n\t            a = stack.pop() | 0;\n\t            stack.push(a);\n\t            break;\n\t          case 'cvr':\n\t            break;\n\t          case 'div':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a / b);\n\t            break;\n\t          case 'dup':\n\t            stack.copy(1);\n\t            break;\n\t          case 'eq':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a === b);\n\t            break;\n\t          case 'exch':\n\t            stack.roll(2, 1);\n\t            break;\n\t          case 'exp':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(Math.pow(a, b));\n\t            break;\n\t          case 'false':\n\t            stack.push(false);\n\t            break;\n\t          case 'floor':\n\t            a = stack.pop();\n\t            stack.push(Math.floor(a));\n\t            break;\n\t          case 'ge':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a >= b);\n\t            break;\n\t          case 'gt':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a > b);\n\t            break;\n\t          case 'idiv':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a / b | 0);\n\t            break;\n\t          case 'index':\n\t            a = stack.pop();\n\t            stack.index(a);\n\t            break;\n\t          case 'le':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a <= b);\n\t            break;\n\t          case 'ln':\n\t            a = stack.pop();\n\t            stack.push(Math.log(a));\n\t            break;\n\t          case 'log':\n\t            a = stack.pop();\n\t            stack.push(Math.log(a) / Math.LN10);\n\t            break;\n\t          case 'lt':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a < b);\n\t            break;\n\t          case 'mod':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a % b);\n\t            break;\n\t          case 'mul':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a * b);\n\t            break;\n\t          case 'ne':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a !== b);\n\t            break;\n\t          case 'neg':\n\t            a = stack.pop();\n\t            stack.push(-a);\n\t            break;\n\t          case 'not':\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a)) {\n\t              stack.push(!a);\n\t            } else {\n\t              stack.push(~a);\n\t            }\n\t            break;\n\t          case 'or':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a || b);\n\t            } else {\n\t              stack.push(a | b);\n\t            }\n\t            break;\n\t          case 'pop':\n\t            stack.pop();\n\t            break;\n\t          case 'roll':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.roll(a, b);\n\t            break;\n\t          case 'round':\n\t            a = stack.pop();\n\t            stack.push(Math.round(a));\n\t            break;\n\t          case 'sin':\n\t            a = stack.pop();\n\t            stack.push(Math.sin(a));\n\t            break;\n\t          case 'sqrt':\n\t            a = stack.pop();\n\t            stack.push(Math.sqrt(a));\n\t            break;\n\t          case 'sub':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a - b);\n\t            break;\n\t          case 'true':\n\t            stack.push(true);\n\t            break;\n\t          case 'truncate':\n\t            a = stack.pop();\n\t            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n\t            stack.push(a);\n\t            break;\n\t          case 'xor':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a !== b);\n\t            } else {\n\t              stack.push(a ^ b);\n\t            }\n\t            break;\n\t          default:\n\t            throw new _util.FormatError('Unknown operator ' + operator);\n\t        }\n\t      }\n\t      return stack.stack;\n\t    }\n\t  };\n\t  return PostScriptEvaluator;\n\t}();\n\tvar PostScriptCompiler = function PostScriptCompilerClosure() {\n\t  function AstNode(type) {\n\t    this.type = type;\n\t  }\n\t  AstNode.prototype.visit = function (visitor) {\n\t    (0, _util.unreachable)('abstract method');\n\t  };\n\t  function AstArgument(index, min, max) {\n\t    AstNode.call(this, 'args');\n\t    this.index = index;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstArgument.prototype = Object.create(AstNode.prototype);\n\t  AstArgument.prototype.visit = function (visitor) {\n\t    visitor.visitArgument(this);\n\t  };\n\t  function AstLiteral(number) {\n\t    AstNode.call(this, 'literal');\n\t    this.number = number;\n\t    this.min = number;\n\t    this.max = number;\n\t  }\n\t  AstLiteral.prototype = Object.create(AstNode.prototype);\n\t  AstLiteral.prototype.visit = function (visitor) {\n\t    visitor.visitLiteral(this);\n\t  };\n\t  function AstBinaryOperation(op, arg1, arg2, min, max) {\n\t    AstNode.call(this, 'binary');\n\t    this.op = op;\n\t    this.arg1 = arg1;\n\t    this.arg2 = arg2;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n\t  AstBinaryOperation.prototype.visit = function (visitor) {\n\t    visitor.visitBinaryOperation(this);\n\t  };\n\t  function AstMin(arg, max) {\n\t    AstNode.call(this, 'max');\n\t    this.arg = arg;\n\t    this.min = arg.min;\n\t    this.max = max;\n\t  }\n\t  AstMin.prototype = Object.create(AstNode.prototype);\n\t  AstMin.prototype.visit = function (visitor) {\n\t    visitor.visitMin(this);\n\t  };\n\t  function AstVariable(index, min, max) {\n\t    AstNode.call(this, 'var');\n\t    this.index = index;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstVariable.prototype = Object.create(AstNode.prototype);\n\t  AstVariable.prototype.visit = function (visitor) {\n\t    visitor.visitVariable(this);\n\t  };\n\t  function AstVariableDefinition(variable, arg) {\n\t    AstNode.call(this, 'definition');\n\t    this.variable = variable;\n\t    this.arg = arg;\n\t  }\n\t  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n\t  AstVariableDefinition.prototype.visit = function (visitor) {\n\t    visitor.visitVariableDefinition(this);\n\t  };\n\t  function ExpressionBuilderVisitor() {\n\t    this.parts = [];\n\t  }\n\t  ExpressionBuilderVisitor.prototype = {\n\t    visitArgument: function visitArgument(arg) {\n\t      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n\t    },\n\t    visitVariable: function visitVariable(variable) {\n\t      this.parts.push('v', variable.index);\n\t    },\n\t    visitLiteral: function visitLiteral(literal) {\n\t      this.parts.push(literal.number);\n\t    },\n\t    visitBinaryOperation: function visitBinaryOperation(operation) {\n\t      this.parts.push('(');\n\t      operation.arg1.visit(this);\n\t      this.parts.push(' ', operation.op, ' ');\n\t      operation.arg2.visit(this);\n\t      this.parts.push(')');\n\t    },\n\t    visitVariableDefinition: function visitVariableDefinition(definition) {\n\t      this.parts.push('var ');\n\t      definition.variable.visit(this);\n\t      this.parts.push(' = ');\n\t      definition.arg.visit(this);\n\t      this.parts.push(';');\n\t    },\n\t    visitMin: function visitMin(max) {\n\t      this.parts.push('Math.min(');\n\t      max.arg.visit(this);\n\t      this.parts.push(', ', max.max, ')');\n\t    },\n\t    toString: function toString() {\n\t      return this.parts.join('');\n\t    }\n\t  };\n\t  function buildAddOperation(num1, num2) {\n\t    if (num2.type === 'literal' && num2.number === 0) {\n\t      return num1;\n\t    }\n\t    if (num1.type === 'literal' && num1.number === 0) {\n\t      return num2;\n\t    }\n\t    if (num2.type === 'literal' && num1.type === 'literal') {\n\t      return new AstLiteral(num1.number + num2.number);\n\t    }\n\t    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n\t  }\n\t  function buildMulOperation(num1, num2) {\n\t    if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t        return new AstLiteral(0);\n\t      } else if (num2.number === 1) {\n\t        return num1;\n\t      } else if (num1.type === 'literal') {\n\t        return new AstLiteral(num1.number * num2.number);\n\t      }\n\t    }\n\t    if (num1.type === 'literal') {\n\t      if (num1.number === 0) {\n\t        return new AstLiteral(0);\n\t      } else if (num1.number === 1) {\n\t        return num2;\n\t      }\n\t    }\n\t    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t    return new AstBinaryOperation('*', num1, num2, min, max);\n\t  }\n\t  function buildSubOperation(num1, num2) {\n\t    if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t        return num1;\n\t      } else if (num1.type === 'literal') {\n\t        return new AstLiteral(num1.number - num2.number);\n\t      }\n\t    }\n\t    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n\t      return num2.arg2;\n\t    }\n\t    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n\t  }\n\t  function buildMinOperation(num1, max) {\n\t    if (num1.min >= max) {\n\t      return new AstLiteral(max);\n\t    } else if (num1.max <= max) {\n\t      return num1;\n\t    }\n\t    return new AstMin(num1, max);\n\t  }\n\t  function PostScriptCompiler() {}\n\t  PostScriptCompiler.prototype = {\n\t    compile: function PostScriptCompiler_compile(code, domain, range) {\n\t      var stack = [];\n\t      var i, ii;\n\t      var instructions = [];\n\t      var inputSize = domain.length >> 1,\n\t          outputSize = range.length >> 1;\n\t      var lastRegister = 0;\n\t      var n, j;\n\t      var num1, num2, ast1, ast2, tmpVar, item;\n\t      for (i = 0; i < inputSize; i++) {\n\t        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n\t      }\n\t      for (i = 0, ii = code.length; i < ii; i++) {\n\t        item = code[i];\n\t        if (typeof item === 'number') {\n\t          stack.push(new AstLiteral(item));\n\t          continue;\n\t        }\n\t        switch (item) {\n\t          case 'add':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildAddOperation(num1, num2));\n\t            break;\n\t          case 'cvr':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            break;\n\t          case 'mul':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildMulOperation(num1, num2));\n\t            break;\n\t          case 'sub':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildSubOperation(num1, num2));\n\t            break;\n\t          case 'exch':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            ast1 = stack.pop();\n\t            ast2 = stack.pop();\n\t            stack.push(ast1, ast2);\n\t            break;\n\t          case 'pop':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            stack.pop();\n\t            break;\n\t          case 'index':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            num1 = stack.pop();\n\t            if (num1.type !== 'literal') {\n\t              return null;\n\t            }\n\t            n = num1.number;\n\t            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n\t              return null;\n\t            }\n\t            ast1 = stack[stack.length - n - 1];\n\t            if (ast1.type === 'literal' || ast1.type === 'var') {\n\t              stack.push(ast1);\n\t              break;\n\t            }\n\t            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t            stack[stack.length - n - 1] = tmpVar;\n\t            stack.push(tmpVar);\n\t            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t            break;\n\t          case 'dup':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n\t              num1 = stack.pop();\n\t              stack.push(buildMinOperation(num1, code[i + 1]));\n\t              i += 6;\n\t              break;\n\t            }\n\t            ast1 = stack[stack.length - 1];\n\t            if (ast1.type === 'literal' || ast1.type === 'var') {\n\t              stack.push(ast1);\n\t              break;\n\t            }\n\t            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t            stack[stack.length - 1] = tmpVar;\n\t            stack.push(tmpVar);\n\t            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t            break;\n\t          case 'roll':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            if (num2.type !== 'literal' || num1.type !== 'literal') {\n\t              return null;\n\t            }\n\t            j = num2.number;\n\t            n = num1.number;\n\t            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n\t              return null;\n\t            }\n\t            j = (j % n + n) % n;\n\t            if (j === 0) {\n\t              break;\n\t            }\n\t            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n\t            break;\n\t          default:\n\t            return null;\n\t        }\n\t      }\n\t      if (stack.length !== outputSize) {\n\t        return null;\n\t      }\n\t      var result = [];\n\t      instructions.forEach(function (instruction) {\n\t        var statementBuilder = new ExpressionBuilderVisitor();\n\t        instruction.visit(statementBuilder);\n\t        result.push(statementBuilder.toString());\n\t      });\n\t      stack.forEach(function (expr, i) {\n\t        var statementBuilder = new ExpressionBuilderVisitor();\n\t        expr.visit(statementBuilder);\n\t        var min = range[i * 2],\n\t            max = range[i * 2 + 1];\n\t        var out = [statementBuilder.toString()];\n\t        if (min > expr.min) {\n\t          out.unshift('Math.max(', min, ', ');\n\t          out.push(')');\n\t        }\n\t        if (max < expr.max) {\n\t          out.unshift('Math.min(', max, ', ');\n\t          out.push(')');\n\t        }\n\t        out.unshift('dest[destOffset + ', i, '] = ');\n\t        out.push(';');\n\t        result.push(out.join(''));\n\t      });\n\t      return result.join('\\n');\n\t    }\n\t  };\n\t  return PostScriptCompiler;\n\t}();\n\texports.isPDFFunction = isPDFFunction;\n\texports.PDFFunctionFactory = PDFFunctionFactory;\n\texports.PostScriptEvaluator = PostScriptEvaluator;\n\texports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ },\n\n/***/ 407:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpxImage = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _arithmetic_decoder = __webpack_require__(401);\n\t\n\tvar JpxError = function JpxErrorClosure() {\n\t  function JpxError(msg) {\n\t    this.message = 'JPX error: ' + msg;\n\t  }\n\t  JpxError.prototype = new Error();\n\t  JpxError.prototype.name = 'JpxError';\n\t  JpxError.constructor = JpxError;\n\t  return JpxError;\n\t}();\n\tvar JpxImage = function JpxImageClosure() {\n\t  var SubbandsGainLog2 = {\n\t    'LL': 0,\n\t    'LH': 1,\n\t    'HL': 1,\n\t    'HH': 2\n\t  };\n\t  function JpxImage() {\n\t    this.failOnCorruptedImage = false;\n\t  }\n\t  JpxImage.prototype = {\n\t    parse: function JpxImage_parse(data) {\n\t      var head = (0, _util.readUint16)(data, 0);\n\t      if (head === 0xFF4F) {\n\t        this.parseCodestream(data, 0, data.length);\n\t        return;\n\t      }\n\t      var position = 0,\n\t          length = data.length;\n\t      while (position < length) {\n\t        var headerSize = 8;\n\t        var lbox = (0, _util.readUint32)(data, position);\n\t        var tbox = (0, _util.readUint32)(data, position + 4);\n\t        position += headerSize;\n\t        if (lbox === 1) {\n\t          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n\t          position += 8;\n\t          headerSize += 8;\n\t        }\n\t        if (lbox === 0) {\n\t          lbox = length - position + headerSize;\n\t        }\n\t        if (lbox < headerSize) {\n\t          throw new JpxError('Invalid box field size');\n\t        }\n\t        var dataLength = lbox - headerSize;\n\t        var jumpDataLength = true;\n\t        switch (tbox) {\n\t          case 0x6A703268:\n\t            jumpDataLength = false;\n\t            break;\n\t          case 0x636F6C72:\n\t            var method = data[position];\n\t            if (method === 1) {\n\t              var colorspace = (0, _util.readUint32)(data, position + 3);\n\t              switch (colorspace) {\n\t                case 16:\n\t                case 17:\n\t                case 18:\n\t                  break;\n\t                default:\n\t                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n\t                  break;\n\t              }\n\t            } else if (method === 2) {\n\t              (0, _util.info)('ICC profile not supported');\n\t            }\n\t            break;\n\t          case 0x6A703263:\n\t            this.parseCodestream(data, position, position + dataLength);\n\t            break;\n\t          case 0x6A502020:\n\t            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n\t              (0, _util.warn)('Invalid JP2 signature');\n\t            }\n\t            break;\n\t          case 0x6A501A1A:\n\t          case 0x66747970:\n\t          case 0x72726571:\n\t          case 0x72657320:\n\t          case 0x69686472:\n\t            break;\n\t          default:\n\t            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n\t            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n\t            break;\n\t        }\n\t        if (jumpDataLength) {\n\t          position += dataLength;\n\t        }\n\t      }\n\t    },\n\t    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n\t      var newByte = stream.getByte();\n\t      while (newByte >= 0) {\n\t        var oldByte = newByte;\n\t        newByte = stream.getByte();\n\t        var code = oldByte << 8 | newByte;\n\t        if (code === 0xFF51) {\n\t          stream.skip(4);\n\t          var Xsiz = stream.getInt32() >>> 0;\n\t          var Ysiz = stream.getInt32() >>> 0;\n\t          var XOsiz = stream.getInt32() >>> 0;\n\t          var YOsiz = stream.getInt32() >>> 0;\n\t          stream.skip(16);\n\t          var Csiz = stream.getUint16();\n\t          this.width = Xsiz - XOsiz;\n\t          this.height = Ysiz - YOsiz;\n\t          this.componentsCount = Csiz;\n\t          this.bitsPerComponent = 8;\n\t          return;\n\t        }\n\t      }\n\t      throw new JpxError('No size marker found in JPX stream');\n\t    },\n\t    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n\t      var context = {};\n\t      var doNotRecover = false;\n\t      try {\n\t        var position = start;\n\t        while (position + 1 < end) {\n\t          var code = (0, _util.readUint16)(data, position);\n\t          position += 2;\n\t          var length = 0,\n\t              j,\n\t              sqcd,\n\t              spqcds,\n\t              spqcdSize,\n\t              scalarExpounded,\n\t              tile;\n\t          switch (code) {\n\t            case 0xFF4F:\n\t              context.mainHeader = true;\n\t              break;\n\t            case 0xFFD9:\n\t              break;\n\t            case 0xFF51:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var siz = {};\n\t              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n\t              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n\t              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n\t              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n\t              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n\t              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n\t              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n\t              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n\t              var componentsCount = (0, _util.readUint16)(data, position + 36);\n\t              siz.Csiz = componentsCount;\n\t              var components = [];\n\t              j = position + 38;\n\t              for (var i = 0; i < componentsCount; i++) {\n\t                var component = {\n\t                  precision: (data[j] & 0x7F) + 1,\n\t                  isSigned: !!(data[j] & 0x80),\n\t                  XRsiz: data[j + 1],\n\t                  YRsiz: data[j + 2]\n\t                };\n\t                j += 3;\n\t                calculateComponentDimensions(component, siz);\n\t                components.push(component);\n\t              }\n\t              context.SIZ = siz;\n\t              context.components = components;\n\t              calculateTileGrids(context, components);\n\t              context.QCC = [];\n\t              context.COC = [];\n\t              break;\n\t            case 0xFF5C:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var qcd = {};\n\t              j = position + 2;\n\t              sqcd = data[j++];\n\t              switch (sqcd & 0x1F) {\n\t                case 0:\n\t                  spqcdSize = 8;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                case 1:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = false;\n\t                  break;\n\t                case 2:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                default:\n\t                  throw new Error('Invalid SQcd value ' + sqcd);\n\t              }\n\t              qcd.noQuantization = spqcdSize === 8;\n\t              qcd.scalarExpounded = scalarExpounded;\n\t              qcd.guardBits = sqcd >> 5;\n\t              spqcds = [];\n\t              while (j < length + position) {\n\t                var spqcd = {};\n\t                if (spqcdSize === 8) {\n\t                  spqcd.epsilon = data[j++] >> 3;\n\t                  spqcd.mu = 0;\n\t                } else {\n\t                  spqcd.epsilon = data[j] >> 3;\n\t                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t                  j += 2;\n\t                }\n\t                spqcds.push(spqcd);\n\t              }\n\t              qcd.SPqcds = spqcds;\n\t              if (context.mainHeader) {\n\t                context.QCD = qcd;\n\t              } else {\n\t                context.currentTile.QCD = qcd;\n\t                context.currentTile.QCC = [];\n\t              }\n\t              break;\n\t            case 0xFF5D:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var qcc = {};\n\t              j = position + 2;\n\t              var cqcc;\n\t              if (context.SIZ.Csiz < 257) {\n\t                cqcc = data[j++];\n\t              } else {\n\t                cqcc = (0, _util.readUint16)(data, j);\n\t                j += 2;\n\t              }\n\t              sqcd = data[j++];\n\t              switch (sqcd & 0x1F) {\n\t                case 0:\n\t                  spqcdSize = 8;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                case 1:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = false;\n\t                  break;\n\t                case 2:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                default:\n\t                  throw new Error('Invalid SQcd value ' + sqcd);\n\t              }\n\t              qcc.noQuantization = spqcdSize === 8;\n\t              qcc.scalarExpounded = scalarExpounded;\n\t              qcc.guardBits = sqcd >> 5;\n\t              spqcds = [];\n\t              while (j < length + position) {\n\t                spqcd = {};\n\t                if (spqcdSize === 8) {\n\t                  spqcd.epsilon = data[j++] >> 3;\n\t                  spqcd.mu = 0;\n\t                } else {\n\t                  spqcd.epsilon = data[j] >> 3;\n\t                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t                  j += 2;\n\t                }\n\t                spqcds.push(spqcd);\n\t              }\n\t              qcc.SPqcds = spqcds;\n\t              if (context.mainHeader) {\n\t                context.QCC[cqcc] = qcc;\n\t              } else {\n\t                context.currentTile.QCC[cqcc] = qcc;\n\t              }\n\t              break;\n\t            case 0xFF52:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var cod = {};\n\t              j = position + 2;\n\t              var scod = data[j++];\n\t              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n\t              cod.sopMarkerUsed = !!(scod & 2);\n\t              cod.ephMarkerUsed = !!(scod & 4);\n\t              cod.progressionOrder = data[j++];\n\t              cod.layersCount = (0, _util.readUint16)(data, j);\n\t              j += 2;\n\t              cod.multipleComponentTransform = data[j++];\n\t              cod.decompositionLevelsCount = data[j++];\n\t              cod.xcb = (data[j++] & 0xF) + 2;\n\t              cod.ycb = (data[j++] & 0xF) + 2;\n\t              var blockStyle = data[j++];\n\t              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n\t              cod.resetContextProbabilities = !!(blockStyle & 2);\n\t              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n\t              cod.verticalyStripe = !!(blockStyle & 8);\n\t              cod.predictableTermination = !!(blockStyle & 16);\n\t              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n\t              cod.reversibleTransformation = data[j++];\n\t              if (cod.entropyCoderWithCustomPrecincts) {\n\t                var precinctsSizes = [];\n\t                while (j < length + position) {\n\t                  var precinctsSize = data[j++];\n\t                  precinctsSizes.push({\n\t                    PPx: precinctsSize & 0xF,\n\t                    PPy: precinctsSize >> 4\n\t                  });\n\t                }\n\t                cod.precinctsSizes = precinctsSizes;\n\t              }\n\t              var unsupported = [];\n\t              if (cod.selectiveArithmeticCodingBypass) {\n\t                unsupported.push('selectiveArithmeticCodingBypass');\n\t              }\n\t              if (cod.resetContextProbabilities) {\n\t                unsupported.push('resetContextProbabilities');\n\t              }\n\t              if (cod.terminationOnEachCodingPass) {\n\t                unsupported.push('terminationOnEachCodingPass');\n\t              }\n\t              if (cod.verticalyStripe) {\n\t                unsupported.push('verticalyStripe');\n\t              }\n\t              if (cod.predictableTermination) {\n\t                unsupported.push('predictableTermination');\n\t              }\n\t              if (unsupported.length > 0) {\n\t                doNotRecover = true;\n\t                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n\t              }\n\t              if (context.mainHeader) {\n\t                context.COD = cod;\n\t              } else {\n\t                context.currentTile.COD = cod;\n\t                context.currentTile.COC = [];\n\t              }\n\t              break;\n\t            case 0xFF90:\n\t              length = (0, _util.readUint16)(data, position);\n\t              tile = {};\n\t              tile.index = (0, _util.readUint16)(data, position + 2);\n\t              tile.length = (0, _util.readUint32)(data, position + 4);\n\t              tile.dataEnd = tile.length + position - 2;\n\t              tile.partIndex = data[position + 8];\n\t              tile.partsCount = data[position + 9];\n\t              context.mainHeader = false;\n\t              if (tile.partIndex === 0) {\n\t                tile.COD = context.COD;\n\t                tile.COC = context.COC.slice(0);\n\t                tile.QCD = context.QCD;\n\t                tile.QCC = context.QCC.slice(0);\n\t              }\n\t              context.currentTile = tile;\n\t              break;\n\t            case 0xFF93:\n\t              tile = context.currentTile;\n\t              if (tile.partIndex === 0) {\n\t                initializeTile(context, tile.index);\n\t                buildPackets(context);\n\t              }\n\t              length = tile.dataEnd - position;\n\t              parseTilePackets(context, data, position, length);\n\t              break;\n\t            case 0xFF55:\n\t            case 0xFF57:\n\t            case 0xFF58:\n\t            case 0xFF64:\n\t              length = (0, _util.readUint16)(data, position);\n\t              break;\n\t            case 0xFF53:\n\t              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n\t            default:\n\t              throw new Error('Unknown codestream code: ' + code.toString(16));\n\t          }\n\t          position += length;\n\t        }\n\t      } catch (e) {\n\t        if (doNotRecover || this.failOnCorruptedImage) {\n\t          throw new JpxError(e.message);\n\t        } else {\n\t          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n\t        }\n\t      }\n\t      this.tiles = transformComponents(context);\n\t      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n\t      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n\t      this.componentsCount = context.SIZ.Csiz;\n\t    }\n\t  };\n\t  function calculateComponentDimensions(component, siz) {\n\t    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n\t    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n\t    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n\t    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n\t    component.width = component.x1 - component.x0;\n\t    component.height = component.y1 - component.y0;\n\t  }\n\t  function calculateTileGrids(context, components) {\n\t    var siz = context.SIZ;\n\t    var tile,\n\t        tiles = [];\n\t    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n\t    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n\t    for (var q = 0; q < numYtiles; q++) {\n\t      for (var p = 0; p < numXtiles; p++) {\n\t        tile = {};\n\t        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n\t        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n\t        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n\t        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n\t        tile.width = tile.tx1 - tile.tx0;\n\t        tile.height = tile.ty1 - tile.ty0;\n\t        tile.components = [];\n\t        tiles.push(tile);\n\t      }\n\t    }\n\t    context.tiles = tiles;\n\t    var componentsCount = siz.Csiz;\n\t    for (var i = 0, ii = componentsCount; i < ii; i++) {\n\t      var component = components[i];\n\t      for (var j = 0, jj = tiles.length; j < jj; j++) {\n\t        var tileComponent = {};\n\t        tile = tiles[j];\n\t        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n\t        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n\t        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n\t        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n\t        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n\t        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n\t        tile.components[i] = tileComponent;\n\t      }\n\t    }\n\t  }\n\t  function getBlocksDimensions(context, component, r) {\n\t    var codOrCoc = component.codingStyleParameters;\n\t    var result = {};\n\t    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n\t      result.PPx = 15;\n\t      result.PPy = 15;\n\t    } else {\n\t      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n\t      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n\t    }\n\t    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n\t    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n\t    return result;\n\t  }\n\t  function buildPrecincts(context, resolution, dimensions) {\n\t    var precinctWidth = 1 << dimensions.PPx;\n\t    var precinctHeight = 1 << dimensions.PPy;\n\t    var isZeroRes = resolution.resLevel === 0;\n\t    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n\t    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n\t    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n\t    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n\t    var numprecincts = numprecinctswide * numprecinctshigh;\n\t    resolution.precinctParameters = {\n\t      precinctWidth: precinctWidth,\n\t      precinctHeight: precinctHeight,\n\t      numprecinctswide: numprecinctswide,\n\t      numprecinctshigh: numprecinctshigh,\n\t      numprecincts: numprecincts,\n\t      precinctWidthInSubband: precinctWidthInSubband,\n\t      precinctHeightInSubband: precinctHeightInSubband\n\t    };\n\t  }\n\t  function buildCodeblocks(context, subband, dimensions) {\n\t    var xcb_ = dimensions.xcb_;\n\t    var ycb_ = dimensions.ycb_;\n\t    var codeblockWidth = 1 << xcb_;\n\t    var codeblockHeight = 1 << ycb_;\n\t    var cbx0 = subband.tbx0 >> xcb_;\n\t    var cby0 = subband.tby0 >> ycb_;\n\t    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n\t    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n\t    var precinctParameters = subband.resolution.precinctParameters;\n\t    var codeblocks = [];\n\t    var precincts = [];\n\t    var i, j, codeblock, precinctNumber;\n\t    for (j = cby0; j < cby1; j++) {\n\t      for (i = cbx0; i < cbx1; i++) {\n\t        codeblock = {\n\t          cbx: i,\n\t          cby: j,\n\t          tbx0: codeblockWidth * i,\n\t          tby0: codeblockHeight * j,\n\t          tbx1: codeblockWidth * (i + 1),\n\t          tby1: codeblockHeight * (j + 1)\n\t        };\n\t        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n\t        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n\t        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n\t        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\t        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n\t        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n\t        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\t        codeblock.precinctNumber = precinctNumber;\n\t        codeblock.subbandType = subband.type;\n\t        codeblock.Lblock = 3;\n\t        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n\t          continue;\n\t        }\n\t        codeblocks.push(codeblock);\n\t        var precinct = precincts[precinctNumber];\n\t        if (precinct !== undefined) {\n\t          if (i < precinct.cbxMin) {\n\t            precinct.cbxMin = i;\n\t          } else if (i > precinct.cbxMax) {\n\t            precinct.cbxMax = i;\n\t          }\n\t          if (j < precinct.cbyMin) {\n\t            precinct.cbxMin = j;\n\t          } else if (j > precinct.cbyMax) {\n\t            precinct.cbyMax = j;\n\t          }\n\t        } else {\n\t          precincts[precinctNumber] = precinct = {\n\t            cbxMin: i,\n\t            cbyMin: j,\n\t            cbxMax: i,\n\t            cbyMax: j\n\t          };\n\t        }\n\t        codeblock.precinct = precinct;\n\t      }\n\t    }\n\t    subband.codeblockParameters = {\n\t      codeblockWidth: xcb_,\n\t      codeblockHeight: ycb_,\n\t      numcodeblockwide: cbx1 - cbx0 + 1,\n\t      numcodeblockhigh: cby1 - cby0 + 1\n\t    };\n\t    subband.codeblocks = codeblocks;\n\t    subband.precincts = precincts;\n\t  }\n\t  function createPacket(resolution, precinctNumber, layerNumber) {\n\t    var precinctCodeblocks = [];\n\t    var subbands = resolution.subbands;\n\t    for (var i = 0, ii = subbands.length; i < ii; i++) {\n\t      var subband = subbands[i];\n\t      var codeblocks = subband.codeblocks;\n\t      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n\t        var codeblock = codeblocks[j];\n\t        if (codeblock.precinctNumber !== precinctNumber) {\n\t          continue;\n\t        }\n\t        precinctCodeblocks.push(codeblock);\n\t      }\n\t    }\n\t    return {\n\t      layerNumber: layerNumber,\n\t      codeblocks: precinctCodeblocks\n\t    };\n\t  }\n\t  function LayerResolutionComponentPositionIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var l = 0,\n\t        r = 0,\n\t        i = 0,\n\t        k = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; l < layersCount; l++) {\n\t        for (; r <= maxDecompositionLevelsCount; r++) {\n\t          for (; i < componentsCount; i++) {\n\t            var component = tile.components[i];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            for (; k < numprecincts;) {\n\t              var packet = createPacket(resolution, k, l);\n\t              k++;\n\t              return packet;\n\t            }\n\t            k = 0;\n\t          }\n\t          i = 0;\n\t        }\n\t        r = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ResolutionLayerComponentPositionIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var r = 0,\n\t        l = 0,\n\t        i = 0,\n\t        k = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; l < layersCount; l++) {\n\t          for (; i < componentsCount; i++) {\n\t            var component = tile.components[i];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            for (; k < numprecincts;) {\n\t              var packet = createPacket(resolution, k, l);\n\t              k++;\n\t              return packet;\n\t            }\n\t            k = 0;\n\t          }\n\t          i = 0;\n\t        }\n\t        l = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ResolutionPositionComponentLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var l, r, c, p;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n\t    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n\t      var maxNumPrecincts = 0;\n\t      for (c = 0; c < componentsCount; ++c) {\n\t        var resolutions = tile.components[c].resolutions;\n\t        if (r < resolutions.length) {\n\t          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n\t        }\n\t      }\n\t      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n\t    }\n\t    l = 0;\n\t    r = 0;\n\t    c = 0;\n\t    p = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n\t          for (; c < componentsCount; c++) {\n\t            var component = tile.components[c];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            if (p >= numprecincts) {\n\t              continue;\n\t            }\n\t            for (; l < layersCount;) {\n\t              var packet = createPacket(resolution, p, l);\n\t              l++;\n\t              return packet;\n\t            }\n\t            l = 0;\n\t          }\n\t          c = 0;\n\t        }\n\t        p = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function PositionComponentResolutionLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t    var precinctsIterationSizes = precinctsSizes;\n\t    var l = 0,\n\t        r = 0,\n\t        c = 0,\n\t        px = 0,\n\t        py = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t          for (; c < componentsCount; c++) {\n\t            var component = tile.components[c];\n\t            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t            for (; r <= decompositionLevelsCount; r++) {\n\t              var resolution = component.resolutions[r];\n\t              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n\t              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t              if (k === null) {\n\t                continue;\n\t              }\n\t              for (; l < layersCount;) {\n\t                var packet = createPacket(resolution, k, l);\n\t                l++;\n\t                return packet;\n\t              }\n\t              l = 0;\n\t            }\n\t            r = 0;\n\t          }\n\t          c = 0;\n\t        }\n\t        px = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ComponentPositionResolutionLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t    var l = 0,\n\t        r = 0,\n\t        c = 0,\n\t        px = 0,\n\t        py = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; c < componentsCount; ++c) {\n\t        var component = tile.components[c];\n\t        var precinctsIterationSizes = precinctsSizes.components[c];\n\t        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t            for (; r <= decompositionLevelsCount; r++) {\n\t              var resolution = component.resolutions[r];\n\t              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n\t              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t              if (k === null) {\n\t                continue;\n\t              }\n\t              for (; l < layersCount;) {\n\t                var packet = createPacket(resolution, k, l);\n\t                l++;\n\t                return packet;\n\t              }\n\t              l = 0;\n\t            }\n\t            r = 0;\n\t          }\n\t          px = 0;\n\t        }\n\t        py = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n\t    var posX = pxIndex * precinctIterationSizes.minWidth;\n\t    var posY = pyIndex * precinctIterationSizes.minHeight;\n\t    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n\t      return null;\n\t    }\n\t    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n\t    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n\t  }\n\t  function getPrecinctSizesInImageScale(tile) {\n\t    var componentsCount = tile.components.length;\n\t    var minWidth = Number.MAX_VALUE;\n\t    var minHeight = Number.MAX_VALUE;\n\t    var maxNumWide = 0;\n\t    var maxNumHigh = 0;\n\t    var sizePerComponent = new Array(componentsCount);\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n\t      var minWidthCurrentComponent = Number.MAX_VALUE;\n\t      var minHeightCurrentComponent = Number.MAX_VALUE;\n\t      var maxNumWideCurrentComponent = 0;\n\t      var maxNumHighCurrentComponent = 0;\n\t      var scale = 1;\n\t      for (var r = decompositionLevelsCount; r >= 0; --r) {\n\t        var resolution = component.resolutions[r];\n\t        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n\t        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n\t        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n\t        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n\t        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n\t        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n\t        sizePerResolution[r] = {\n\t          width: widthCurrentResolution,\n\t          height: heightCurrentResolution\n\t        };\n\t        scale <<= 1;\n\t      }\n\t      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n\t      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n\t      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n\t      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n\t      sizePerComponent[c] = {\n\t        resolutions: sizePerResolution,\n\t        minWidth: minWidthCurrentComponent,\n\t        minHeight: minHeightCurrentComponent,\n\t        maxNumWide: maxNumWideCurrentComponent,\n\t        maxNumHigh: maxNumHighCurrentComponent\n\t      };\n\t    }\n\t    return {\n\t      components: sizePerComponent,\n\t      minWidth: minWidth,\n\t      minHeight: minHeight,\n\t      maxNumWide: maxNumWide,\n\t      maxNumHigh: maxNumHigh\n\t    };\n\t  }\n\t  function buildPackets(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var componentsCount = siz.Csiz;\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var resolutions = [];\n\t      var subbands = [];\n\t      for (var r = 0; r <= decompositionLevelsCount; r++) {\n\t        var blocksDimensions = getBlocksDimensions(context, component, r);\n\t        var resolution = {};\n\t        var scale = 1 << decompositionLevelsCount - r;\n\t        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n\t        resolution.try0 = Math.ceil(component.tcy0 / scale);\n\t        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n\t        resolution.try1 = Math.ceil(component.tcy1 / scale);\n\t        resolution.resLevel = r;\n\t        buildPrecincts(context, resolution, blocksDimensions);\n\t        resolutions.push(resolution);\n\t        var subband;\n\t        if (r === 0) {\n\t          subband = {};\n\t          subband.type = 'LL';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n\t          subband.tby0 = Math.ceil(component.tcy0 / scale);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n\t          subband.tby1 = Math.ceil(component.tcy1 / scale);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolution.subbands = [subband];\n\t        } else {\n\t          var bscale = 1 << decompositionLevelsCount - r + 1;\n\t          var resolutionSubbands = [];\n\t          subband = {};\n\t          subband.type = 'HL';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          subband = {};\n\t          subband.type = 'LH';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          subband = {};\n\t          subband.type = 'HH';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          resolution.subbands = resolutionSubbands;\n\t        }\n\t      }\n\t      component.resolutions = resolutions;\n\t      component.subbands = subbands;\n\t    }\n\t    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n\t    switch (progressionOrder) {\n\t      case 0:\n\t        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n\t        break;\n\t      case 1:\n\t        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n\t        break;\n\t      case 2:\n\t        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n\t        break;\n\t      case 3:\n\t        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n\t        break;\n\t      case 4:\n\t        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n\t        break;\n\t      default:\n\t        throw new JpxError('Unsupported progression order ' + progressionOrder);\n\t    }\n\t  }\n\t  function parseTilePackets(context, data, offset, dataLength) {\n\t    var position = 0;\n\t    var buffer,\n\t        bufferSize = 0,\n\t        skipNextBit = false;\n\t    function readBits(count) {\n\t      while (bufferSize < count) {\n\t        var b = data[offset + position];\n\t        position++;\n\t        if (skipNextBit) {\n\t          buffer = buffer << 7 | b;\n\t          bufferSize += 7;\n\t          skipNextBit = false;\n\t        } else {\n\t          buffer = buffer << 8 | b;\n\t          bufferSize += 8;\n\t        }\n\t        if (b === 0xFF) {\n\t          skipNextBit = true;\n\t        }\n\t      }\n\t      bufferSize -= count;\n\t      return buffer >>> bufferSize & (1 << count) - 1;\n\t    }\n\t    function skipMarkerIfEqual(value) {\n\t      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n\t        skipBytes(1);\n\t        return true;\n\t      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n\t        skipBytes(2);\n\t        return true;\n\t      }\n\t      return false;\n\t    }\n\t    function skipBytes(count) {\n\t      position += count;\n\t    }\n\t    function alignToByte() {\n\t      bufferSize = 0;\n\t      if (skipNextBit) {\n\t        position++;\n\t        skipNextBit = false;\n\t      }\n\t    }\n\t    function readCodingpasses() {\n\t      if (readBits(1) === 0) {\n\t        return 1;\n\t      }\n\t      if (readBits(1) === 0) {\n\t        return 2;\n\t      }\n\t      var value = readBits(2);\n\t      if (value < 3) {\n\t        return value + 3;\n\t      }\n\t      value = readBits(5);\n\t      if (value < 31) {\n\t        return value + 6;\n\t      }\n\t      value = readBits(7);\n\t      return value + 37;\n\t    }\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var sopMarkerUsed = context.COD.sopMarkerUsed;\n\t    var ephMarkerUsed = context.COD.ephMarkerUsed;\n\t    var packetsIterator = tile.packetsIterator;\n\t    while (position < dataLength) {\n\t      alignToByte();\n\t      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n\t        skipBytes(4);\n\t      }\n\t      var packet = packetsIterator.nextPacket();\n\t      if (!readBits(1)) {\n\t        continue;\n\t      }\n\t      var layerNumber = packet.layerNumber;\n\t      var queue = [],\n\t          codeblock;\n\t      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n\t        codeblock = packet.codeblocks[i];\n\t        var precinct = codeblock.precinct;\n\t        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n\t        var codeblockRow = codeblock.cby - precinct.cbyMin;\n\t        var codeblockIncluded = false;\n\t        var firstTimeInclusion = false;\n\t        var valueReady;\n\t        if (codeblock['included'] !== undefined) {\n\t          codeblockIncluded = !!readBits(1);\n\t        } else {\n\t          precinct = codeblock.precinct;\n\t          var inclusionTree, zeroBitPlanesTree;\n\t          if (precinct['inclusionTree'] !== undefined) {\n\t            inclusionTree = precinct.inclusionTree;\n\t          } else {\n\t            var width = precinct.cbxMax - precinct.cbxMin + 1;\n\t            var height = precinct.cbyMax - precinct.cbyMin + 1;\n\t            inclusionTree = new InclusionTree(width, height, layerNumber);\n\t            zeroBitPlanesTree = new TagTree(width, height);\n\t            precinct.inclusionTree = inclusionTree;\n\t            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n\t          }\n\t          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n\t            while (true) {\n\t              if (readBits(1)) {\n\t                valueReady = !inclusionTree.nextLevel();\n\t                if (valueReady) {\n\t                  codeblock.included = true;\n\t                  codeblockIncluded = firstTimeInclusion = true;\n\t                  break;\n\t                }\n\t              } else {\n\t                inclusionTree.incrementValue(layerNumber);\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (!codeblockIncluded) {\n\t          continue;\n\t        }\n\t        if (firstTimeInclusion) {\n\t          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n\t          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n\t          while (true) {\n\t            if (readBits(1)) {\n\t              valueReady = !zeroBitPlanesTree.nextLevel();\n\t              if (valueReady) {\n\t                break;\n\t              }\n\t            } else {\n\t              zeroBitPlanesTree.incrementValue();\n\t            }\n\t          }\n\t          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n\t        }\n\t        var codingpasses = readCodingpasses();\n\t        while (readBits(1)) {\n\t          codeblock.Lblock++;\n\t        }\n\t        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n\t        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n\t        var codedDataLength = readBits(bits);\n\t        queue.push({\n\t          codeblock: codeblock,\n\t          codingpasses: codingpasses,\n\t          dataLength: codedDataLength\n\t        });\n\t      }\n\t      alignToByte();\n\t      if (ephMarkerUsed) {\n\t        skipMarkerIfEqual(0x92);\n\t      }\n\t      while (queue.length > 0) {\n\t        var packetItem = queue.shift();\n\t        codeblock = packetItem.codeblock;\n\t        if (codeblock['data'] === undefined) {\n\t          codeblock.data = [];\n\t        }\n\t        codeblock.data.push({\n\t          data: data,\n\t          start: offset + position,\n\t          end: offset + position + packetItem.dataLength,\n\t          codingpasses: packetItem.codingpasses\n\t        });\n\t        position += packetItem.dataLength;\n\t      }\n\t    }\n\t    return position;\n\t  }\n\t  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n\t    var x0 = subband.tbx0;\n\t    var y0 = subband.tby0;\n\t    var width = subband.tbx1 - subband.tbx0;\n\t    var codeblocks = subband.codeblocks;\n\t    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n\t    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n\t    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n\t      var codeblock = codeblocks[i];\n\t      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n\t      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n\t      if (blockWidth === 0 || blockHeight === 0) {\n\t        continue;\n\t      }\n\t      if (codeblock['data'] === undefined) {\n\t        continue;\n\t      }\n\t      var bitModel, currentCodingpassType;\n\t      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n\t      currentCodingpassType = 2;\n\t      var data = codeblock.data,\n\t          totalLength = 0,\n\t          codingpasses = 0;\n\t      var j, jj, dataItem;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t        dataItem = data[j];\n\t        totalLength += dataItem.end - dataItem.start;\n\t        codingpasses += dataItem.codingpasses;\n\t      }\n\t      var encodedData = new Uint8Array(totalLength);\n\t      var position = 0;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t        dataItem = data[j];\n\t        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n\t        encodedData.set(chunk, position);\n\t        position += chunk.length;\n\t      }\n\t      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n\t      bitModel.setDecoder(decoder);\n\t      for (j = 0; j < codingpasses; j++) {\n\t        switch (currentCodingpassType) {\n\t          case 0:\n\t            bitModel.runSignificancePropagationPass();\n\t            break;\n\t          case 1:\n\t            bitModel.runMagnitudeRefinementPass();\n\t            break;\n\t          case 2:\n\t            bitModel.runCleanupPass();\n\t            if (segmentationSymbolUsed) {\n\t              bitModel.checkSegmentationSymbol();\n\t            }\n\t            break;\n\t        }\n\t        currentCodingpassType = (currentCodingpassType + 1) % 3;\n\t      }\n\t      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n\t      var sign = bitModel.coefficentsSign;\n\t      var magnitude = bitModel.coefficentsMagnitude;\n\t      var bitsDecoded = bitModel.bitsDecoded;\n\t      var magnitudeCorrection = reversible ? 0 : 0.5;\n\t      var k, n, nb;\n\t      position = 0;\n\t      var interleave = subband.type !== 'LL';\n\t      for (j = 0; j < blockHeight; j++) {\n\t        var row = offset / width | 0;\n\t        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n\t        for (k = 0; k < blockWidth; k++) {\n\t          n = magnitude[position];\n\t          if (n !== 0) {\n\t            n = (n + magnitudeCorrection) * delta;\n\t            if (sign[position] !== 0) {\n\t              n = -n;\n\t            }\n\t            nb = bitsDecoded[position];\n\t            var pos = interleave ? levelOffset + (offset << 1) : offset;\n\t            if (reversible && nb >= mb) {\n\t              coefficients[pos] = n;\n\t            } else {\n\t              coefficients[pos] = n * (1 << mb - nb);\n\t            }\n\t          }\n\t          offset++;\n\t          position++;\n\t        }\n\t        offset += width - blockWidth;\n\t      }\n\t    }\n\t  }\n\t  function transformTile(context, tile, c) {\n\t    var component = tile.components[c];\n\t    var codingStyleParameters = component.codingStyleParameters;\n\t    var quantizationParameters = component.quantizationParameters;\n\t    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n\t    var spqcds = quantizationParameters.SPqcds;\n\t    var scalarExpounded = quantizationParameters.scalarExpounded;\n\t    var guardBits = quantizationParameters.guardBits;\n\t    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n\t    var precision = context.components[c].precision;\n\t    var reversible = codingStyleParameters.reversibleTransformation;\n\t    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n\t    var subbandCoefficients = [];\n\t    var b = 0;\n\t    for (var i = 0; i <= decompositionLevelsCount; i++) {\n\t      var resolution = component.resolutions[i];\n\t      var width = resolution.trx1 - resolution.trx0;\n\t      var height = resolution.try1 - resolution.try0;\n\t      var coefficients = new Float32Array(width * height);\n\t      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n\t        var mu, epsilon;\n\t        if (!scalarExpounded) {\n\t          mu = spqcds[0].mu;\n\t          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n\t        } else {\n\t          mu = spqcds[b].mu;\n\t          epsilon = spqcds[b].epsilon;\n\t          b++;\n\t        }\n\t        var subband = resolution.subbands[j];\n\t        var gainLog2 = SubbandsGainLog2[subband.type];\n\t        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n\t        var mb = guardBits + epsilon - 1;\n\t        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n\t      }\n\t      subbandCoefficients.push({\n\t        width: width,\n\t        height: height,\n\t        items: coefficients\n\t      });\n\t    }\n\t    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n\t    return {\n\t      left: component.tcx0,\n\t      top: component.tcy0,\n\t      width: result.width,\n\t      height: result.height,\n\t      items: result.items\n\t    };\n\t  }\n\t  function transformComponents(context) {\n\t    var siz = context.SIZ;\n\t    var components = context.components;\n\t    var componentsCount = siz.Csiz;\n\t    var resultImages = [];\n\t    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n\t      var tile = context.tiles[i];\n\t      var transformedTiles = [];\n\t      var c;\n\t      for (c = 0; c < componentsCount; c++) {\n\t        transformedTiles[c] = transformTile(context, tile, c);\n\t      }\n\t      var tile0 = transformedTiles[0];\n\t      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n\t      var result = {\n\t        left: tile0.left,\n\t        top: tile0.top,\n\t        width: tile0.width,\n\t        height: tile0.height,\n\t        items: out\n\t      };\n\t      var shift, offset;\n\t      var pos = 0,\n\t          j,\n\t          jj,\n\t          y0,\n\t          y1,\n\t          y2;\n\t      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n\t        var fourComponents = componentsCount === 4;\n\t        var y0items = transformedTiles[0].items;\n\t        var y1items = transformedTiles[1].items;\n\t        var y2items = transformedTiles[2].items;\n\t        var y3items = fourComponents ? transformedTiles[3].items : null;\n\t        shift = components[0].precision - 8;\n\t        offset = (128 << shift) + 0.5;\n\t        var component0 = tile.components[0];\n\t        var alpha01 = componentsCount - 3;\n\t        jj = y0items.length;\n\t        if (!component0.codingStyleParameters.reversibleTransformation) {\n\t          for (j = 0; j < jj; j++, pos += alpha01) {\n\t            y0 = y0items[j] + offset;\n\t            y1 = y1items[j];\n\t            y2 = y2items[j];\n\t            out[pos++] = y0 + 1.402 * y2 >> shift;\n\t            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n\t            out[pos++] = y0 + 1.772 * y1 >> shift;\n\t          }\n\t        } else {\n\t          for (j = 0; j < jj; j++, pos += alpha01) {\n\t            y0 = y0items[j] + offset;\n\t            y1 = y1items[j];\n\t            y2 = y2items[j];\n\t            var g = y0 - (y2 + y1 >> 2);\n\t            out[pos++] = g + y2 >> shift;\n\t            out[pos++] = g >> shift;\n\t            out[pos++] = g + y1 >> shift;\n\t          }\n\t        }\n\t        if (fourComponents) {\n\t          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n\t            out[pos] = y3items[j] + offset >> shift;\n\t          }\n\t        }\n\t      } else {\n\t        for (c = 0; c < componentsCount; c++) {\n\t          var items = transformedTiles[c].items;\n\t          shift = components[c].precision - 8;\n\t          offset = (128 << shift) + 0.5;\n\t          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n\t            out[pos] = items[j] + offset >> shift;\n\t            pos += componentsCount;\n\t          }\n\t        }\n\t      }\n\t      resultImages.push(result);\n\t    }\n\t    return resultImages;\n\t  }\n\t  function initializeTile(context, tileIndex) {\n\t    var siz = context.SIZ;\n\t    var componentsCount = siz.Csiz;\n\t    var tile = context.tiles[tileIndex];\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n\t      component.quantizationParameters = qcdOrQcc;\n\t      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n\t      component.codingStyleParameters = codOrCoc;\n\t    }\n\t    tile.codingStyleDefaultParameters = context.currentTile.COD;\n\t  }\n\t  var TagTree = function TagTreeClosure() {\n\t    function TagTree(width, height) {\n\t      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t        var level = {\n\t          width: width,\n\t          height: height,\n\t          items: []\n\t        };\n\t        this.levels.push(level);\n\t        width = Math.ceil(width / 2);\n\t        height = Math.ceil(height / 2);\n\t      }\n\t    }\n\t    TagTree.prototype = {\n\t      reset: function TagTree_reset(i, j) {\n\t        var currentLevel = 0,\n\t            value = 0,\n\t            level;\n\t        while (currentLevel < this.levels.length) {\n\t          level = this.levels[currentLevel];\n\t          var index = i + j * level.width;\n\t          if (level.items[index] !== undefined) {\n\t            value = level.items[index];\n\t            break;\n\t          }\n\t          level.index = index;\n\t          i >>= 1;\n\t          j >>= 1;\n\t          currentLevel++;\n\t        }\n\t        currentLevel--;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        this.currentLevel = currentLevel;\n\t        delete this.value;\n\t      },\n\t      incrementValue: function TagTree_incrementValue() {\n\t        var level = this.levels[this.currentLevel];\n\t        level.items[level.index]++;\n\t      },\n\t      nextLevel: function TagTree_nextLevel() {\n\t        var currentLevel = this.currentLevel;\n\t        var level = this.levels[currentLevel];\n\t        var value = level.items[level.index];\n\t        currentLevel--;\n\t        if (currentLevel < 0) {\n\t          this.value = value;\n\t          return false;\n\t        }\n\t        this.currentLevel = currentLevel;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        return true;\n\t      }\n\t    };\n\t    return TagTree;\n\t  }();\n\t  var InclusionTree = function InclusionTreeClosure() {\n\t    function InclusionTree(width, height, defaultValue) {\n\t      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t        var items = new Uint8Array(width * height);\n\t        for (var j = 0, jj = items.length; j < jj; j++) {\n\t          items[j] = defaultValue;\n\t        }\n\t        var level = {\n\t          width: width,\n\t          height: height,\n\t          items: items\n\t        };\n\t        this.levels.push(level);\n\t        width = Math.ceil(width / 2);\n\t        height = Math.ceil(height / 2);\n\t      }\n\t    }\n\t    InclusionTree.prototype = {\n\t      reset: function InclusionTree_reset(i, j, stopValue) {\n\t        var currentLevel = 0;\n\t        while (currentLevel < this.levels.length) {\n\t          var level = this.levels[currentLevel];\n\t          var index = i + j * level.width;\n\t          level.index = index;\n\t          var value = level.items[index];\n\t          if (value === 0xFF) {\n\t            break;\n\t          }\n\t          if (value > stopValue) {\n\t            this.currentLevel = currentLevel;\n\t            this.propagateValues();\n\t            return false;\n\t          }\n\t          i >>= 1;\n\t          j >>= 1;\n\t          currentLevel++;\n\t        }\n\t        this.currentLevel = currentLevel - 1;\n\t        return true;\n\t      },\n\t      incrementValue: function InclusionTree_incrementValue(stopValue) {\n\t        var level = this.levels[this.currentLevel];\n\t        level.items[level.index] = stopValue + 1;\n\t        this.propagateValues();\n\t      },\n\t      propagateValues: function InclusionTree_propagateValues() {\n\t        var levelIndex = this.currentLevel;\n\t        var level = this.levels[levelIndex];\n\t        var currentValue = level.items[level.index];\n\t        while (--levelIndex >= 0) {\n\t          level = this.levels[levelIndex];\n\t          level.items[level.index] = currentValue;\n\t        }\n\t      },\n\t      nextLevel: function InclusionTree_nextLevel() {\n\t        var currentLevel = this.currentLevel;\n\t        var level = this.levels[currentLevel];\n\t        var value = level.items[level.index];\n\t        level.items[level.index] = 0xFF;\n\t        currentLevel--;\n\t        if (currentLevel < 0) {\n\t          return false;\n\t        }\n\t        this.currentLevel = currentLevel;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        return true;\n\t      }\n\t    };\n\t    return InclusionTree;\n\t  }();\n\t  var BitModel = function BitModelClosure() {\n\t    var UNIFORM_CONTEXT = 17;\n\t    var RUNLENGTH_CONTEXT = 18;\n\t    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n\t    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n\t    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n\t    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n\t      this.width = width;\n\t      this.height = height;\n\t      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n\t      var coefficientCount = width * height;\n\t      this.neighborsSignificance = new Uint8Array(coefficientCount);\n\t      this.coefficentsSign = new Uint8Array(coefficientCount);\n\t      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n\t      this.processingFlags = new Uint8Array(coefficientCount);\n\t      var bitsDecoded = new Uint8Array(coefficientCount);\n\t      if (zeroBitPlanes !== 0) {\n\t        for (var i = 0; i < coefficientCount; i++) {\n\t          bitsDecoded[i] = zeroBitPlanes;\n\t        }\n\t      }\n\t      this.bitsDecoded = bitsDecoded;\n\t      this.reset();\n\t    }\n\t    BitModel.prototype = {\n\t      setDecoder: function BitModel_setDecoder(decoder) {\n\t        this.decoder = decoder;\n\t      },\n\t      reset: function BitModel_reset() {\n\t        this.contexts = new Int8Array(19);\n\t        this.contexts[0] = 4 << 1 | 0;\n\t        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n\t        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n\t      },\n\t      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var left = column > 0;\n\t        var right = column + 1 < width;\n\t        var i;\n\t        if (row > 0) {\n\t          i = index - width;\n\t          if (left) {\n\t            neighborsSignificance[i - 1] += 0x10;\n\t          }\n\t          if (right) {\n\t            neighborsSignificance[i + 1] += 0x10;\n\t          }\n\t          neighborsSignificance[i] += 0x04;\n\t        }\n\t        if (row + 1 < height) {\n\t          i = index + width;\n\t          if (left) {\n\t            neighborsSignificance[i - 1] += 0x10;\n\t          }\n\t          if (right) {\n\t            neighborsSignificance[i + 1] += 0x10;\n\t          }\n\t          neighborsSignificance[i] += 0x04;\n\t        }\n\t        if (left) {\n\t          neighborsSignificance[index - 1] += 0x01;\n\t        }\n\t        if (right) {\n\t          neighborsSignificance[index + 1] += 0x01;\n\t        }\n\t        neighborsSignificance[index] |= 0x80;\n\t      },\n\t      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var processingFlags = this.processingFlags;\n\t        var contexts = this.contexts;\n\t        var labels = this.contextLabelTable;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processedInverseMask = ~1;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        for (var i0 = 0; i0 < height; i0 += 4) {\n\t          for (var j = 0; j < width; j++) {\n\t            var index = i0 * width + j;\n\t            for (var i1 = 0; i1 < 4; i1++, index += width) {\n\t              var i = i0 + i1;\n\t              if (i >= height) {\n\t                break;\n\t              }\n\t              processingFlags[index] &= processedInverseMask;\n\t              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n\t                continue;\n\t              }\n\t              var contextLabel = labels[neighborsSignificance[index]];\n\t              var decision = decoder.readBit(contexts, contextLabel);\n\t              if (decision) {\n\t                var sign = this.decodeSignBit(i, j, index);\n\t                coefficentsSign[index] = sign;\n\t                coefficentsMagnitude[index] = 1;\n\t                this.setNeighborsSignificance(i, j, index);\n\t                processingFlags[index] |= firstMagnitudeBitMask;\n\t              }\n\t              bitsDecoded[index]++;\n\t              processingFlags[index] |= processedMask;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var contribution, sign0, sign1, significance1;\n\t        var contextLabel, decoded;\n\t        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n\t        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n\t          sign1 = coefficentsSign[index + 1];\n\t          if (significance1) {\n\t            sign0 = coefficentsSign[index - 1];\n\t            contribution = 1 - sign1 - sign0;\n\t          } else {\n\t            contribution = 1 - sign1 - sign1;\n\t          }\n\t        } else if (significance1) {\n\t          sign0 = coefficentsSign[index - 1];\n\t          contribution = 1 - sign0 - sign0;\n\t        } else {\n\t          contribution = 0;\n\t        }\n\t        var horizontalContribution = 3 * contribution;\n\t        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n\t        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n\t          sign1 = coefficentsSign[index + width];\n\t          if (significance1) {\n\t            sign0 = coefficentsSign[index - width];\n\t            contribution = 1 - sign1 - sign0 + horizontalContribution;\n\t          } else {\n\t            contribution = 1 - sign1 - sign1 + horizontalContribution;\n\t          }\n\t        } else if (significance1) {\n\t          sign0 = coefficentsSign[index - width];\n\t          contribution = 1 - sign0 - sign0 + horizontalContribution;\n\t        } else {\n\t          contribution = horizontalContribution;\n\t        }\n\t        if (contribution >= 0) {\n\t          contextLabel = 9 + contribution;\n\t          decoded = this.decoder.readBit(this.contexts, contextLabel);\n\t        } else {\n\t          contextLabel = 9 - contribution;\n\t          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n\t        }\n\t        return decoded;\n\t      },\n\t      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var contexts = this.contexts;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processingFlags = this.processingFlags;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        var length = width * height;\n\t        var width4 = width * 4;\n\t        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n\t          indexNext = Math.min(length, index0 + width4);\n\t          for (var j = 0; j < width; j++) {\n\t            for (var index = index0 + j; index < indexNext; index += width) {\n\t              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t                continue;\n\t              }\n\t              var contextLabel = 16;\n\t              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n\t                processingFlags[index] ^= firstMagnitudeBitMask;\n\t                var significance = neighborsSignificance[index] & 127;\n\t                contextLabel = significance === 0 ? 15 : 14;\n\t              }\n\t              var bit = decoder.readBit(contexts, contextLabel);\n\t              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n\t              bitsDecoded[index]++;\n\t              processingFlags[index] |= processedMask;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      runCleanupPass: function BitModel_runCleanupPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var contexts = this.contexts;\n\t        var labels = this.contextLabelTable;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processingFlags = this.processingFlags;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        var oneRowDown = width;\n\t        var twoRowsDown = width * 2;\n\t        var threeRowsDown = width * 3;\n\t        var iNext;\n\t        for (var i0 = 0; i0 < height; i0 = iNext) {\n\t          iNext = Math.min(i0 + 4, height);\n\t          var indexBase = i0 * width;\n\t          var checkAllEmpty = i0 + 3 < height;\n\t          for (var j = 0; j < width; j++) {\n\t            var index0 = indexBase + j;\n\t            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n\t            var i1 = 0,\n\t                index = index0;\n\t            var i = i0,\n\t                sign;\n\t            if (allEmpty) {\n\t              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n\t              if (!hasSignificantCoefficent) {\n\t                bitsDecoded[index0]++;\n\t                bitsDecoded[index0 + oneRowDown]++;\n\t                bitsDecoded[index0 + twoRowsDown]++;\n\t                bitsDecoded[index0 + threeRowsDown]++;\n\t                continue;\n\t              }\n\t              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t              if (i1 !== 0) {\n\t                i = i0 + i1;\n\t                index += i1 * width;\n\t              }\n\t              sign = this.decodeSignBit(i, j, index);\n\t              coefficentsSign[index] = sign;\n\t              coefficentsMagnitude[index] = 1;\n\t              this.setNeighborsSignificance(i, j, index);\n\t              processingFlags[index] |= firstMagnitudeBitMask;\n\t              index = index0;\n\t              for (var i2 = i0; i2 <= i; i2++, index += width) {\n\t                bitsDecoded[index]++;\n\t              }\n\t              i1++;\n\t            }\n\t            for (i = i0 + i1; i < iNext; i++, index += width) {\n\t              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t                continue;\n\t              }\n\t              var contextLabel = labels[neighborsSignificance[index]];\n\t              var decision = decoder.readBit(contexts, contextLabel);\n\t              if (decision === 1) {\n\t                sign = this.decodeSignBit(i, j, index);\n\t                coefficentsSign[index] = sign;\n\t                coefficentsMagnitude[index] = 1;\n\t                this.setNeighborsSignificance(i, j, index);\n\t                processingFlags[index] |= firstMagnitudeBitMask;\n\t              }\n\t              bitsDecoded[index]++;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n\t        var decoder = this.decoder;\n\t        var contexts = this.contexts;\n\t        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t        if (symbol !== 0xA) {\n\t          throw new JpxError('Invalid segmentation symbol');\n\t        }\n\t      }\n\t    };\n\t    return BitModel;\n\t  }();\n\t  var Transform = function TransformClosure() {\n\t    function Transform() {}\n\t    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n\t      var ll = subbands[0];\n\t      for (var i = 1, ii = subbands.length; i < ii; i++) {\n\t        ll = this.iterate(ll, subbands[i], u0, v0);\n\t      }\n\t      return ll;\n\t    };\n\t    Transform.prototype.extend = function extend(buffer, offset, size) {\n\t      var i1 = offset - 1,\n\t          j1 = offset + 1;\n\t      var i2 = offset + size - 2,\n\t          j2 = offset + size;\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1] = buffer[j1];\n\t      buffer[j2] = buffer[i2];\n\t    };\n\t    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n\t      var llWidth = ll.width,\n\t          llHeight = ll.height,\n\t          llItems = ll.items;\n\t      var width = hl_lh_hh.width;\n\t      var height = hl_lh_hh.height;\n\t      var items = hl_lh_hh.items;\n\t      var i, j, k, l, u, v;\n\t      for (k = 0, i = 0; i < llHeight; i++) {\n\t        l = i * 2 * width;\n\t        for (j = 0; j < llWidth; j++, k++, l += 2) {\n\t          items[l] = llItems[k];\n\t        }\n\t      }\n\t      llItems = ll.items = null;\n\t      var bufferPadding = 4;\n\t      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\t      if (width === 1) {\n\t        if ((u0 & 1) !== 0) {\n\t          for (v = 0, k = 0; v < height; v++, k += width) {\n\t            items[k] *= 0.5;\n\t          }\n\t        }\n\t      } else {\n\t        for (v = 0, k = 0; v < height; v++, k += width) {\n\t          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\t          this.extend(rowBuffer, bufferPadding, width);\n\t          this.filter(rowBuffer, bufferPadding, width);\n\t          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n\t        }\n\t      }\n\t      var numBuffers = 16;\n\t      var colBuffers = [];\n\t      for (i = 0; i < numBuffers; i++) {\n\t        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n\t      }\n\t      var b,\n\t          currentBuffer = 0;\n\t      ll = bufferPadding + height;\n\t      if (height === 1) {\n\t        if ((v0 & 1) !== 0) {\n\t          for (u = 0; u < width; u++) {\n\t            items[u] *= 0.5;\n\t          }\n\t        }\n\t      } else {\n\t        for (u = 0; u < width; u++) {\n\t          if (currentBuffer === 0) {\n\t            numBuffers = Math.min(width - u, numBuffers);\n\t            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n\t              for (b = 0; b < numBuffers; b++) {\n\t                colBuffers[b][l] = items[k + b];\n\t              }\n\t            }\n\t            currentBuffer = numBuffers;\n\t          }\n\t          currentBuffer--;\n\t          var buffer = colBuffers[currentBuffer];\n\t          this.extend(buffer, bufferPadding, height);\n\t          this.filter(buffer, bufferPadding, height);\n\t          if (currentBuffer === 0) {\n\t            k = u - numBuffers + 1;\n\t            for (l = bufferPadding; l < ll; k += width, l++) {\n\t              for (b = 0; b < numBuffers; b++) {\n\t                items[k + b] = colBuffers[b][l];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return {\n\t        width: width,\n\t        height: height,\n\t        items: items\n\t      };\n\t    };\n\t    return Transform;\n\t  }();\n\t  var IrreversibleTransform = function IrreversibleTransformClosure() {\n\t    function IrreversibleTransform() {\n\t      Transform.call(this);\n\t    }\n\t    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n\t    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n, current, next;\n\t      var alpha = -1.586134342059924;\n\t      var beta = -0.052980118572961;\n\t      var gamma = 0.882911075530934;\n\t      var delta = 0.443506852043971;\n\t      var K = 1.230174104914001;\n\t      var K_ = 1 / K;\n\t      j = offset - 3;\n\t      for (n = len + 4; n--; j += 2) {\n\t        x[j] *= K_;\n\t      }\n\t      j = offset - 2;\n\t      current = delta * x[j - 1];\n\t      for (n = len + 3; n--; j += 2) {\n\t        next = delta * x[j + 1];\n\t        x[j] = K * x[j] - current - next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = delta * x[j + 1];\n\t          x[j] = K * x[j] - current - next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      j = offset - 1;\n\t      current = gamma * x[j - 1];\n\t      for (n = len + 2; n--; j += 2) {\n\t        next = gamma * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = gamma * x[j + 1];\n\t          x[j] -= current + next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      j = offset;\n\t      current = beta * x[j - 1];\n\t      for (n = len + 1; n--; j += 2) {\n\t        next = beta * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = beta * x[j + 1];\n\t          x[j] -= current + next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (len !== 0) {\n\t        j = offset + 1;\n\t        current = alpha * x[j - 1];\n\t        for (n = len; n--; j += 2) {\n\t          next = alpha * x[j + 1];\n\t          x[j] -= current + next;\n\t          if (n--) {\n\t            j += 2;\n\t            current = alpha * x[j + 1];\n\t            x[j] -= current + next;\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    };\n\t    return IrreversibleTransform;\n\t  }();\n\t  var ReversibleTransform = function ReversibleTransformClosure() {\n\t    function ReversibleTransform() {\n\t      Transform.call(this);\n\t    }\n\t    ReversibleTransform.prototype = Object.create(Transform.prototype);\n\t    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n;\n\t      for (j = offset, n = len + 1; n--; j += 2) {\n\t        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n\t      }\n\t      for (j = offset + 1, n = len; n--; j += 2) {\n\t        x[j] += x[j - 1] + x[j + 1] >> 1;\n\t      }\n\t    };\n\t    return ReversibleTransform;\n\t  }();\n\t  return JpxImage;\n\t}();\n\texports.JpxImage = JpxImage;\n\n/***/ },\n\n/***/ 408:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _parser = __webpack_require__(122);\n\t\n\tvar _chunked_stream = __webpack_require__(404);\n\t\n\tvar _crypto = __webpack_require__(405);\n\t\n\tvar _colorspace = __webpack_require__(97);\n\t\n\tvar Catalog = function CatalogClosure() {\n\t  function Catalog(pdfManager, xref, pageFactory) {\n\t    this.pdfManager = pdfManager;\n\t    this.xref = xref;\n\t    this.catDict = xref.getCatalogObj();\n\t    if (!(0, _primitives.isDict)(this.catDict)) {\n\t      throw new _util.FormatError('catalog object is not a dictionary');\n\t    }\n\t    this.fontCache = new _primitives.RefSetCache();\n\t    this.builtInCMapCache = Object.create(null);\n\t    this.pageKidsCountCache = new _primitives.RefSetCache();\n\t    this.pageFactory = pageFactory;\n\t    this.pagePromises = [];\n\t  }\n\t  Catalog.prototype = {\n\t    get metadata() {\n\t      var streamRef = this.catDict.getRaw('Metadata');\n\t      if (!(0, _primitives.isRef)(streamRef)) {\n\t        return (0, _util.shadow)(this, 'metadata', null);\n\t      }\n\t      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n\t      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n\t      var metadata;\n\t      if (stream && (0, _primitives.isDict)(stream.dict)) {\n\t        var type = stream.dict.get('Type');\n\t        var subtype = stream.dict.get('Subtype');\n\t        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n\t          try {\n\t            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n\t          } catch (e) {\n\t            if (e instanceof _util.MissingDataException) {\n\t              throw e;\n\t            }\n\t            (0, _util.info)('Skipping invalid metadata.');\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'metadata', metadata);\n\t    },\n\t    get toplevelPagesDict() {\n\t      var pagesObj = this.catDict.get('Pages');\n\t      if (!(0, _primitives.isDict)(pagesObj)) {\n\t        throw new _util.FormatError('invalid top-level pages dictionary');\n\t      }\n\t      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n\t    },\n\t    get documentOutline() {\n\t      var obj = null;\n\t      try {\n\t        obj = this.readDocumentOutline();\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Unable to read document outline');\n\t      }\n\t      return (0, _util.shadow)(this, 'documentOutline', obj);\n\t    },\n\t    readDocumentOutline: function Catalog_readDocumentOutline() {\n\t      var obj = this.catDict.get('Outlines');\n\t      if (!(0, _primitives.isDict)(obj)) {\n\t        return null;\n\t      }\n\t      obj = obj.getRaw('First');\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return null;\n\t      }\n\t      var root = { items: [] };\n\t      var queue = [{\n\t        obj: obj,\n\t        parent: root\n\t      }];\n\t      var processed = new _primitives.RefSet();\n\t      processed.put(obj);\n\t      var xref = this.xref,\n\t          blackColor = new Uint8Array(3);\n\t      while (queue.length > 0) {\n\t        var i = queue.shift();\n\t        var outlineDict = xref.fetchIfRef(i.obj);\n\t        if (outlineDict === null) {\n\t          continue;\n\t        }\n\t        if (!outlineDict.has('Title')) {\n\t          throw new _util.FormatError('Invalid outline item');\n\t        }\n\t        var data = {\n\t          url: null,\n\t          dest: null\n\t        };\n\t        Catalog.parseDestDictionary({\n\t          destDict: outlineDict,\n\t          resultObj: data,\n\t          docBaseUrl: this.pdfManager.docBaseUrl\n\t        });\n\t        var title = outlineDict.get('Title');\n\t        var flags = outlineDict.get('F') || 0;\n\t        var color = outlineDict.getArray('C'),\n\t            rgbColor = blackColor;\n\t        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n\t          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n\t        }\n\t        var outlineItem = {\n\t          dest: data.dest,\n\t          url: data.url,\n\t          unsafeUrl: data.unsafeUrl,\n\t          newWindow: data.newWindow,\n\t          title: (0, _util.stringToPDFString)(title),\n\t          color: rgbColor,\n\t          count: outlineDict.get('Count'),\n\t          bold: !!(flags & 2),\n\t          italic: !!(flags & 1),\n\t          items: []\n\t        };\n\t        i.parent.items.push(outlineItem);\n\t        obj = outlineDict.getRaw('First');\n\t        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n\t          queue.push({\n\t            obj: obj,\n\t            parent: outlineItem\n\t          });\n\t          processed.put(obj);\n\t        }\n\t        obj = outlineDict.getRaw('Next');\n\t        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n\t          queue.push({\n\t            obj: obj,\n\t            parent: i.parent\n\t          });\n\t          processed.put(obj);\n\t        }\n\t      }\n\t      return root.items.length > 0 ? root.items : null;\n\t    },\n\t    get numPages() {\n\t      var obj = this.toplevelPagesDict.get('Count');\n\t      if (!Number.isInteger(obj)) {\n\t        throw new _util.FormatError('page count in top level pages object is not an integer');\n\t      }\n\t      return (0, _util.shadow)(this, 'numPages', obj);\n\t    },\n\t    get destinations() {\n\t      function fetchDestination(dest) {\n\t        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dests = {},\n\t          nameTreeRef,\n\t          nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t        nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t        nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t        obj = nameDictionaryRef;\n\t        obj.forEach(function catalogForEach(key, value) {\n\t          if (!value) {\n\t            return;\n\t          }\n\t          dests[key] = fetchDestination(value);\n\t        });\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          dests[name] = fetchDestination(names[name]);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'destinations', dests);\n\t    },\n\t    getDestination: function Catalog_getDestination(destinationId) {\n\t      function fetchDestination(dest) {\n\t        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dest = null,\n\t          nameTreeRef,\n\t          nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t        nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t        nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t        var value = nameDictionaryRef.get(destinationId);\n\t        if (value) {\n\t          dest = fetchDestination(value);\n\t        }\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        dest = fetchDestination(nameTree.get(destinationId));\n\t      }\n\t      return dest;\n\t    },\n\t    get pageLabels() {\n\t      var obj = null;\n\t      try {\n\t        obj = this.readPageLabels();\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Unable to read page labels.');\n\t      }\n\t      return (0, _util.shadow)(this, 'pageLabels', obj);\n\t    },\n\t    readPageLabels: function Catalog_readPageLabels() {\n\t      var obj = this.catDict.getRaw('PageLabels');\n\t      if (!obj) {\n\t        return null;\n\t      }\n\t      var pageLabels = new Array(this.numPages);\n\t      var style = null;\n\t      var prefix = '';\n\t      var numberTree = new NumberTree(obj, this.xref);\n\t      var nums = numberTree.getAll();\n\t      var currentLabel = '',\n\t          currentIndex = 1;\n\t      for (var i = 0, ii = this.numPages; i < ii; i++) {\n\t        if (i in nums) {\n\t          var labelDict = nums[i];\n\t          if (!(0, _primitives.isDict)(labelDict)) {\n\t            throw new _util.FormatError('The PageLabel is not a dictionary.');\n\t          }\n\t          var type = labelDict.get('Type');\n\t          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n\t            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n\t          }\n\t          var s = labelDict.get('S');\n\t          if (s && !(0, _primitives.isName)(s)) {\n\t            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n\t          }\n\t          style = s ? s.name : null;\n\t          var p = labelDict.get('P');\n\t          if (p && !(0, _util.isString)(p)) {\n\t            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n\t          }\n\t          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n\t          var st = labelDict.get('St');\n\t          if (st && !(Number.isInteger(st) && st >= 1)) {\n\t            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n\t          }\n\t          currentIndex = st || 1;\n\t        }\n\t        switch (style) {\n\t          case 'D':\n\t            currentLabel = currentIndex;\n\t            break;\n\t          case 'R':\n\t          case 'r':\n\t            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n\t            break;\n\t          case 'A':\n\t          case 'a':\n\t            var LIMIT = 26;\n\t            var A_UPPER_CASE = 0x41,\n\t                A_LOWER_CASE = 0x61;\n\t            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n\t            var letterIndex = currentIndex - 1;\n\t            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n\t            var charBuf = [];\n\t            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n\t              charBuf.push(character);\n\t            }\n\t            currentLabel = charBuf.join('');\n\t            break;\n\t          default:\n\t            if (style) {\n\t              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n\t            }\n\t        }\n\t        pageLabels[i] = prefix + currentLabel;\n\t        currentLabel = '';\n\t        currentIndex++;\n\t      }\n\t      return pageLabels;\n\t    },\n\t    get pageMode() {\n\t      var obj = this.catDict.get('PageMode');\n\t      var pageMode = 'UseNone';\n\t      if ((0, _primitives.isName)(obj)) {\n\t        switch (obj.name) {\n\t          case 'UseNone':\n\t          case 'UseOutlines':\n\t          case 'UseThumbs':\n\t          case 'FullScreen':\n\t          case 'UseOC':\n\t          case 'UseAttachments':\n\t            pageMode = obj.name;\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'pageMode', pageMode);\n\t    },\n\t    get attachments() {\n\t      var xref = this.xref;\n\t      var attachments = null,\n\t          nameTreeRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj) {\n\t        nameTreeRef = obj.getRaw('EmbeddedFiles');\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          var fs = new FileSpec(names[name], xref);\n\t          if (!attachments) {\n\t            attachments = Object.create(null);\n\t          }\n\t          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'attachments', attachments);\n\t    },\n\t    get javaScript() {\n\t      var xref = this.xref;\n\t      var obj = this.catDict.get('Names');\n\t      var javaScript = null;\n\t      function appendIfJavaScriptDict(jsDict) {\n\t        var type = jsDict.get('S');\n\t        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n\t          return;\n\t        }\n\t        var js = jsDict.get('JS');\n\t        if ((0, _primitives.isStream)(js)) {\n\t          js = (0, _util.bytesToString)(js.getBytes());\n\t        } else if (!(0, _util.isString)(js)) {\n\t          return;\n\t        }\n\t        if (!javaScript) {\n\t          javaScript = [];\n\t        }\n\t        javaScript.push((0, _util.stringToPDFString)(js));\n\t      }\n\t      if (obj && obj.has('JavaScript')) {\n\t        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          var jsDict = names[name];\n\t          if ((0, _primitives.isDict)(jsDict)) {\n\t            appendIfJavaScriptDict(jsDict);\n\t          }\n\t        }\n\t      }\n\t      var openactionDict = this.catDict.get('OpenAction');\n\t      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n\t        var actionType = openactionDict.get('S');\n\t        if ((0, _primitives.isName)(actionType, 'Named')) {\n\t          var action = openactionDict.get('N');\n\t          if ((0, _primitives.isName)(action, 'Print')) {\n\t            if (!javaScript) {\n\t              javaScript = [];\n\t            }\n\t            javaScript.push('print({});');\n\t          }\n\t        } else {\n\t          appendIfJavaScriptDict(openactionDict);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'javaScript', javaScript);\n\t    },\n\t    cleanup: function Catalog_cleanup() {\n\t      var _this = this;\n\t\n\t      this.pageKidsCountCache.clear();\n\t      var promises = [];\n\t      this.fontCache.forEach(function (promise) {\n\t        promises.push(promise);\n\t      });\n\t      return Promise.all(promises).then(function (translatedFonts) {\n\t        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n\t          var font = translatedFonts[i].dict;\n\t          delete font.translated;\n\t        }\n\t        _this.fontCache.clear();\n\t        _this.builtInCMapCache = Object.create(null);\n\t      });\n\t    },\n\t    getPage: function Catalog_getPage(pageIndex) {\n\t      var _this2 = this;\n\t\n\t      if (!(pageIndex in this.pagePromises)) {\n\t        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n\t          var _ref2 = _slicedToArray(_ref, 2),\n\t              dict = _ref2[0],\n\t              ref = _ref2[1];\n\t\n\t          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n\t        });\n\t      }\n\t      return this.pagePromises[pageIndex];\n\t    },\n\t    getPageDict: function Catalog_getPageDict(pageIndex) {\n\t      var capability = (0, _util.createPromiseCapability)();\n\t      var nodesToVisit = [this.catDict.getRaw('Pages')];\n\t      var count,\n\t          currentPageIndex = 0;\n\t      var xref = this.xref,\n\t          pageKidsCountCache = this.pageKidsCountCache;\n\t      function next() {\n\t        while (nodesToVisit.length) {\n\t          var currentNode = nodesToVisit.pop();\n\t          if ((0, _primitives.isRef)(currentNode)) {\n\t            count = pageKidsCountCache.get(currentNode);\n\t            if (count > 0 && currentPageIndex + count < pageIndex) {\n\t              currentPageIndex += count;\n\t              continue;\n\t            }\n\t            xref.fetchAsync(currentNode).then(function (obj) {\n\t              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n\t                if (pageIndex === currentPageIndex) {\n\t                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n\t                    pageKidsCountCache.put(currentNode, 1);\n\t                  }\n\t                  capability.resolve([obj, currentNode]);\n\t                } else {\n\t                  currentPageIndex++;\n\t                  next();\n\t                }\n\t                return;\n\t              }\n\t              nodesToVisit.push(obj);\n\t              next();\n\t            }, capability.reject);\n\t            return;\n\t          }\n\t          if (!(0, _primitives.isDict)(currentNode)) {\n\t            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n\t            return;\n\t          }\n\t          count = currentNode.get('Count');\n\t          var objId = currentNode.objId;\n\t          if (objId && !pageKidsCountCache.has(objId)) {\n\t            pageKidsCountCache.put(objId, count);\n\t          }\n\t          if (currentPageIndex + count <= pageIndex) {\n\t            currentPageIndex += count;\n\t            continue;\n\t          }\n\t          var kids = currentNode.get('Kids');\n\t          if (!Array.isArray(kids)) {\n\t            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n\t            return;\n\t          }\n\t          for (var last = kids.length - 1; last >= 0; last--) {\n\t            nodesToVisit.push(kids[last]);\n\t          }\n\t        }\n\t        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n\t      }\n\t      next();\n\t      return capability.promise;\n\t    },\n\t    getPageIndex: function Catalog_getPageIndex(pageRef) {\n\t      var xref = this.xref;\n\t      function pagesBeforeRef(kidRef) {\n\t        var total = 0;\n\t        var parentRef;\n\t        return xref.fetchAsync(kidRef).then(function (node) {\n\t          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n\t            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n\t          }\n\t          if (!node) {\n\t            return null;\n\t          }\n\t          if (!(0, _primitives.isDict)(node)) {\n\t            throw new _util.FormatError('node must be a Dict.');\n\t          }\n\t          parentRef = node.getRaw('Parent');\n\t          return node.getAsync('Parent');\n\t        }).then(function (parent) {\n\t          if (!parent) {\n\t            return null;\n\t          }\n\t          if (!(0, _primitives.isDict)(parent)) {\n\t            throw new _util.FormatError('parent must be a Dict.');\n\t          }\n\t          return parent.getAsync('Kids');\n\t        }).then(function (kids) {\n\t          if (!kids) {\n\t            return null;\n\t          }\n\t          var kidPromises = [];\n\t          var found = false;\n\t          for (var i = 0; i < kids.length; i++) {\n\t            var kid = kids[i];\n\t            if (!(0, _primitives.isRef)(kid)) {\n\t              throw new _util.FormatError('kid must be a Ref.');\n\t            }\n\t            if (kid.num === kidRef.num) {\n\t              found = true;\n\t              break;\n\t            }\n\t            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n\t              if (kid.has('Count')) {\n\t                var count = kid.get('Count');\n\t                total += count;\n\t              } else {\n\t                total++;\n\t              }\n\t            }));\n\t          }\n\t          if (!found) {\n\t            throw new _util.FormatError('kid ref not found in parents kids');\n\t          }\n\t          return Promise.all(kidPromises).then(function () {\n\t            return [total, parentRef];\n\t          });\n\t        });\n\t      }\n\t      var total = 0;\n\t      function next(ref) {\n\t        return pagesBeforeRef(ref).then(function (args) {\n\t          if (!args) {\n\t            return total;\n\t          }\n\t          var count = args[0];\n\t          var parentRef = args[1];\n\t          total += count;\n\t          return next(parentRef);\n\t        });\n\t      }\n\t      return next(pageRef);\n\t    }\n\t  };\n\t  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n\t    function addDefaultProtocolToUrl(url) {\n\t      if (url.indexOf('www.') === 0) {\n\t        return 'http://' + url;\n\t      }\n\t      return url;\n\t    }\n\t    function tryConvertUrlEncoding(url) {\n\t      try {\n\t        return (0, _util.stringToUTF8String)(url);\n\t      } catch (e) {\n\t        return url;\n\t      }\n\t    }\n\t    var destDict = params.destDict;\n\t    if (!(0, _primitives.isDict)(destDict)) {\n\t      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n\t      return;\n\t    }\n\t    var resultObj = params.resultObj;\n\t    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n\t      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n\t      return;\n\t    }\n\t    var docBaseUrl = params.docBaseUrl || null;\n\t    var action = destDict.get('A'),\n\t        url,\n\t        dest;\n\t    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n\t      action = destDict.get('Dest');\n\t    }\n\t    if ((0, _primitives.isDict)(action)) {\n\t      var actionType = action.get('S');\n\t      if (!(0, _primitives.isName)(actionType)) {\n\t        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n\t        return;\n\t      }\n\t      var actionName = actionType.name;\n\t      switch (actionName) {\n\t        case 'URI':\n\t          url = action.get('URI');\n\t          if ((0, _primitives.isName)(url)) {\n\t            url = '/' + url.name;\n\t          } else if ((0, _util.isString)(url)) {\n\t            url = addDefaultProtocolToUrl(url);\n\t          }\n\t          break;\n\t        case 'GoTo':\n\t          dest = action.get('D');\n\t          break;\n\t        case 'Launch':\n\t        case 'GoToR':\n\t          var urlDict = action.get('F');\n\t          if ((0, _primitives.isDict)(urlDict)) {\n\t            url = urlDict.get('F') || null;\n\t          } else if ((0, _util.isString)(urlDict)) {\n\t            url = urlDict;\n\t          }\n\t          var remoteDest = action.get('D');\n\t          if (remoteDest) {\n\t            if ((0, _primitives.isName)(remoteDest)) {\n\t              remoteDest = remoteDest.name;\n\t            }\n\t            if ((0, _util.isString)(url)) {\n\t              var baseUrl = url.split('#')[0];\n\t              if ((0, _util.isString)(remoteDest)) {\n\t                url = baseUrl + '#' + remoteDest;\n\t              } else if (Array.isArray(remoteDest)) {\n\t                url = baseUrl + '#' + JSON.stringify(remoteDest);\n\t              }\n\t            }\n\t          }\n\t          var newWindow = action.get('NewWindow');\n\t          if ((0, _util.isBool)(newWindow)) {\n\t            resultObj.newWindow = newWindow;\n\t          }\n\t          break;\n\t        case 'Named':\n\t          var namedAction = action.get('N');\n\t          if ((0, _primitives.isName)(namedAction)) {\n\t            resultObj.action = namedAction.name;\n\t          }\n\t          break;\n\t        case 'JavaScript':\n\t          var jsAction = action.get('JS'),\n\t              js;\n\t          if ((0, _primitives.isStream)(jsAction)) {\n\t            js = (0, _util.bytesToString)(jsAction.getBytes());\n\t          } else if ((0, _util.isString)(jsAction)) {\n\t            js = jsAction;\n\t          }\n\t          if (js) {\n\t            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n\t            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n\t            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n\t            if (jsUrl && jsUrl[2]) {\n\t              url = jsUrl[2];\n\t              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n\t                resultObj.newWindow = true;\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        default:\n\t          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n\t          break;\n\t      }\n\t    } else if (destDict.has('Dest')) {\n\t      dest = destDict.get('Dest');\n\t    }\n\t    if ((0, _util.isString)(url)) {\n\t      url = tryConvertUrlEncoding(url);\n\t      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n\t      if (absoluteUrl) {\n\t        resultObj.url = absoluteUrl.href;\n\t      }\n\t      resultObj.unsafeUrl = url;\n\t    }\n\t    if (dest) {\n\t      if ((0, _primitives.isName)(dest)) {\n\t        dest = dest.name;\n\t      }\n\t      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n\t        resultObj.dest = dest;\n\t      }\n\t    }\n\t  };\n\t  return Catalog;\n\t}();\n\tvar XRef = function XRefClosure() {\n\t  function XRef(stream, pdfManager) {\n\t    this.stream = stream;\n\t    this.pdfManager = pdfManager;\n\t    this.entries = [];\n\t    this.xrefstms = Object.create(null);\n\t    this.cache = [];\n\t    this.stats = {\n\t      streamTypes: [],\n\t      fontTypes: []\n\t    };\n\t  }\n\t  XRef.prototype = {\n\t    setStartXRef: function XRef_setStartXRef(startXRef) {\n\t      this.startXRefQueue = [startXRef];\n\t    },\n\t    parse: function XRef_parse(recoveryMode) {\n\t      var trailerDict;\n\t      if (!recoveryMode) {\n\t        trailerDict = this.readXRef();\n\t      } else {\n\t        (0, _util.warn)('Indexing all PDF objects');\n\t        trailerDict = this.indexObjects();\n\t      }\n\t      trailerDict.assignXref(this);\n\t      this.trailer = trailerDict;\n\t      var encrypt = trailerDict.get('Encrypt');\n\t      if ((0, _primitives.isDict)(encrypt)) {\n\t        var ids = trailerDict.get('ID');\n\t        var fileId = ids && ids.length ? ids[0] : '';\n\t        encrypt.suppressEncryption = true;\n\t        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n\t      }\n\t      if (!(this.root = trailerDict.get('Root'))) {\n\t        throw new _util.FormatError('Invalid root reference');\n\t      }\n\t    },\n\t    processXRefTable: function XRef_processXRefTable(parser) {\n\t      if (!('tableState' in this)) {\n\t        this.tableState = {\n\t          entryNum: 0,\n\t          streamPos: parser.lexer.stream.pos,\n\t          parserBuf1: parser.buf1,\n\t          parserBuf2: parser.buf2\n\t        };\n\t      }\n\t      var obj = this.readXRefTable(parser);\n\t      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n\t        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n\t      }\n\t      var dict = parser.getObj();\n\t      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n\t        dict = dict.dict;\n\t      }\n\t      if (!(0, _primitives.isDict)(dict)) {\n\t        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n\t      }\n\t      delete this.tableState;\n\t      return dict;\n\t    },\n\t    readXRefTable: function XRef_readXRefTable(parser) {\n\t      var stream = parser.lexer.stream;\n\t      var tableState = this.tableState;\n\t      stream.pos = tableState.streamPos;\n\t      parser.buf1 = tableState.parserBuf1;\n\t      parser.buf2 = tableState.parserBuf2;\n\t      var obj;\n\t      while (true) {\n\t        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n\t          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n\t            break;\n\t          }\n\t          tableState.firstEntryNum = obj;\n\t          tableState.entryCount = parser.getObj();\n\t        }\n\t        var first = tableState.firstEntryNum;\n\t        var count = tableState.entryCount;\n\t        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n\t          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n\t        }\n\t        for (var i = tableState.entryNum; i < count; i++) {\n\t          tableState.streamPos = stream.pos;\n\t          tableState.entryNum = i;\n\t          tableState.parserBuf1 = parser.buf1;\n\t          tableState.parserBuf2 = parser.buf2;\n\t          var entry = {};\n\t          entry.offset = parser.getObj();\n\t          entry.gen = parser.getObj();\n\t          var type = parser.getObj();\n\t          if ((0, _primitives.isCmd)(type, 'f')) {\n\t            entry.free = true;\n\t          } else if ((0, _primitives.isCmd)(type, 'n')) {\n\t            entry.uncompressed = true;\n\t          }\n\t          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n\t            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n\t          }\n\t          if (i === 0 && entry.free && first === 1) {\n\t            first = 0;\n\t          }\n\t          if (!this.entries[i + first]) {\n\t            this.entries[i + first] = entry;\n\t          }\n\t        }\n\t        tableState.entryNum = 0;\n\t        tableState.streamPos = stream.pos;\n\t        tableState.parserBuf1 = parser.buf1;\n\t        tableState.parserBuf2 = parser.buf2;\n\t        delete tableState.firstEntryNum;\n\t        delete tableState.entryCount;\n\t      }\n\t      if (this.entries[0] && !this.entries[0].free) {\n\t        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n\t      }\n\t      return obj;\n\t    },\n\t    processXRefStream: function XRef_processXRefStream(stream) {\n\t      if (!('streamState' in this)) {\n\t        var streamParameters = stream.dict;\n\t        var byteWidths = streamParameters.get('W');\n\t        var range = streamParameters.get('Index');\n\t        if (!range) {\n\t          range = [0, streamParameters.get('Size')];\n\t        }\n\t        this.streamState = {\n\t          entryRanges: range,\n\t          byteWidths: byteWidths,\n\t          entryNum: 0,\n\t          streamPos: stream.pos\n\t        };\n\t      }\n\t      this.readXRefStream(stream);\n\t      delete this.streamState;\n\t      return stream.dict;\n\t    },\n\t    readXRefStream: function XRef_readXRefStream(stream) {\n\t      var i, j;\n\t      var streamState = this.streamState;\n\t      stream.pos = streamState.streamPos;\n\t      var byteWidths = streamState.byteWidths;\n\t      var typeFieldWidth = byteWidths[0];\n\t      var offsetFieldWidth = byteWidths[1];\n\t      var generationFieldWidth = byteWidths[2];\n\t      var entryRanges = streamState.entryRanges;\n\t      while (entryRanges.length > 0) {\n\t        var first = entryRanges[0];\n\t        var n = entryRanges[1];\n\t        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n\t          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n\t        }\n\t        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n\t          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n\t        }\n\t        for (i = streamState.entryNum; i < n; ++i) {\n\t          streamState.entryNum = i;\n\t          streamState.streamPos = stream.pos;\n\t          var type = 0,\n\t              offset = 0,\n\t              generation = 0;\n\t          for (j = 0; j < typeFieldWidth; ++j) {\n\t            type = type << 8 | stream.getByte();\n\t          }\n\t          if (typeFieldWidth === 0) {\n\t            type = 1;\n\t          }\n\t          for (j = 0; j < offsetFieldWidth; ++j) {\n\t            offset = offset << 8 | stream.getByte();\n\t          }\n\t          for (j = 0; j < generationFieldWidth; ++j) {\n\t            generation = generation << 8 | stream.getByte();\n\t          }\n\t          var entry = {};\n\t          entry.offset = offset;\n\t          entry.gen = generation;\n\t          switch (type) {\n\t            case 0:\n\t              entry.free = true;\n\t              break;\n\t            case 1:\n\t              entry.uncompressed = true;\n\t              break;\n\t            case 2:\n\t              break;\n\t            default:\n\t              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n\t          }\n\t          if (!this.entries[first + i]) {\n\t            this.entries[first + i] = entry;\n\t          }\n\t        }\n\t        streamState.entryNum = 0;\n\t        streamState.streamPos = stream.pos;\n\t        entryRanges.splice(0, 2);\n\t      }\n\t    },\n\t    indexObjects: function XRef_indexObjects() {\n\t      var TAB = 0x9,\n\t          LF = 0xA,\n\t          CR = 0xD,\n\t          SPACE = 0x20;\n\t      var PERCENT = 0x25,\n\t          LT = 0x3C;\n\t      function readToken(data, offset) {\n\t        var token = '',\n\t            ch = data[offset];\n\t        while (ch !== LF && ch !== CR && ch !== LT) {\n\t          if (++offset >= data.length) {\n\t            break;\n\t          }\n\t          token += String.fromCharCode(ch);\n\t          ch = data[offset];\n\t        }\n\t        return token;\n\t      }\n\t      function skipUntil(data, offset, what) {\n\t        var length = what.length,\n\t            dataLength = data.length;\n\t        var skipped = 0;\n\t        while (offset < dataLength) {\n\t          var i = 0;\n\t          while (i < length && data[offset + i] === what[i]) {\n\t            ++i;\n\t          }\n\t          if (i >= length) {\n\t            break;\n\t          }\n\t          offset++;\n\t          skipped++;\n\t        }\n\t        return skipped;\n\t      }\n\t      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n\t      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n\t      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n\t      var CHECK_CONTENT_LENGTH = 25;\n\t      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n\t      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n\t      var objBytes = new Uint8Array([111, 98, 106]);\n\t      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n\t      this.entries.length = 0;\n\t      var stream = this.stream;\n\t      stream.pos = 0;\n\t      var buffer = stream.getBytes();\n\t      var position = stream.start,\n\t          length = buffer.length;\n\t      var trailers = [],\n\t          xrefStms = [];\n\t      while (position < length) {\n\t        var ch = buffer[position];\n\t        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n\t          ++position;\n\t          continue;\n\t        }\n\t        if (ch === PERCENT) {\n\t          do {\n\t            ++position;\n\t            if (position >= length) {\n\t              break;\n\t            }\n\t            ch = buffer[position];\n\t          } while (ch !== LF && ch !== CR);\n\t          continue;\n\t        }\n\t        var token = readToken(buffer, position);\n\t        var m;\n\t        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n\t          position += skipUntil(buffer, position, trailerBytes);\n\t          trailers.push(position);\n\t          position += skipUntil(buffer, position, startxrefBytes);\n\t        } else if (m = objRegExp.exec(token)) {\n\t          if (typeof this.entries[m[1]] === 'undefined') {\n\t            this.entries[m[1]] = {\n\t              offset: position - stream.start,\n\t              gen: m[2] | 0,\n\t              uncompressed: true\n\t            };\n\t          }\n\t          var contentLength = void 0,\n\t              startPos = position + token.length;\n\t          while (startPos < buffer.length) {\n\t            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n\t            contentLength = endPos - position;\n\t            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n\t            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n\t            if (endobjRegExp.test(tokenStr)) {\n\t              break;\n\t            } else {\n\t              var objToken = nestedObjRegExp.exec(tokenStr);\n\t              if (objToken && objToken[1]) {\n\t                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n\t                contentLength -= objToken[1].length;\n\t                break;\n\t              }\n\t            }\n\t            startPos += contentLength;\n\t          }\n\t          var content = buffer.subarray(position, position + contentLength);\n\t          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n\t          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n\t            xrefStms.push(position - stream.start);\n\t            this.xrefstms[position - stream.start] = 1;\n\t          }\n\t          position += contentLength;\n\t        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n\t          trailers.push(position);\n\t          position += skipUntil(buffer, position, startxrefBytes);\n\t        } else {\n\t          position += token.length + 1;\n\t        }\n\t      }\n\t      var i, ii;\n\t      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n\t        this.startXRefQueue.push(xrefStms[i]);\n\t        this.readXRef(true);\n\t      }\n\t      var dict;\n\t      for (i = 0, ii = trailers.length; i < ii; ++i) {\n\t        stream.pos = trailers[i];\n\t        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n\t        var obj = parser.getObj();\n\t        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n\t          continue;\n\t        }\n\t        dict = parser.getObj();\n\t        if (!(0, _primitives.isDict)(dict)) {\n\t          continue;\n\t        }\n\t        if (dict.has('ID')) {\n\t          return dict;\n\t        }\n\t      }\n\t      if (dict) {\n\t        return dict;\n\t      }\n\t      throw new _util.InvalidPDFException('Invalid PDF structure');\n\t    },\n\t    readXRef: function XRef_readXRef(recoveryMode) {\n\t      var stream = this.stream;\n\t      var startXRefParsedCache = Object.create(null);\n\t      try {\n\t        while (this.startXRefQueue.length) {\n\t          var startXRef = this.startXRefQueue[0];\n\t          if (startXRefParsedCache[startXRef]) {\n\t            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n\t            this.startXRefQueue.shift();\n\t            continue;\n\t          }\n\t          startXRefParsedCache[startXRef] = true;\n\t          stream.pos = startXRef + stream.start;\n\t          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n\t          var obj = parser.getObj();\n\t          var dict;\n\t          if ((0, _primitives.isCmd)(obj, 'xref')) {\n\t            dict = this.processXRefTable(parser);\n\t            if (!this.topDict) {\n\t              this.topDict = dict;\n\t            }\n\t            obj = dict.get('XRefStm');\n\t            if (Number.isInteger(obj)) {\n\t              var pos = obj;\n\t              if (!(pos in this.xrefstms)) {\n\t                this.xrefstms[pos] = 1;\n\t                this.startXRefQueue.push(pos);\n\t              }\n\t            }\n\t          } else if (Number.isInteger(obj)) {\n\t            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n\t              throw new _util.FormatError('Invalid XRef stream');\n\t            }\n\t            dict = this.processXRefStream(obj);\n\t            if (!this.topDict) {\n\t              this.topDict = dict;\n\t            }\n\t            if (!dict) {\n\t              throw new _util.FormatError('Failed to read XRef stream');\n\t            }\n\t          } else {\n\t            throw new _util.FormatError('Invalid XRef stream header');\n\t          }\n\t          obj = dict.get('Prev');\n\t          if (Number.isInteger(obj)) {\n\t            this.startXRefQueue.push(obj);\n\t          } else if ((0, _primitives.isRef)(obj)) {\n\t            this.startXRefQueue.push(obj.num);\n\t          }\n\t          this.startXRefQueue.shift();\n\t        }\n\t        return this.topDict;\n\t      } catch (e) {\n\t        if (e instanceof _util.MissingDataException) {\n\t          throw e;\n\t        }\n\t        (0, _util.info)('(while reading XRef): ' + e);\n\t      }\n\t      if (recoveryMode) {\n\t        return;\n\t      }\n\t      throw new _util.XRefParseException();\n\t    },\n\t    getEntry: function XRef_getEntry(i) {\n\t      var xrefEntry = this.entries[i];\n\t      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n\t        return xrefEntry;\n\t      }\n\t      return null;\n\t    },\n\t    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return obj;\n\t      }\n\t      return this.fetch(obj, suppressEncryption);\n\t    },\n\t    fetch: function XRef_fetch(ref, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(ref)) {\n\t        throw new Error('ref object is not a reference');\n\t      }\n\t      var num = ref.num;\n\t      if (num in this.cache) {\n\t        var cacheEntry = this.cache[num];\n\t        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n\t          cacheEntry.objId = ref.toString();\n\t        }\n\t        return cacheEntry;\n\t      }\n\t      var xrefEntry = this.getEntry(num);\n\t      if (xrefEntry === null) {\n\t        return this.cache[num] = null;\n\t      }\n\t      if (xrefEntry.uncompressed) {\n\t        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n\t      } else {\n\t        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n\t      }\n\t      if ((0, _primitives.isDict)(xrefEntry)) {\n\t        xrefEntry.objId = ref.toString();\n\t      } else if ((0, _primitives.isStream)(xrefEntry)) {\n\t        xrefEntry.dict.objId = ref.toString();\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n\t      var gen = ref.gen;\n\t      var num = ref.num;\n\t      if (xrefEntry.gen !== gen) {\n\t        throw new _util.FormatError('inconsistent generation in XRef');\n\t      }\n\t      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n\t      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n\t      var obj1 = parser.getObj();\n\t      var obj2 = parser.getObj();\n\t      var obj3 = parser.getObj();\n\t      if (!Number.isInteger(obj1)) {\n\t        obj1 = parseInt(obj1, 10);\n\t      }\n\t      if (!Number.isInteger(obj2)) {\n\t        obj2 = parseInt(obj2, 10);\n\t      }\n\t      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n\t        throw new _util.FormatError('bad XRef entry');\n\t      }\n\t      if (obj3.cmd !== 'obj') {\n\t        if (obj3.cmd.indexOf('obj') === 0) {\n\t          num = parseInt(obj3.cmd.substring(3), 10);\n\t          if (!Number.isNaN(num)) {\n\t            return num;\n\t          }\n\t        }\n\t        throw new _util.FormatError('bad XRef entry');\n\t      }\n\t      if (this.encrypt && !suppressEncryption) {\n\t        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n\t      } else {\n\t        xrefEntry = parser.getObj();\n\t      }\n\t      if (!(0, _primitives.isStream)(xrefEntry)) {\n\t        this.cache[num] = xrefEntry;\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n\t      var tableOffset = xrefEntry.offset;\n\t      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n\t      if (!(0, _primitives.isStream)(stream)) {\n\t        throw new _util.FormatError('bad ObjStm stream');\n\t      }\n\t      var first = stream.dict.get('First');\n\t      var n = stream.dict.get('N');\n\t      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n\t        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n\t      }\n\t      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n\t      parser.allowStreams = true;\n\t      var i,\n\t          entries = [],\n\t          num,\n\t          nums = [];\n\t      for (i = 0; i < n; ++i) {\n\t        num = parser.getObj();\n\t        if (!Number.isInteger(num)) {\n\t          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n\t        }\n\t        nums.push(num);\n\t        var offset = parser.getObj();\n\t        if (!Number.isInteger(offset)) {\n\t          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n\t        }\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        entries.push(parser.getObj());\n\t        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n\t          parser.shift();\n\t        }\n\t        num = nums[i];\n\t        var entry = this.entries[num];\n\t        if (entry && entry.offset === tableOffset && entry.gen === i) {\n\t          this.cache[num] = entries[i];\n\t        }\n\t      }\n\t      xrefEntry = entries[xrefEntry.gen];\n\t      if (xrefEntry === undefined) {\n\t        throw new _util.FormatError('bad XRef entry for compressed object');\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return Promise.resolve(obj);\n\t      }\n\t      return this.fetchAsync(obj, suppressEncryption);\n\t    },\n\t    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n\t      var streamManager = this.stream.manager;\n\t      var xref = this;\n\t      return new Promise(function tryFetch(resolve, reject) {\n\t        try {\n\t          resolve(xref.fetch(ref, suppressEncryption));\n\t        } catch (e) {\n\t          if (e instanceof _util.MissingDataException) {\n\t            streamManager.requestRange(e.begin, e.end).then(function () {\n\t              tryFetch(resolve, reject);\n\t            }, reject);\n\t            return;\n\t          }\n\t          reject(e);\n\t        }\n\t      });\n\t    },\n\t    getCatalogObj: function XRef_getCatalogObj() {\n\t      return this.root;\n\t    }\n\t  };\n\t  return XRef;\n\t}();\n\tvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n\t  function NameOrNumberTree(root, xref) {\n\t    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n\t  }\n\t  NameOrNumberTree.prototype = {\n\t    getAll: function NameOrNumberTree_getAll() {\n\t      var dict = Object.create(null);\n\t      if (!this.root) {\n\t        return dict;\n\t      }\n\t      var xref = this.xref;\n\t      var processed = new _primitives.RefSet();\n\t      processed.put(this.root);\n\t      var queue = [this.root];\n\t      while (queue.length > 0) {\n\t        var i, n;\n\t        var obj = xref.fetchIfRef(queue.shift());\n\t        if (!(0, _primitives.isDict)(obj)) {\n\t          continue;\n\t        }\n\t        if (obj.has('Kids')) {\n\t          var kids = obj.get('Kids');\n\t          for (i = 0, n = kids.length; i < n; i++) {\n\t            var kid = kids[i];\n\t            if (processed.has(kid)) {\n\t              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n\t            }\n\t            queue.push(kid);\n\t            processed.put(kid);\n\t          }\n\t          continue;\n\t        }\n\t        var entries = obj.get(this._type);\n\t        if (Array.isArray(entries)) {\n\t          for (i = 0, n = entries.length; i < n; i += 2) {\n\t            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n\t          }\n\t        }\n\t      }\n\t      return dict;\n\t    },\n\t    get: function NameOrNumberTree_get(key) {\n\t      if (!this.root) {\n\t        return null;\n\t      }\n\t      var xref = this.xref;\n\t      var kidsOrEntries = xref.fetchIfRef(this.root);\n\t      var loopCount = 0;\n\t      var MAX_LEVELS = 10;\n\t      var l, r, m;\n\t      while (kidsOrEntries.has('Kids')) {\n\t        if (++loopCount > MAX_LEVELS) {\n\t          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n\t          return null;\n\t        }\n\t        var kids = kidsOrEntries.get('Kids');\n\t        if (!Array.isArray(kids)) {\n\t          return null;\n\t        }\n\t        l = 0;\n\t        r = kids.length - 1;\n\t        while (l <= r) {\n\t          m = l + r >> 1;\n\t          var kid = xref.fetchIfRef(kids[m]);\n\t          var limits = kid.get('Limits');\n\t          if (key < xref.fetchIfRef(limits[0])) {\n\t            r = m - 1;\n\t          } else if (key > xref.fetchIfRef(limits[1])) {\n\t            l = m + 1;\n\t          } else {\n\t            kidsOrEntries = xref.fetchIfRef(kids[m]);\n\t            break;\n\t          }\n\t        }\n\t        if (l > r) {\n\t          return null;\n\t        }\n\t      }\n\t      var entries = kidsOrEntries.get(this._type);\n\t      if (Array.isArray(entries)) {\n\t        l = 0;\n\t        r = entries.length - 2;\n\t        while (l <= r) {\n\t          m = l + r & ~1;\n\t          var currentKey = xref.fetchIfRef(entries[m]);\n\t          if (key < currentKey) {\n\t            r = m - 2;\n\t          } else if (key > currentKey) {\n\t            l = m + 2;\n\t          } else {\n\t            return xref.fetchIfRef(entries[m + 1]);\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  };\n\t  return NameOrNumberTree;\n\t}();\n\tvar NameTree = function NameTreeClosure() {\n\t  function NameTree(root, xref) {\n\t    this.root = root;\n\t    this.xref = xref;\n\t    this._type = 'Names';\n\t  }\n\t  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n\t  return NameTree;\n\t}();\n\tvar NumberTree = function NumberTreeClosure() {\n\t  function NumberTree(root, xref) {\n\t    this.root = root;\n\t    this.xref = xref;\n\t    this._type = 'Nums';\n\t  }\n\t  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n\t  return NumberTree;\n\t}();\n\tvar FileSpec = function FileSpecClosure() {\n\t  function FileSpec(root, xref) {\n\t    if (!root || !(0, _primitives.isDict)(root)) {\n\t      return;\n\t    }\n\t    this.xref = xref;\n\t    this.root = root;\n\t    if (root.has('FS')) {\n\t      this.fs = root.get('FS');\n\t    }\n\t    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n\t    if (root.has('RF')) {\n\t      (0, _util.warn)('Related file specifications are not supported');\n\t    }\n\t    this.contentAvailable = true;\n\t    if (!root.has('EF')) {\n\t      this.contentAvailable = false;\n\t      (0, _util.warn)('Non-embedded file specifications are not supported');\n\t    }\n\t  }\n\t  function pickPlatformItem(dict) {\n\t    if (dict.has('UF')) {\n\t      return dict.get('UF');\n\t    } else if (dict.has('F')) {\n\t      return dict.get('F');\n\t    } else if (dict.has('Unix')) {\n\t      return dict.get('Unix');\n\t    } else if (dict.has('Mac')) {\n\t      return dict.get('Mac');\n\t    } else if (dict.has('DOS')) {\n\t      return dict.get('DOS');\n\t    }\n\t    return null;\n\t  }\n\t  FileSpec.prototype = {\n\t    get filename() {\n\t      if (!this._filename && this.root) {\n\t        var filename = pickPlatformItem(this.root) || 'unnamed';\n\t        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n\t      }\n\t      return this._filename;\n\t    },\n\t    get content() {\n\t      if (!this.contentAvailable) {\n\t        return null;\n\t      }\n\t      if (!this.contentRef && this.root) {\n\t        this.contentRef = pickPlatformItem(this.root.get('EF'));\n\t      }\n\t      var content = null;\n\t      if (this.contentRef) {\n\t        var xref = this.xref;\n\t        var fileObj = xref.fetchIfRef(this.contentRef);\n\t        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n\t          content = fileObj.getBytes();\n\t        } else {\n\t          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n\t        }\n\t      } else {\n\t        (0, _util.warn)('Embedded file specification does not have a content');\n\t      }\n\t      return content;\n\t    },\n\t    get serializable() {\n\t      return {\n\t        filename: this.filename,\n\t        content: this.content\n\t      };\n\t    }\n\t  };\n\t  return FileSpec;\n\t}();\n\tvar ObjectLoader = function () {\n\t  function mayHaveChildren(value) {\n\t    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n\t  }\n\t  function addChildren(node, nodesToVisit) {\n\t    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n\t      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n\t      var dictKeys = dict.getKeys();\n\t      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n\t        var rawValue = dict.getRaw(dictKeys[i]);\n\t        if (mayHaveChildren(rawValue)) {\n\t          nodesToVisit.push(rawValue);\n\t        }\n\t      }\n\t    } else if (Array.isArray(node)) {\n\t      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n\t        var value = node[_i];\n\t        if (mayHaveChildren(value)) {\n\t          nodesToVisit.push(value);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function ObjectLoader(dict, keys, xref) {\n\t    this.dict = dict;\n\t    this.keys = keys;\n\t    this.xref = xref;\n\t    this.refSet = null;\n\t    this.capability = null;\n\t  }\n\t  ObjectLoader.prototype = {\n\t    load: function load() {\n\t      this.capability = (0, _util.createPromiseCapability)();\n\t      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n\t        this.capability.resolve();\n\t        return this.capability.promise;\n\t      }\n\t      var keys = this.keys,\n\t          dict = this.dict;\n\t\n\t      this.refSet = new _primitives.RefSet();\n\t      var nodesToVisit = [];\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t        var rawValue = dict.getRaw(keys[i]);\n\t        if (rawValue !== undefined) {\n\t          nodesToVisit.push(rawValue);\n\t        }\n\t      }\n\t      this._walk(nodesToVisit);\n\t      return this.capability.promise;\n\t    },\n\t    _walk: function _walk(nodesToVisit) {\n\t      var _this3 = this;\n\t\n\t      var nodesToRevisit = [];\n\t      var pendingRequests = [];\n\t      while (nodesToVisit.length) {\n\t        var currentNode = nodesToVisit.pop();\n\t        if ((0, _primitives.isRef)(currentNode)) {\n\t          if (this.refSet.has(currentNode)) {\n\t            continue;\n\t          }\n\t          try {\n\t            this.refSet.put(currentNode);\n\t            currentNode = this.xref.fetch(currentNode);\n\t          } catch (ex) {\n\t            if (!(ex instanceof _util.MissingDataException)) {\n\t              throw ex;\n\t            }\n\t            nodesToRevisit.push(currentNode);\n\t            pendingRequests.push({\n\t              begin: ex.begin,\n\t              end: ex.end\n\t            });\n\t          }\n\t        }\n\t        if (currentNode && currentNode.getBaseStreams) {\n\t          var baseStreams = currentNode.getBaseStreams();\n\t          var foundMissingData = false;\n\t          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n\t            var stream = baseStreams[i];\n\t            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n\t              foundMissingData = true;\n\t              pendingRequests.push({\n\t                begin: stream.start,\n\t                end: stream.end\n\t              });\n\t            }\n\t          }\n\t          if (foundMissingData) {\n\t            nodesToRevisit.push(currentNode);\n\t          }\n\t        }\n\t        addChildren(currentNode, nodesToVisit);\n\t      }\n\t      if (pendingRequests.length) {\n\t        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n\t          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n\t            var node = nodesToRevisit[_i2];\n\t            if ((0, _primitives.isRef)(node)) {\n\t              _this3.refSet.remove(node);\n\t            }\n\t          }\n\t          _this3._walk(nodesToRevisit);\n\t        }, this.capability.reject);\n\t        return;\n\t      }\n\t      this.refSet = null;\n\t      this.capability.resolve();\n\t    }\n\t  };\n\t  return ObjectLoader;\n\t}();\n\texports.Catalog = Catalog;\n\texports.ObjectLoader = ObjectLoader;\n\texports.XRef = XRef;\n\texports.FileSpec = FileSpec;\n\n/***/ },\n\n/***/ 409:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['ArialNarrow'] = 'Helvetica';\n\t  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n\t  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n\t  t['ArialBlack'] = 'Helvetica';\n\t  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n\t  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial-Black'] = 'Helvetica';\n\t  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n\t  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial'] = 'Helvetica';\n\t  t['Arial-Bold'] = 'Helvetica-Bold';\n\t  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Arial-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n\t  t['Arial-BoldMT'] = 'Helvetica-Bold';\n\t  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n\t  t['ArialMT'] = 'Helvetica';\n\t  t['Courier-Bold'] = 'Courier-Bold';\n\t  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['Courier-Italic'] = 'Courier-Oblique';\n\t  t['CourierNew'] = 'Courier';\n\t  t['CourierNew-Bold'] = 'Courier-Bold';\n\t  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['CourierNew-Italic'] = 'Courier-Oblique';\n\t  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n\t  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n\t  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n\t  t['CourierNewPSMT'] = 'Courier';\n\t  t['Helvetica'] = 'Helvetica';\n\t  t['Helvetica-Bold'] = 'Helvetica-Bold';\n\t  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n\t  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n\t  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n\t  t['SegoeUISymbol'] = 'Helvetica';\n\t  t['Symbol-Bold'] = 'Symbol';\n\t  t['Symbol-BoldItalic'] = 'Symbol';\n\t  t['Symbol-Italic'] = 'Symbol';\n\t  t['TimesNewRoman'] = 'Times-Roman';\n\t  t['TimesNewRoman-Bold'] = 'Times-Bold';\n\t  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRoman-Italic'] = 'Times-Italic';\n\t  t['TimesNewRomanPS'] = 'Times-Roman';\n\t  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n\t  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n\t  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n\t  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n\t  t['TimesNewRomanPSMT'] = 'Times-Roman';\n\t  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n\t  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n\t});\n\tvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Calibri'] = 'Helvetica';\n\t  t['Calibri-Bold'] = 'Helvetica-Bold';\n\t  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Calibri-Italic'] = 'Helvetica-Oblique';\n\t  t['CenturyGothic'] = 'Helvetica';\n\t  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n\t  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n\t  t['ComicSansMS'] = 'Comic Sans MS';\n\t  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n\t  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n\t  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n\t  t['LucidaConsole'] = 'Courier';\n\t  t['LucidaConsole-Bold'] = 'Courier-Bold';\n\t  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n\t  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n\t  t['MS-Gothic'] = 'MS Gothic';\n\t  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n\t  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n\t  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n\t  t['MS-Mincho'] = 'MS Mincho';\n\t  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n\t  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n\t  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n\t  t['MS-PGothic'] = 'MS PGothic';\n\t  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n\t  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n\t  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n\t  t['MS-PMincho'] = 'MS PMincho';\n\t  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n\t  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n\t  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n\t  t['NuptialScript'] = 'Times-Italic';\n\t  t['Wingdings'] = 'ZapfDingbats';\n\t});\n\tvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Adobe Jenson'] = true;\n\t  t['Adobe Text'] = true;\n\t  t['Albertus'] = true;\n\t  t['Aldus'] = true;\n\t  t['Alexandria'] = true;\n\t  t['Algerian'] = true;\n\t  t['American Typewriter'] = true;\n\t  t['Antiqua'] = true;\n\t  t['Apex'] = true;\n\t  t['Arno'] = true;\n\t  t['Aster'] = true;\n\t  t['Aurora'] = true;\n\t  t['Baskerville'] = true;\n\t  t['Bell'] = true;\n\t  t['Bembo'] = true;\n\t  t['Bembo Schoolbook'] = true;\n\t  t['Benguiat'] = true;\n\t  t['Berkeley Old Style'] = true;\n\t  t['Bernhard Modern'] = true;\n\t  t['Berthold City'] = true;\n\t  t['Bodoni'] = true;\n\t  t['Bauer Bodoni'] = true;\n\t  t['Book Antiqua'] = true;\n\t  t['Bookman'] = true;\n\t  t['Bordeaux Roman'] = true;\n\t  t['Californian FB'] = true;\n\t  t['Calisto'] = true;\n\t  t['Calvert'] = true;\n\t  t['Capitals'] = true;\n\t  t['Cambria'] = true;\n\t  t['Cartier'] = true;\n\t  t['Caslon'] = true;\n\t  t['Catull'] = true;\n\t  t['Centaur'] = true;\n\t  t['Century Old Style'] = true;\n\t  t['Century Schoolbook'] = true;\n\t  t['Chaparral'] = true;\n\t  t['Charis SIL'] = true;\n\t  t['Cheltenham'] = true;\n\t  t['Cholla Slab'] = true;\n\t  t['Clarendon'] = true;\n\t  t['Clearface'] = true;\n\t  t['Cochin'] = true;\n\t  t['Colonna'] = true;\n\t  t['Computer Modern'] = true;\n\t  t['Concrete Roman'] = true;\n\t  t['Constantia'] = true;\n\t  t['Cooper Black'] = true;\n\t  t['Corona'] = true;\n\t  t['Ecotype'] = true;\n\t  t['Egyptienne'] = true;\n\t  t['Elephant'] = true;\n\t  t['Excelsior'] = true;\n\t  t['Fairfield'] = true;\n\t  t['FF Scala'] = true;\n\t  t['Folkard'] = true;\n\t  t['Footlight'] = true;\n\t  t['FreeSerif'] = true;\n\t  t['Friz Quadrata'] = true;\n\t  t['Garamond'] = true;\n\t  t['Gentium'] = true;\n\t  t['Georgia'] = true;\n\t  t['Gloucester'] = true;\n\t  t['Goudy Old Style'] = true;\n\t  t['Goudy Schoolbook'] = true;\n\t  t['Goudy Pro Font'] = true;\n\t  t['Granjon'] = true;\n\t  t['Guardian Egyptian'] = true;\n\t  t['Heather'] = true;\n\t  t['Hercules'] = true;\n\t  t['High Tower Text'] = true;\n\t  t['Hiroshige'] = true;\n\t  t['Hoefler Text'] = true;\n\t  t['Humana Serif'] = true;\n\t  t['Imprint'] = true;\n\t  t['Ionic No. 5'] = true;\n\t  t['Janson'] = true;\n\t  t['Joanna'] = true;\n\t  t['Korinna'] = true;\n\t  t['Lexicon'] = true;\n\t  t['Liberation Serif'] = true;\n\t  t['Linux Libertine'] = true;\n\t  t['Literaturnaya'] = true;\n\t  t['Lucida'] = true;\n\t  t['Lucida Bright'] = true;\n\t  t['Melior'] = true;\n\t  t['Memphis'] = true;\n\t  t['Miller'] = true;\n\t  t['Minion'] = true;\n\t  t['Modern'] = true;\n\t  t['Mona Lisa'] = true;\n\t  t['Mrs Eaves'] = true;\n\t  t['MS Serif'] = true;\n\t  t['Museo Slab'] = true;\n\t  t['New York'] = true;\n\t  t['Nimbus Roman'] = true;\n\t  t['NPS Rawlinson Roadway'] = true;\n\t  t['NuptialScript'] = true;\n\t  t['Palatino'] = true;\n\t  t['Perpetua'] = true;\n\t  t['Plantin'] = true;\n\t  t['Plantin Schoolbook'] = true;\n\t  t['Playbill'] = true;\n\t  t['Poor Richard'] = true;\n\t  t['Rawlinson Roadway'] = true;\n\t  t['Renault'] = true;\n\t  t['Requiem'] = true;\n\t  t['Rockwell'] = true;\n\t  t['Roman'] = true;\n\t  t['Rotis Serif'] = true;\n\t  t['Sabon'] = true;\n\t  t['Scala'] = true;\n\t  t['Seagull'] = true;\n\t  t['Sistina'] = true;\n\t  t['Souvenir'] = true;\n\t  t['STIX'] = true;\n\t  t['Stone Informal'] = true;\n\t  t['Stone Serif'] = true;\n\t  t['Sylfaen'] = true;\n\t  t['Times'] = true;\n\t  t['Trajan'] = true;\n\t  t['Trinité'] = true;\n\t  t['Trump Mediaeval'] = true;\n\t  t['Utopia'] = true;\n\t  t['Vale Type'] = true;\n\t  t['Bitstream Vera'] = true;\n\t  t['Vera Serif'] = true;\n\t  t['Versailles'] = true;\n\t  t['Wanted'] = true;\n\t  t['Weiss'] = true;\n\t  t['Wide Latin'] = true;\n\t  t['Windsor'] = true;\n\t  t['XITS'] = true;\n\t});\n\tvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Dingbats'] = true;\n\t  t['Symbol'] = true;\n\t  t['ZapfDingbats'] = true;\n\t});\n\tvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[2] = 10;\n\t  t[3] = 32;\n\t  t[4] = 33;\n\t  t[5] = 34;\n\t  t[6] = 35;\n\t  t[7] = 36;\n\t  t[8] = 37;\n\t  t[9] = 38;\n\t  t[10] = 39;\n\t  t[11] = 40;\n\t  t[12] = 41;\n\t  t[13] = 42;\n\t  t[14] = 43;\n\t  t[15] = 44;\n\t  t[16] = 45;\n\t  t[17] = 46;\n\t  t[18] = 47;\n\t  t[19] = 48;\n\t  t[20] = 49;\n\t  t[21] = 50;\n\t  t[22] = 51;\n\t  t[23] = 52;\n\t  t[24] = 53;\n\t  t[25] = 54;\n\t  t[26] = 55;\n\t  t[27] = 56;\n\t  t[28] = 57;\n\t  t[29] = 58;\n\t  t[30] = 894;\n\t  t[31] = 60;\n\t  t[32] = 61;\n\t  t[33] = 62;\n\t  t[34] = 63;\n\t  t[35] = 64;\n\t  t[36] = 65;\n\t  t[37] = 66;\n\t  t[38] = 67;\n\t  t[39] = 68;\n\t  t[40] = 69;\n\t  t[41] = 70;\n\t  t[42] = 71;\n\t  t[43] = 72;\n\t  t[44] = 73;\n\t  t[45] = 74;\n\t  t[46] = 75;\n\t  t[47] = 76;\n\t  t[48] = 77;\n\t  t[49] = 78;\n\t  t[50] = 79;\n\t  t[51] = 80;\n\t  t[52] = 81;\n\t  t[53] = 82;\n\t  t[54] = 83;\n\t  t[55] = 84;\n\t  t[56] = 85;\n\t  t[57] = 86;\n\t  t[58] = 87;\n\t  t[59] = 88;\n\t  t[60] = 89;\n\t  t[61] = 90;\n\t  t[62] = 91;\n\t  t[63] = 92;\n\t  t[64] = 93;\n\t  t[65] = 94;\n\t  t[66] = 95;\n\t  t[67] = 96;\n\t  t[68] = 97;\n\t  t[69] = 98;\n\t  t[70] = 99;\n\t  t[71] = 100;\n\t  t[72] = 101;\n\t  t[73] = 102;\n\t  t[74] = 103;\n\t  t[75] = 104;\n\t  t[76] = 105;\n\t  t[77] = 106;\n\t  t[78] = 107;\n\t  t[79] = 108;\n\t  t[80] = 109;\n\t  t[81] = 110;\n\t  t[82] = 111;\n\t  t[83] = 112;\n\t  t[84] = 113;\n\t  t[85] = 114;\n\t  t[86] = 115;\n\t  t[87] = 116;\n\t  t[88] = 117;\n\t  t[89] = 118;\n\t  t[90] = 119;\n\t  t[91] = 120;\n\t  t[92] = 121;\n\t  t[93] = 122;\n\t  t[94] = 123;\n\t  t[95] = 124;\n\t  t[96] = 125;\n\t  t[97] = 126;\n\t  t[98] = 196;\n\t  t[99] = 197;\n\t  t[100] = 199;\n\t  t[101] = 201;\n\t  t[102] = 209;\n\t  t[103] = 214;\n\t  t[104] = 220;\n\t  t[105] = 225;\n\t  t[106] = 224;\n\t  t[107] = 226;\n\t  t[108] = 228;\n\t  t[109] = 227;\n\t  t[110] = 229;\n\t  t[111] = 231;\n\t  t[112] = 233;\n\t  t[113] = 232;\n\t  t[114] = 234;\n\t  t[115] = 235;\n\t  t[116] = 237;\n\t  t[117] = 236;\n\t  t[118] = 238;\n\t  t[119] = 239;\n\t  t[120] = 241;\n\t  t[121] = 243;\n\t  t[122] = 242;\n\t  t[123] = 244;\n\t  t[124] = 246;\n\t  t[125] = 245;\n\t  t[126] = 250;\n\t  t[127] = 249;\n\t  t[128] = 251;\n\t  t[129] = 252;\n\t  t[130] = 8224;\n\t  t[131] = 176;\n\t  t[132] = 162;\n\t  t[133] = 163;\n\t  t[134] = 167;\n\t  t[135] = 8226;\n\t  t[136] = 182;\n\t  t[137] = 223;\n\t  t[138] = 174;\n\t  t[139] = 169;\n\t  t[140] = 8482;\n\t  t[141] = 180;\n\t  t[142] = 168;\n\t  t[143] = 8800;\n\t  t[144] = 198;\n\t  t[145] = 216;\n\t  t[146] = 8734;\n\t  t[147] = 177;\n\t  t[148] = 8804;\n\t  t[149] = 8805;\n\t  t[150] = 165;\n\t  t[151] = 181;\n\t  t[152] = 8706;\n\t  t[153] = 8721;\n\t  t[154] = 8719;\n\t  t[156] = 8747;\n\t  t[157] = 170;\n\t  t[158] = 186;\n\t  t[159] = 8486;\n\t  t[160] = 230;\n\t  t[161] = 248;\n\t  t[162] = 191;\n\t  t[163] = 161;\n\t  t[164] = 172;\n\t  t[165] = 8730;\n\t  t[166] = 402;\n\t  t[167] = 8776;\n\t  t[168] = 8710;\n\t  t[169] = 171;\n\t  t[170] = 187;\n\t  t[171] = 8230;\n\t  t[210] = 218;\n\t  t[223] = 711;\n\t  t[224] = 321;\n\t  t[225] = 322;\n\t  t[227] = 353;\n\t  t[229] = 382;\n\t  t[234] = 253;\n\t  t[252] = 263;\n\t  t[253] = 268;\n\t  t[254] = 269;\n\t  t[258] = 258;\n\t  t[260] = 260;\n\t  t[261] = 261;\n\t  t[265] = 280;\n\t  t[266] = 281;\n\t  t[268] = 283;\n\t  t[269] = 313;\n\t  t[275] = 323;\n\t  t[276] = 324;\n\t  t[278] = 328;\n\t  t[284] = 345;\n\t  t[285] = 346;\n\t  t[286] = 347;\n\t  t[292] = 367;\n\t  t[295] = 377;\n\t  t[296] = 378;\n\t  t[298] = 380;\n\t  t[305] = 963;\n\t  t[306] = 964;\n\t  t[307] = 966;\n\t  t[308] = 8215;\n\t  t[309] = 8252;\n\t  t[310] = 8319;\n\t  t[311] = 8359;\n\t  t[312] = 8592;\n\t  t[313] = 8593;\n\t  t[337] = 9552;\n\t  t[493] = 1039;\n\t  t[494] = 1040;\n\t  t[705] = 1524;\n\t  t[706] = 8362;\n\t  t[710] = 64288;\n\t  t[711] = 64298;\n\t  t[759] = 1617;\n\t  t[761] = 1776;\n\t  t[763] = 1778;\n\t  t[775] = 1652;\n\t  t[777] = 1764;\n\t  t[778] = 1780;\n\t  t[779] = 1781;\n\t  t[780] = 1782;\n\t  t[782] = 771;\n\t  t[783] = 64726;\n\t  t[786] = 8363;\n\t  t[788] = 8532;\n\t  t[790] = 768;\n\t  t[791] = 769;\n\t  t[792] = 768;\n\t  t[795] = 803;\n\t  t[797] = 64336;\n\t  t[798] = 64337;\n\t  t[799] = 64342;\n\t  t[800] = 64343;\n\t  t[801] = 64344;\n\t  t[802] = 64345;\n\t  t[803] = 64362;\n\t  t[804] = 64363;\n\t  t[805] = 64364;\n\t  t[2424] = 7821;\n\t  t[2425] = 7822;\n\t  t[2426] = 7823;\n\t  t[2427] = 7824;\n\t  t[2428] = 7825;\n\t  t[2429] = 7826;\n\t  t[2430] = 7827;\n\t  t[2433] = 7682;\n\t  t[2678] = 8045;\n\t  t[2679] = 8046;\n\t  t[2830] = 1552;\n\t  t[2838] = 686;\n\t  t[2840] = 751;\n\t  t[2842] = 753;\n\t  t[2843] = 754;\n\t  t[2844] = 755;\n\t  t[2846] = 757;\n\t  t[2856] = 767;\n\t  t[2857] = 848;\n\t  t[2858] = 849;\n\t  t[2862] = 853;\n\t  t[2863] = 854;\n\t  t[2864] = 855;\n\t  t[2865] = 861;\n\t  t[2866] = 862;\n\t  t[2906] = 7460;\n\t  t[2908] = 7462;\n\t  t[2909] = 7463;\n\t  t[2910] = 7464;\n\t  t[2912] = 7466;\n\t  t[2913] = 7467;\n\t  t[2914] = 7468;\n\t  t[2916] = 7470;\n\t  t[2917] = 7471;\n\t  t[2918] = 7472;\n\t  t[2920] = 7474;\n\t  t[2921] = 7475;\n\t  t[2922] = 7476;\n\t  t[2924] = 7478;\n\t  t[2925] = 7479;\n\t  t[2926] = 7480;\n\t  t[2928] = 7482;\n\t  t[2929] = 7483;\n\t  t[2930] = 7484;\n\t  t[2932] = 7486;\n\t  t[2933] = 7487;\n\t  t[2934] = 7488;\n\t  t[2936] = 7490;\n\t  t[2937] = 7491;\n\t  t[2938] = 7492;\n\t  t[2940] = 7494;\n\t  t[2941] = 7495;\n\t  t[2942] = 7496;\n\t  t[2944] = 7498;\n\t  t[2946] = 7500;\n\t  t[2948] = 7502;\n\t  t[2950] = 7504;\n\t  t[2951] = 7505;\n\t  t[2952] = 7506;\n\t  t[2954] = 7508;\n\t  t[2955] = 7509;\n\t  t[2956] = 7510;\n\t  t[2958] = 7512;\n\t  t[2959] = 7513;\n\t  t[2960] = 7514;\n\t  t[2962] = 7516;\n\t  t[2963] = 7517;\n\t  t[2964] = 7518;\n\t  t[2966] = 7520;\n\t  t[2967] = 7521;\n\t  t[2968] = 7522;\n\t  t[2970] = 7524;\n\t  t[2971] = 7525;\n\t  t[2972] = 7526;\n\t  t[2974] = 7528;\n\t  t[2975] = 7529;\n\t  t[2976] = 7530;\n\t  t[2978] = 1537;\n\t  t[2979] = 1538;\n\t  t[2980] = 1539;\n\t  t[2982] = 1549;\n\t  t[2983] = 1551;\n\t  t[2984] = 1552;\n\t  t[2986] = 1554;\n\t  t[2987] = 1555;\n\t  t[2988] = 1556;\n\t  t[2990] = 1623;\n\t  t[2991] = 1624;\n\t  t[2995] = 1775;\n\t  t[2999] = 1791;\n\t  t[3002] = 64290;\n\t  t[3003] = 64291;\n\t  t[3004] = 64292;\n\t  t[3006] = 64294;\n\t  t[3007] = 64295;\n\t  t[3008] = 64296;\n\t  t[3011] = 1900;\n\t  t[3014] = 8223;\n\t  t[3015] = 8244;\n\t  t[3017] = 7532;\n\t  t[3018] = 7533;\n\t  t[3019] = 7534;\n\t  t[3075] = 7590;\n\t  t[3076] = 7591;\n\t  t[3079] = 7594;\n\t  t[3080] = 7595;\n\t  t[3083] = 7598;\n\t  t[3084] = 7599;\n\t  t[3087] = 7602;\n\t  t[3088] = 7603;\n\t  t[3091] = 7606;\n\t  t[3092] = 7607;\n\t  t[3095] = 7610;\n\t  t[3096] = 7611;\n\t  t[3099] = 7614;\n\t  t[3100] = 7615;\n\t  t[3103] = 7618;\n\t  t[3104] = 7619;\n\t  t[3107] = 8337;\n\t  t[3108] = 8338;\n\t  t[3116] = 1884;\n\t  t[3119] = 1885;\n\t  t[3120] = 1885;\n\t  t[3123] = 1886;\n\t  t[3124] = 1886;\n\t  t[3127] = 1887;\n\t  t[3128] = 1887;\n\t  t[3131] = 1888;\n\t  t[3132] = 1888;\n\t  t[3135] = 1889;\n\t  t[3136] = 1889;\n\t  t[3139] = 1890;\n\t  t[3140] = 1890;\n\t  t[3143] = 1891;\n\t  t[3144] = 1891;\n\t  t[3147] = 1892;\n\t  t[3148] = 1892;\n\t  t[3153] = 580;\n\t  t[3154] = 581;\n\t  t[3157] = 584;\n\t  t[3158] = 585;\n\t  t[3161] = 588;\n\t  t[3162] = 589;\n\t  t[3165] = 891;\n\t  t[3166] = 892;\n\t  t[3169] = 1274;\n\t  t[3170] = 1275;\n\t  t[3173] = 1278;\n\t  t[3174] = 1279;\n\t  t[3181] = 7622;\n\t  t[3182] = 7623;\n\t  t[3282] = 11799;\n\t  t[3316] = 578;\n\t  t[3379] = 42785;\n\t  t[3393] = 1159;\n\t  t[3416] = 8377;\n\t});\n\tvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[227] = 322;\n\t  t[264] = 261;\n\t  t[291] = 346;\n\t});\n\tvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[1] = 32;\n\t  t[4] = 65;\n\t  t[17] = 66;\n\t  t[18] = 67;\n\t  t[24] = 68;\n\t  t[28] = 69;\n\t  t[38] = 70;\n\t  t[39] = 71;\n\t  t[44] = 72;\n\t  t[47] = 73;\n\t  t[58] = 74;\n\t  t[60] = 75;\n\t  t[62] = 76;\n\t  t[68] = 77;\n\t  t[69] = 78;\n\t  t[75] = 79;\n\t  t[87] = 80;\n\t  t[89] = 81;\n\t  t[90] = 82;\n\t  t[94] = 83;\n\t  t[100] = 84;\n\t  t[104] = 85;\n\t  t[115] = 86;\n\t  t[116] = 87;\n\t  t[121] = 88;\n\t  t[122] = 89;\n\t  t[127] = 90;\n\t  t[258] = 97;\n\t  t[268] = 261;\n\t  t[271] = 98;\n\t  t[272] = 99;\n\t  t[273] = 263;\n\t  t[282] = 100;\n\t  t[286] = 101;\n\t  t[295] = 281;\n\t  t[296] = 102;\n\t  t[336] = 103;\n\t  t[346] = 104;\n\t  t[349] = 105;\n\t  t[361] = 106;\n\t  t[364] = 107;\n\t  t[367] = 108;\n\t  t[371] = 322;\n\t  t[373] = 109;\n\t  t[374] = 110;\n\t  t[381] = 111;\n\t  t[383] = 243;\n\t  t[393] = 112;\n\t  t[395] = 113;\n\t  t[396] = 114;\n\t  t[400] = 115;\n\t  t[401] = 347;\n\t  t[410] = 116;\n\t  t[437] = 117;\n\t  t[448] = 118;\n\t  t[449] = 119;\n\t  t[454] = 120;\n\t  t[455] = 121;\n\t  t[460] = 122;\n\t  t[463] = 380;\n\t  t[853] = 44;\n\t  t[855] = 58;\n\t  t[856] = 46;\n\t  t[876] = 47;\n\t  t[878] = 45;\n\t  t[882] = 45;\n\t  t[894] = 40;\n\t  t[895] = 41;\n\t  t[896] = 91;\n\t  t[897] = 93;\n\t  t[923] = 64;\n\t  t[1004] = 48;\n\t  t[1005] = 49;\n\t  t[1006] = 50;\n\t  t[1007] = 51;\n\t  t[1008] = 52;\n\t  t[1009] = 53;\n\t  t[1010] = 54;\n\t  t[1011] = 55;\n\t  t[1012] = 56;\n\t  t[1013] = 57;\n\t  t[1081] = 37;\n\t  t[1085] = 43;\n\t  t[1086] = 45;\n\t});\n\texports.getStdFontMap = getStdFontMap;\n\texports.getNonStdFontMap = getNonStdFontMap;\n\texports.getSerifFonts = getSerifFonts;\n\texports.getSymbolsFonts = getSymbolsFonts;\n\texports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n\texports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\texports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ },\n\n/***/ 410:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tvar getLookupTableFactory = __webpack_require__(11).getLookupTableFactory;\n\tvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n\t  t[63721] = 0x00A9;\n\t  t[63193] = 0x00A9;\n\t  t[63720] = 0x00AE;\n\t  t[63194] = 0x00AE;\n\t  t[63722] = 0x2122;\n\t  t[63195] = 0x2122;\n\t  t[63729] = 0x23A7;\n\t  t[63730] = 0x23A8;\n\t  t[63731] = 0x23A9;\n\t  t[63740] = 0x23AB;\n\t  t[63741] = 0x23AC;\n\t  t[63742] = 0x23AD;\n\t  t[63726] = 0x23A1;\n\t  t[63727] = 0x23A2;\n\t  t[63728] = 0x23A3;\n\t  t[63737] = 0x23A4;\n\t  t[63738] = 0x23A5;\n\t  t[63739] = 0x23A6;\n\t  t[63723] = 0x239B;\n\t  t[63724] = 0x239C;\n\t  t[63725] = 0x239D;\n\t  t[63734] = 0x239E;\n\t  t[63735] = 0x239F;\n\t  t[63736] = 0x23A0;\n\t});\n\tfunction mapSpecialUnicodeValues(code) {\n\t  if (code >= 0xFFF0 && code <= 0xFFFF) {\n\t    return 0;\n\t  } else if (code >= 0xF600 && code <= 0xF8FF) {\n\t    return getSpecialPUASymbols()[code] || code;\n\t  } else if (code === 0x00AD) {\n\t    return 0x002D;\n\t  }\n\t  return code;\n\t}\n\tfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n\t  var unicode = glyphsUnicodeMap[name];\n\t  if (unicode !== undefined) {\n\t    return unicode;\n\t  }\n\t  if (!name) {\n\t    return -1;\n\t  }\n\t  if (name[0] === 'u') {\n\t    var nameLen = name.length,\n\t        hexStr;\n\t    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n\t      hexStr = name.substr(3);\n\t    } else if (nameLen >= 5 && nameLen <= 7) {\n\t      hexStr = name.substr(1);\n\t    } else {\n\t      return -1;\n\t    }\n\t    if (hexStr === hexStr.toUpperCase()) {\n\t      unicode = parseInt(hexStr, 16);\n\t      if (unicode >= 0) {\n\t        return unicode;\n\t      }\n\t    }\n\t  }\n\t  return -1;\n\t}\n\tvar UnicodeRanges = [{\n\t  'begin': 0x0000,\n\t  'end': 0x007F\n\t}, {\n\t  'begin': 0x0080,\n\t  'end': 0x00FF\n\t}, {\n\t  'begin': 0x0100,\n\t  'end': 0x017F\n\t}, {\n\t  'begin': 0x0180,\n\t  'end': 0x024F\n\t}, {\n\t  'begin': 0x0250,\n\t  'end': 0x02AF\n\t}, {\n\t  'begin': 0x02B0,\n\t  'end': 0x02FF\n\t}, {\n\t  'begin': 0x0300,\n\t  'end': 0x036F\n\t}, {\n\t  'begin': 0x0370,\n\t  'end': 0x03FF\n\t}, {\n\t  'begin': 0x2C80,\n\t  'end': 0x2CFF\n\t}, {\n\t  'begin': 0x0400,\n\t  'end': 0x04FF\n\t}, {\n\t  'begin': 0x0530,\n\t  'end': 0x058F\n\t}, {\n\t  'begin': 0x0590,\n\t  'end': 0x05FF\n\t}, {\n\t  'begin': 0xA500,\n\t  'end': 0xA63F\n\t}, {\n\t  'begin': 0x0600,\n\t  'end': 0x06FF\n\t}, {\n\t  'begin': 0x07C0,\n\t  'end': 0x07FF\n\t}, {\n\t  'begin': 0x0900,\n\t  'end': 0x097F\n\t}, {\n\t  'begin': 0x0980,\n\t  'end': 0x09FF\n\t}, {\n\t  'begin': 0x0A00,\n\t  'end': 0x0A7F\n\t}, {\n\t  'begin': 0x0A80,\n\t  'end': 0x0AFF\n\t}, {\n\t  'begin': 0x0B00,\n\t  'end': 0x0B7F\n\t}, {\n\t  'begin': 0x0B80,\n\t  'end': 0x0BFF\n\t}, {\n\t  'begin': 0x0C00,\n\t  'end': 0x0C7F\n\t}, {\n\t  'begin': 0x0C80,\n\t  'end': 0x0CFF\n\t}, {\n\t  'begin': 0x0D00,\n\t  'end': 0x0D7F\n\t}, {\n\t  'begin': 0x0E00,\n\t  'end': 0x0E7F\n\t}, {\n\t  'begin': 0x0E80,\n\t  'end': 0x0EFF\n\t}, {\n\t  'begin': 0x10A0,\n\t  'end': 0x10FF\n\t}, {\n\t  'begin': 0x1B00,\n\t  'end': 0x1B7F\n\t}, {\n\t  'begin': 0x1100,\n\t  'end': 0x11FF\n\t}, {\n\t  'begin': 0x1E00,\n\t  'end': 0x1EFF\n\t}, {\n\t  'begin': 0x1F00,\n\t  'end': 0x1FFF\n\t}, {\n\t  'begin': 0x2000,\n\t  'end': 0x206F\n\t}, {\n\t  'begin': 0x2070,\n\t  'end': 0x209F\n\t}, {\n\t  'begin': 0x20A0,\n\t  'end': 0x20CF\n\t}, {\n\t  'begin': 0x20D0,\n\t  'end': 0x20FF\n\t}, {\n\t  'begin': 0x2100,\n\t  'end': 0x214F\n\t}, {\n\t  'begin': 0x2150,\n\t  'end': 0x218F\n\t}, {\n\t  'begin': 0x2190,\n\t  'end': 0x21FF\n\t}, {\n\t  'begin': 0x2200,\n\t  'end': 0x22FF\n\t}, {\n\t  'begin': 0x2300,\n\t  'end': 0x23FF\n\t}, {\n\t  'begin': 0x2400,\n\t  'end': 0x243F\n\t}, {\n\t  'begin': 0x2440,\n\t  'end': 0x245F\n\t}, {\n\t  'begin': 0x2460,\n\t  'end': 0x24FF\n\t}, {\n\t  'begin': 0x2500,\n\t  'end': 0x257F\n\t}, {\n\t  'begin': 0x2580,\n\t  'end': 0x259F\n\t}, {\n\t  'begin': 0x25A0,\n\t  'end': 0x25FF\n\t}, {\n\t  'begin': 0x2600,\n\t  'end': 0x26FF\n\t}, {\n\t  'begin': 0x2700,\n\t  'end': 0x27BF\n\t}, {\n\t  'begin': 0x3000,\n\t  'end': 0x303F\n\t}, {\n\t  'begin': 0x3040,\n\t  'end': 0x309F\n\t}, {\n\t  'begin': 0x30A0,\n\t  'end': 0x30FF\n\t}, {\n\t  'begin': 0x3100,\n\t  'end': 0x312F\n\t}, {\n\t  'begin': 0x3130,\n\t  'end': 0x318F\n\t}, {\n\t  'begin': 0xA840,\n\t  'end': 0xA87F\n\t}, {\n\t  'begin': 0x3200,\n\t  'end': 0x32FF\n\t}, {\n\t  'begin': 0x3300,\n\t  'end': 0x33FF\n\t}, {\n\t  'begin': 0xAC00,\n\t  'end': 0xD7AF\n\t}, {\n\t  'begin': 0xD800,\n\t  'end': 0xDFFF\n\t}, {\n\t  'begin': 0x10900,\n\t  'end': 0x1091F\n\t}, {\n\t  'begin': 0x4E00,\n\t  'end': 0x9FFF\n\t}, {\n\t  'begin': 0xE000,\n\t  'end': 0xF8FF\n\t}, {\n\t  'begin': 0x31C0,\n\t  'end': 0x31EF\n\t}, {\n\t  'begin': 0xFB00,\n\t  'end': 0xFB4F\n\t}, {\n\t  'begin': 0xFB50,\n\t  'end': 0xFDFF\n\t}, {\n\t  'begin': 0xFE20,\n\t  'end': 0xFE2F\n\t}, {\n\t  'begin': 0xFE10,\n\t  'end': 0xFE1F\n\t}, {\n\t  'begin': 0xFE50,\n\t  'end': 0xFE6F\n\t}, {\n\t  'begin': 0xFE70,\n\t  'end': 0xFEFF\n\t}, {\n\t  'begin': 0xFF00,\n\t  'end': 0xFFEF\n\t}, {\n\t  'begin': 0xFFF0,\n\t  'end': 0xFFFF\n\t}, {\n\t  'begin': 0x0F00,\n\t  'end': 0x0FFF\n\t}, {\n\t  'begin': 0x0700,\n\t  'end': 0x074F\n\t}, {\n\t  'begin': 0x0780,\n\t  'end': 0x07BF\n\t}, {\n\t  'begin': 0x0D80,\n\t  'end': 0x0DFF\n\t}, {\n\t  'begin': 0x1000,\n\t  'end': 0x109F\n\t}, {\n\t  'begin': 0x1200,\n\t  'end': 0x137F\n\t}, {\n\t  'begin': 0x13A0,\n\t  'end': 0x13FF\n\t}, {\n\t  'begin': 0x1400,\n\t  'end': 0x167F\n\t}, {\n\t  'begin': 0x1680,\n\t  'end': 0x169F\n\t}, {\n\t  'begin': 0x16A0,\n\t  'end': 0x16FF\n\t}, {\n\t  'begin': 0x1780,\n\t  'end': 0x17FF\n\t}, {\n\t  'begin': 0x1800,\n\t  'end': 0x18AF\n\t}, {\n\t  'begin': 0x2800,\n\t  'end': 0x28FF\n\t}, {\n\t  'begin': 0xA000,\n\t  'end': 0xA48F\n\t}, {\n\t  'begin': 0x1700,\n\t  'end': 0x171F\n\t}, {\n\t  'begin': 0x10300,\n\t  'end': 0x1032F\n\t}, {\n\t  'begin': 0x10330,\n\t  'end': 0x1034F\n\t}, {\n\t  'begin': 0x10400,\n\t  'end': 0x1044F\n\t}, {\n\t  'begin': 0x1D000,\n\t  'end': 0x1D0FF\n\t}, {\n\t  'begin': 0x1D400,\n\t  'end': 0x1D7FF\n\t}, {\n\t  'begin': 0xFF000,\n\t  'end': 0xFFFFD\n\t}, {\n\t  'begin': 0xFE00,\n\t  'end': 0xFE0F\n\t}, {\n\t  'begin': 0xE0000,\n\t  'end': 0xE007F\n\t}, {\n\t  'begin': 0x1900,\n\t  'end': 0x194F\n\t}, {\n\t  'begin': 0x1950,\n\t  'end': 0x197F\n\t}, {\n\t  'begin': 0x1980,\n\t  'end': 0x19DF\n\t}, {\n\t  'begin': 0x1A00,\n\t  'end': 0x1A1F\n\t}, {\n\t  'begin': 0x2C00,\n\t  'end': 0x2C5F\n\t}, {\n\t  'begin': 0x2D30,\n\t  'end': 0x2D7F\n\t}, {\n\t  'begin': 0x4DC0,\n\t  'end': 0x4DFF\n\t}, {\n\t  'begin': 0xA800,\n\t  'end': 0xA82F\n\t}, {\n\t  'begin': 0x10000,\n\t  'end': 0x1007F\n\t}, {\n\t  'begin': 0x10140,\n\t  'end': 0x1018F\n\t}, {\n\t  'begin': 0x10380,\n\t  'end': 0x1039F\n\t}, {\n\t  'begin': 0x103A0,\n\t  'end': 0x103DF\n\t}, {\n\t  'begin': 0x10450,\n\t  'end': 0x1047F\n\t}, {\n\t  'begin': 0x10480,\n\t  'end': 0x104AF\n\t}, {\n\t  'begin': 0x10800,\n\t  'end': 0x1083F\n\t}, {\n\t  'begin': 0x10A00,\n\t  'end': 0x10A5F\n\t}, {\n\t  'begin': 0x1D300,\n\t  'end': 0x1D35F\n\t}, {\n\t  'begin': 0x12000,\n\t  'end': 0x123FF\n\t}, {\n\t  'begin': 0x1D360,\n\t  'end': 0x1D37F\n\t}, {\n\t  'begin': 0x1B80,\n\t  'end': 0x1BBF\n\t}, {\n\t  'begin': 0x1C00,\n\t  'end': 0x1C4F\n\t}, {\n\t  'begin': 0x1C50,\n\t  'end': 0x1C7F\n\t}, {\n\t  'begin': 0xA880,\n\t  'end': 0xA8DF\n\t}, {\n\t  'begin': 0xA900,\n\t  'end': 0xA92F\n\t}, {\n\t  'begin': 0xA930,\n\t  'end': 0xA95F\n\t}, {\n\t  'begin': 0xAA00,\n\t  'end': 0xAA5F\n\t}, {\n\t  'begin': 0x10190,\n\t  'end': 0x101CF\n\t}, {\n\t  'begin': 0x101D0,\n\t  'end': 0x101FF\n\t}, {\n\t  'begin': 0x102A0,\n\t  'end': 0x102DF\n\t}, {\n\t  'begin': 0x1F030,\n\t  'end': 0x1F09F\n\t}];\n\tfunction getUnicodeRangeFor(value) {\n\t  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n\t    var range = UnicodeRanges[i];\n\t    if (value >= range.begin && value < range.end) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\tfunction isRTLRangeFor(value) {\n\t  var range = UnicodeRanges[13];\n\t  if (value >= range.begin && value < range.end) {\n\t    return true;\n\t  }\n\t  range = UnicodeRanges[11];\n\t  if (value >= range.begin && value < range.end) {\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\tvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n\t  t['\\u00A8'] = '\\u0020\\u0308';\n\t  t['\\u00AF'] = '\\u0020\\u0304';\n\t  t['\\u00B4'] = '\\u0020\\u0301';\n\t  t['\\u00B5'] = '\\u03BC';\n\t  t['\\u00B8'] = '\\u0020\\u0327';\n\t  t['\\u0132'] = '\\u0049\\u004A';\n\t  t['\\u0133'] = '\\u0069\\u006A';\n\t  t['\\u013F'] = '\\u004C\\u00B7';\n\t  t['\\u0140'] = '\\u006C\\u00B7';\n\t  t['\\u0149'] = '\\u02BC\\u006E';\n\t  t['\\u017F'] = '\\u0073';\n\t  t['\\u01C4'] = '\\u0044\\u017D';\n\t  t['\\u01C5'] = '\\u0044\\u017E';\n\t  t['\\u01C6'] = '\\u0064\\u017E';\n\t  t['\\u01C7'] = '\\u004C\\u004A';\n\t  t['\\u01C8'] = '\\u004C\\u006A';\n\t  t['\\u01C9'] = '\\u006C\\u006A';\n\t  t['\\u01CA'] = '\\u004E\\u004A';\n\t  t['\\u01CB'] = '\\u004E\\u006A';\n\t  t['\\u01CC'] = '\\u006E\\u006A';\n\t  t['\\u01F1'] = '\\u0044\\u005A';\n\t  t['\\u01F2'] = '\\u0044\\u007A';\n\t  t['\\u01F3'] = '\\u0064\\u007A';\n\t  t['\\u02D8'] = '\\u0020\\u0306';\n\t  t['\\u02D9'] = '\\u0020\\u0307';\n\t  t['\\u02DA'] = '\\u0020\\u030A';\n\t  t['\\u02DB'] = '\\u0020\\u0328';\n\t  t['\\u02DC'] = '\\u0020\\u0303';\n\t  t['\\u02DD'] = '\\u0020\\u030B';\n\t  t['\\u037A'] = '\\u0020\\u0345';\n\t  t['\\u0384'] = '\\u0020\\u0301';\n\t  t['\\u03D0'] = '\\u03B2';\n\t  t['\\u03D1'] = '\\u03B8';\n\t  t['\\u03D2'] = '\\u03A5';\n\t  t['\\u03D5'] = '\\u03C6';\n\t  t['\\u03D6'] = '\\u03C0';\n\t  t['\\u03F0'] = '\\u03BA';\n\t  t['\\u03F1'] = '\\u03C1';\n\t  t['\\u03F2'] = '\\u03C2';\n\t  t['\\u03F4'] = '\\u0398';\n\t  t['\\u03F5'] = '\\u03B5';\n\t  t['\\u03F9'] = '\\u03A3';\n\t  t['\\u0587'] = '\\u0565\\u0582';\n\t  t['\\u0675'] = '\\u0627\\u0674';\n\t  t['\\u0676'] = '\\u0648\\u0674';\n\t  t['\\u0677'] = '\\u06C7\\u0674';\n\t  t['\\u0678'] = '\\u064A\\u0674';\n\t  t['\\u0E33'] = '\\u0E4D\\u0E32';\n\t  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n\t  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n\t  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n\t  t['\\u0F77'] = '\\u0FB2\\u0F81';\n\t  t['\\u0F79'] = '\\u0FB3\\u0F81';\n\t  t['\\u1E9A'] = '\\u0061\\u02BE';\n\t  t['\\u1FBD'] = '\\u0020\\u0313';\n\t  t['\\u1FBF'] = '\\u0020\\u0313';\n\t  t['\\u1FC0'] = '\\u0020\\u0342';\n\t  t['\\u1FFE'] = '\\u0020\\u0314';\n\t  t['\\u2002'] = '\\u0020';\n\t  t['\\u2003'] = '\\u0020';\n\t  t['\\u2004'] = '\\u0020';\n\t  t['\\u2005'] = '\\u0020';\n\t  t['\\u2006'] = '\\u0020';\n\t  t['\\u2008'] = '\\u0020';\n\t  t['\\u2009'] = '\\u0020';\n\t  t['\\u200A'] = '\\u0020';\n\t  t['\\u2017'] = '\\u0020\\u0333';\n\t  t['\\u2024'] = '\\u002E';\n\t  t['\\u2025'] = '\\u002E\\u002E';\n\t  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n\t  t['\\u2033'] = '\\u2032\\u2032';\n\t  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n\t  t['\\u2036'] = '\\u2035\\u2035';\n\t  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n\t  t['\\u203C'] = '\\u0021\\u0021';\n\t  t['\\u203E'] = '\\u0020\\u0305';\n\t  t['\\u2047'] = '\\u003F\\u003F';\n\t  t['\\u2048'] = '\\u003F\\u0021';\n\t  t['\\u2049'] = '\\u0021\\u003F';\n\t  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n\t  t['\\u205F'] = '\\u0020';\n\t  t['\\u20A8'] = '\\u0052\\u0073';\n\t  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n\t  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n\t  t['\\u2103'] = '\\u00B0\\u0043';\n\t  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n\t  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n\t  t['\\u2107'] = '\\u0190';\n\t  t['\\u2109'] = '\\u00B0\\u0046';\n\t  t['\\u2116'] = '\\u004E\\u006F';\n\t  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n\t  t['\\u2135'] = '\\u05D0';\n\t  t['\\u2136'] = '\\u05D1';\n\t  t['\\u2137'] = '\\u05D2';\n\t  t['\\u2138'] = '\\u05D3';\n\t  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n\t  t['\\u2160'] = '\\u0049';\n\t  t['\\u2161'] = '\\u0049\\u0049';\n\t  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n\t  t['\\u2163'] = '\\u0049\\u0056';\n\t  t['\\u2164'] = '\\u0056';\n\t  t['\\u2165'] = '\\u0056\\u0049';\n\t  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n\t  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n\t  t['\\u2168'] = '\\u0049\\u0058';\n\t  t['\\u2169'] = '\\u0058';\n\t  t['\\u216A'] = '\\u0058\\u0049';\n\t  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n\t  t['\\u216C'] = '\\u004C';\n\t  t['\\u216D'] = '\\u0043';\n\t  t['\\u216E'] = '\\u0044';\n\t  t['\\u216F'] = '\\u004D';\n\t  t['\\u2170'] = '\\u0069';\n\t  t['\\u2171'] = '\\u0069\\u0069';\n\t  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n\t  t['\\u2173'] = '\\u0069\\u0076';\n\t  t['\\u2174'] = '\\u0076';\n\t  t['\\u2175'] = '\\u0076\\u0069';\n\t  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n\t  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n\t  t['\\u2178'] = '\\u0069\\u0078';\n\t  t['\\u2179'] = '\\u0078';\n\t  t['\\u217A'] = '\\u0078\\u0069';\n\t  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n\t  t['\\u217C'] = '\\u006C';\n\t  t['\\u217D'] = '\\u0063';\n\t  t['\\u217E'] = '\\u0064';\n\t  t['\\u217F'] = '\\u006D';\n\t  t['\\u222C'] = '\\u222B\\u222B';\n\t  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n\t  t['\\u222F'] = '\\u222E\\u222E';\n\t  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n\t  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n\t  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n\t  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n\t  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n\t  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n\t  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n\t  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n\t  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n\t  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n\t  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n\t  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n\t  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n\t  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n\t  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n\t  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n\t  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n\t  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n\t  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n\t  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n\t  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n\t  t['\\u2488'] = '\\u0031\\u002E';\n\t  t['\\u2489'] = '\\u0032\\u002E';\n\t  t['\\u248A'] = '\\u0033\\u002E';\n\t  t['\\u248B'] = '\\u0034\\u002E';\n\t  t['\\u248C'] = '\\u0035\\u002E';\n\t  t['\\u248D'] = '\\u0036\\u002E';\n\t  t['\\u248E'] = '\\u0037\\u002E';\n\t  t['\\u248F'] = '\\u0038\\u002E';\n\t  t['\\u2490'] = '\\u0039\\u002E';\n\t  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n\t  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n\t  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n\t  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n\t  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n\t  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n\t  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n\t  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n\t  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n\t  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n\t  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n\t  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n\t  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n\t  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n\t  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n\t  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n\t  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n\t  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n\t  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n\t  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n\t  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n\t  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n\t  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n\t  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n\t  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n\t  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n\t  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n\t  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n\t  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n\t  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n\t  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n\t  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n\t  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n\t  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n\t  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n\t  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n\t  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n\t  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n\t  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n\t  t['\\u2A75'] = '\\u003D\\u003D';\n\t  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n\t  t['\\u2E9F'] = '\\u6BCD';\n\t  t['\\u2EF3'] = '\\u9F9F';\n\t  t['\\u2F00'] = '\\u4E00';\n\t  t['\\u2F01'] = '\\u4E28';\n\t  t['\\u2F02'] = '\\u4E36';\n\t  t['\\u2F03'] = '\\u4E3F';\n\t  t['\\u2F04'] = '\\u4E59';\n\t  t['\\u2F05'] = '\\u4E85';\n\t  t['\\u2F06'] = '\\u4E8C';\n\t  t['\\u2F07'] = '\\u4EA0';\n\t  t['\\u2F08'] = '\\u4EBA';\n\t  t['\\u2F09'] = '\\u513F';\n\t  t['\\u2F0A'] = '\\u5165';\n\t  t['\\u2F0B'] = '\\u516B';\n\t  t['\\u2F0C'] = '\\u5182';\n\t  t['\\u2F0D'] = '\\u5196';\n\t  t['\\u2F0E'] = '\\u51AB';\n\t  t['\\u2F0F'] = '\\u51E0';\n\t  t['\\u2F10'] = '\\u51F5';\n\t  t['\\u2F11'] = '\\u5200';\n\t  t['\\u2F12'] = '\\u529B';\n\t  t['\\u2F13'] = '\\u52F9';\n\t  t['\\u2F14'] = '\\u5315';\n\t  t['\\u2F15'] = '\\u531A';\n\t  t['\\u2F16'] = '\\u5338';\n\t  t['\\u2F17'] = '\\u5341';\n\t  t['\\u2F18'] = '\\u535C';\n\t  t['\\u2F19'] = '\\u5369';\n\t  t['\\u2F1A'] = '\\u5382';\n\t  t['\\u2F1B'] = '\\u53B6';\n\t  t['\\u2F1C'] = '\\u53C8';\n\t  t['\\u2F1D'] = '\\u53E3';\n\t  t['\\u2F1E'] = '\\u56D7';\n\t  t['\\u2F1F'] = '\\u571F';\n\t  t['\\u2F20'] = '\\u58EB';\n\t  t['\\u2F21'] = '\\u5902';\n\t  t['\\u2F22'] = '\\u590A';\n\t  t['\\u2F23'] = '\\u5915';\n\t  t['\\u2F24'] = '\\u5927';\n\t  t['\\u2F25'] = '\\u5973';\n\t  t['\\u2F26'] = '\\u5B50';\n\t  t['\\u2F27'] = '\\u5B80';\n\t  t['\\u2F28'] = '\\u5BF8';\n\t  t['\\u2F29'] = '\\u5C0F';\n\t  t['\\u2F2A'] = '\\u5C22';\n\t  t['\\u2F2B'] = '\\u5C38';\n\t  t['\\u2F2C'] = '\\u5C6E';\n\t  t['\\u2F2D'] = '\\u5C71';\n\t  t['\\u2F2E'] = '\\u5DDB';\n\t  t['\\u2F2F'] = '\\u5DE5';\n\t  t['\\u2F30'] = '\\u5DF1';\n\t  t['\\u2F31'] = '\\u5DFE';\n\t  t['\\u2F32'] = '\\u5E72';\n\t  t['\\u2F33'] = '\\u5E7A';\n\t  t['\\u2F34'] = '\\u5E7F';\n\t  t['\\u2F35'] = '\\u5EF4';\n\t  t['\\u2F36'] = '\\u5EFE';\n\t  t['\\u2F37'] = '\\u5F0B';\n\t  t['\\u2F38'] = '\\u5F13';\n\t  t['\\u2F39'] = '\\u5F50';\n\t  t['\\u2F3A'] = '\\u5F61';\n\t  t['\\u2F3B'] = '\\u5F73';\n\t  t['\\u2F3C'] = '\\u5FC3';\n\t  t['\\u2F3D'] = '\\u6208';\n\t  t['\\u2F3E'] = '\\u6236';\n\t  t['\\u2F3F'] = '\\u624B';\n\t  t['\\u2F40'] = '\\u652F';\n\t  t['\\u2F41'] = '\\u6534';\n\t  t['\\u2F42'] = '\\u6587';\n\t  t['\\u2F43'] = '\\u6597';\n\t  t['\\u2F44'] = '\\u65A4';\n\t  t['\\u2F45'] = '\\u65B9';\n\t  t['\\u2F46'] = '\\u65E0';\n\t  t['\\u2F47'] = '\\u65E5';\n\t  t['\\u2F48'] = '\\u66F0';\n\t  t['\\u2F49'] = '\\u6708';\n\t  t['\\u2F4A'] = '\\u6728';\n\t  t['\\u2F4B'] = '\\u6B20';\n\t  t['\\u2F4C'] = '\\u6B62';\n\t  t['\\u2F4D'] = '\\u6B79';\n\t  t['\\u2F4E'] = '\\u6BB3';\n\t  t['\\u2F4F'] = '\\u6BCB';\n\t  t['\\u2F50'] = '\\u6BD4';\n\t  t['\\u2F51'] = '\\u6BDB';\n\t  t['\\u2F52'] = '\\u6C0F';\n\t  t['\\u2F53'] = '\\u6C14';\n\t  t['\\u2F54'] = '\\u6C34';\n\t  t['\\u2F55'] = '\\u706B';\n\t  t['\\u2F56'] = '\\u722A';\n\t  t['\\u2F57'] = '\\u7236';\n\t  t['\\u2F58'] = '\\u723B';\n\t  t['\\u2F59'] = '\\u723F';\n\t  t['\\u2F5A'] = '\\u7247';\n\t  t['\\u2F5B'] = '\\u7259';\n\t  t['\\u2F5C'] = '\\u725B';\n\t  t['\\u2F5D'] = '\\u72AC';\n\t  t['\\u2F5E'] = '\\u7384';\n\t  t['\\u2F5F'] = '\\u7389';\n\t  t['\\u2F60'] = '\\u74DC';\n\t  t['\\u2F61'] = '\\u74E6';\n\t  t['\\u2F62'] = '\\u7518';\n\t  t['\\u2F63'] = '\\u751F';\n\t  t['\\u2F64'] = '\\u7528';\n\t  t['\\u2F65'] = '\\u7530';\n\t  t['\\u2F66'] = '\\u758B';\n\t  t['\\u2F67'] = '\\u7592';\n\t  t['\\u2F68'] = '\\u7676';\n\t  t['\\u2F69'] = '\\u767D';\n\t  t['\\u2F6A'] = '\\u76AE';\n\t  t['\\u2F6B'] = '\\u76BF';\n\t  t['\\u2F6C'] = '\\u76EE';\n\t  t['\\u2F6D'] = '\\u77DB';\n\t  t['\\u2F6E'] = '\\u77E2';\n\t  t['\\u2F6F'] = '\\u77F3';\n\t  t['\\u2F70'] = '\\u793A';\n\t  t['\\u2F71'] = '\\u79B8';\n\t  t['\\u2F72'] = '\\u79BE';\n\t  t['\\u2F73'] = '\\u7A74';\n\t  t['\\u2F74'] = '\\u7ACB';\n\t  t['\\u2F75'] = '\\u7AF9';\n\t  t['\\u2F76'] = '\\u7C73';\n\t  t['\\u2F77'] = '\\u7CF8';\n\t  t['\\u2F78'] = '\\u7F36';\n\t  t['\\u2F79'] = '\\u7F51';\n\t  t['\\u2F7A'] = '\\u7F8A';\n\t  t['\\u2F7B'] = '\\u7FBD';\n\t  t['\\u2F7C'] = '\\u8001';\n\t  t['\\u2F7D'] = '\\u800C';\n\t  t['\\u2F7E'] = '\\u8012';\n\t  t['\\u2F7F'] = '\\u8033';\n\t  t['\\u2F80'] = '\\u807F';\n\t  t['\\u2F81'] = '\\u8089';\n\t  t['\\u2F82'] = '\\u81E3';\n\t  t['\\u2F83'] = '\\u81EA';\n\t  t['\\u2F84'] = '\\u81F3';\n\t  t['\\u2F85'] = '\\u81FC';\n\t  t['\\u2F86'] = '\\u820C';\n\t  t['\\u2F87'] = '\\u821B';\n\t  t['\\u2F88'] = '\\u821F';\n\t  t['\\u2F89'] = '\\u826E';\n\t  t['\\u2F8A'] = '\\u8272';\n\t  t['\\u2F8B'] = '\\u8278';\n\t  t['\\u2F8C'] = '\\u864D';\n\t  t['\\u2F8D'] = '\\u866B';\n\t  t['\\u2F8E'] = '\\u8840';\n\t  t['\\u2F8F'] = '\\u884C';\n\t  t['\\u2F90'] = '\\u8863';\n\t  t['\\u2F91'] = '\\u897E';\n\t  t['\\u2F92'] = '\\u898B';\n\t  t['\\u2F93'] = '\\u89D2';\n\t  t['\\u2F94'] = '\\u8A00';\n\t  t['\\u2F95'] = '\\u8C37';\n\t  t['\\u2F96'] = '\\u8C46';\n\t  t['\\u2F97'] = '\\u8C55';\n\t  t['\\u2F98'] = '\\u8C78';\n\t  t['\\u2F99'] = '\\u8C9D';\n\t  t['\\u2F9A'] = '\\u8D64';\n\t  t['\\u2F9B'] = '\\u8D70';\n\t  t['\\u2F9C'] = '\\u8DB3';\n\t  t['\\u2F9D'] = '\\u8EAB';\n\t  t['\\u2F9E'] = '\\u8ECA';\n\t  t['\\u2F9F'] = '\\u8F9B';\n\t  t['\\u2FA0'] = '\\u8FB0';\n\t  t['\\u2FA1'] = '\\u8FB5';\n\t  t['\\u2FA2'] = '\\u9091';\n\t  t['\\u2FA3'] = '\\u9149';\n\t  t['\\u2FA4'] = '\\u91C6';\n\t  t['\\u2FA5'] = '\\u91CC';\n\t  t['\\u2FA6'] = '\\u91D1';\n\t  t['\\u2FA7'] = '\\u9577';\n\t  t['\\u2FA8'] = '\\u9580';\n\t  t['\\u2FA9'] = '\\u961C';\n\t  t['\\u2FAA'] = '\\u96B6';\n\t  t['\\u2FAB'] = '\\u96B9';\n\t  t['\\u2FAC'] = '\\u96E8';\n\t  t['\\u2FAD'] = '\\u9751';\n\t  t['\\u2FAE'] = '\\u975E';\n\t  t['\\u2FAF'] = '\\u9762';\n\t  t['\\u2FB0'] = '\\u9769';\n\t  t['\\u2FB1'] = '\\u97CB';\n\t  t['\\u2FB2'] = '\\u97ED';\n\t  t['\\u2FB3'] = '\\u97F3';\n\t  t['\\u2FB4'] = '\\u9801';\n\t  t['\\u2FB5'] = '\\u98A8';\n\t  t['\\u2FB6'] = '\\u98DB';\n\t  t['\\u2FB7'] = '\\u98DF';\n\t  t['\\u2FB8'] = '\\u9996';\n\t  t['\\u2FB9'] = '\\u9999';\n\t  t['\\u2FBA'] = '\\u99AC';\n\t  t['\\u2FBB'] = '\\u9AA8';\n\t  t['\\u2FBC'] = '\\u9AD8';\n\t  t['\\u2FBD'] = '\\u9ADF';\n\t  t['\\u2FBE'] = '\\u9B25';\n\t  t['\\u2FBF'] = '\\u9B2F';\n\t  t['\\u2FC0'] = '\\u9B32';\n\t  t['\\u2FC1'] = '\\u9B3C';\n\t  t['\\u2FC2'] = '\\u9B5A';\n\t  t['\\u2FC3'] = '\\u9CE5';\n\t  t['\\u2FC4'] = '\\u9E75';\n\t  t['\\u2FC5'] = '\\u9E7F';\n\t  t['\\u2FC6'] = '\\u9EA5';\n\t  t['\\u2FC7'] = '\\u9EBB';\n\t  t['\\u2FC8'] = '\\u9EC3';\n\t  t['\\u2FC9'] = '\\u9ECD';\n\t  t['\\u2FCA'] = '\\u9ED1';\n\t  t['\\u2FCB'] = '\\u9EF9';\n\t  t['\\u2FCC'] = '\\u9EFD';\n\t  t['\\u2FCD'] = '\\u9F0E';\n\t  t['\\u2FCE'] = '\\u9F13';\n\t  t['\\u2FCF'] = '\\u9F20';\n\t  t['\\u2FD0'] = '\\u9F3B';\n\t  t['\\u2FD1'] = '\\u9F4A';\n\t  t['\\u2FD2'] = '\\u9F52';\n\t  t['\\u2FD3'] = '\\u9F8D';\n\t  t['\\u2FD4'] = '\\u9F9C';\n\t  t['\\u2FD5'] = '\\u9FA0';\n\t  t['\\u3036'] = '\\u3012';\n\t  t['\\u3038'] = '\\u5341';\n\t  t['\\u3039'] = '\\u5344';\n\t  t['\\u303A'] = '\\u5345';\n\t  t['\\u309B'] = '\\u0020\\u3099';\n\t  t['\\u309C'] = '\\u0020\\u309A';\n\t  t['\\u3131'] = '\\u1100';\n\t  t['\\u3132'] = '\\u1101';\n\t  t['\\u3133'] = '\\u11AA';\n\t  t['\\u3134'] = '\\u1102';\n\t  t['\\u3135'] = '\\u11AC';\n\t  t['\\u3136'] = '\\u11AD';\n\t  t['\\u3137'] = '\\u1103';\n\t  t['\\u3138'] = '\\u1104';\n\t  t['\\u3139'] = '\\u1105';\n\t  t['\\u313A'] = '\\u11B0';\n\t  t['\\u313B'] = '\\u11B1';\n\t  t['\\u313C'] = '\\u11B2';\n\t  t['\\u313D'] = '\\u11B3';\n\t  t['\\u313E'] = '\\u11B4';\n\t  t['\\u313F'] = '\\u11B5';\n\t  t['\\u3140'] = '\\u111A';\n\t  t['\\u3141'] = '\\u1106';\n\t  t['\\u3142'] = '\\u1107';\n\t  t['\\u3143'] = '\\u1108';\n\t  t['\\u3144'] = '\\u1121';\n\t  t['\\u3145'] = '\\u1109';\n\t  t['\\u3146'] = '\\u110A';\n\t  t['\\u3147'] = '\\u110B';\n\t  t['\\u3148'] = '\\u110C';\n\t  t['\\u3149'] = '\\u110D';\n\t  t['\\u314A'] = '\\u110E';\n\t  t['\\u314B'] = '\\u110F';\n\t  t['\\u314C'] = '\\u1110';\n\t  t['\\u314D'] = '\\u1111';\n\t  t['\\u314E'] = '\\u1112';\n\t  t['\\u314F'] = '\\u1161';\n\t  t['\\u3150'] = '\\u1162';\n\t  t['\\u3151'] = '\\u1163';\n\t  t['\\u3152'] = '\\u1164';\n\t  t['\\u3153'] = '\\u1165';\n\t  t['\\u3154'] = '\\u1166';\n\t  t['\\u3155'] = '\\u1167';\n\t  t['\\u3156'] = '\\u1168';\n\t  t['\\u3157'] = '\\u1169';\n\t  t['\\u3158'] = '\\u116A';\n\t  t['\\u3159'] = '\\u116B';\n\t  t['\\u315A'] = '\\u116C';\n\t  t['\\u315B'] = '\\u116D';\n\t  t['\\u315C'] = '\\u116E';\n\t  t['\\u315D'] = '\\u116F';\n\t  t['\\u315E'] = '\\u1170';\n\t  t['\\u315F'] = '\\u1171';\n\t  t['\\u3160'] = '\\u1172';\n\t  t['\\u3161'] = '\\u1173';\n\t  t['\\u3162'] = '\\u1174';\n\t  t['\\u3163'] = '\\u1175';\n\t  t['\\u3164'] = '\\u1160';\n\t  t['\\u3165'] = '\\u1114';\n\t  t['\\u3166'] = '\\u1115';\n\t  t['\\u3167'] = '\\u11C7';\n\t  t['\\u3168'] = '\\u11C8';\n\t  t['\\u3169'] = '\\u11CC';\n\t  t['\\u316A'] = '\\u11CE';\n\t  t['\\u316B'] = '\\u11D3';\n\t  t['\\u316C'] = '\\u11D7';\n\t  t['\\u316D'] = '\\u11D9';\n\t  t['\\u316E'] = '\\u111C';\n\t  t['\\u316F'] = '\\u11DD';\n\t  t['\\u3170'] = '\\u11DF';\n\t  t['\\u3171'] = '\\u111D';\n\t  t['\\u3172'] = '\\u111E';\n\t  t['\\u3173'] = '\\u1120';\n\t  t['\\u3174'] = '\\u1122';\n\t  t['\\u3175'] = '\\u1123';\n\t  t['\\u3176'] = '\\u1127';\n\t  t['\\u3177'] = '\\u1129';\n\t  t['\\u3178'] = '\\u112B';\n\t  t['\\u3179'] = '\\u112C';\n\t  t['\\u317A'] = '\\u112D';\n\t  t['\\u317B'] = '\\u112E';\n\t  t['\\u317C'] = '\\u112F';\n\t  t['\\u317D'] = '\\u1132';\n\t  t['\\u317E'] = '\\u1136';\n\t  t['\\u317F'] = '\\u1140';\n\t  t['\\u3180'] = '\\u1147';\n\t  t['\\u3181'] = '\\u114C';\n\t  t['\\u3182'] = '\\u11F1';\n\t  t['\\u3183'] = '\\u11F2';\n\t  t['\\u3184'] = '\\u1157';\n\t  t['\\u3185'] = '\\u1158';\n\t  t['\\u3186'] = '\\u1159';\n\t  t['\\u3187'] = '\\u1184';\n\t  t['\\u3188'] = '\\u1185';\n\t  t['\\u3189'] = '\\u1188';\n\t  t['\\u318A'] = '\\u1191';\n\t  t['\\u318B'] = '\\u1192';\n\t  t['\\u318C'] = '\\u1194';\n\t  t['\\u318D'] = '\\u119E';\n\t  t['\\u318E'] = '\\u11A1';\n\t  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n\t  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n\t  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n\t  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n\t  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n\t  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n\t  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n\t  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n\t  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n\t  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n\t  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n\t  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n\t  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n\t  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n\t  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n\t  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n\t  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n\t  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n\t  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n\t  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n\t  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n\t  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n\t  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n\t  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n\t  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n\t  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n\t  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n\t  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n\t  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n\t  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n\t  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n\t  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n\t  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n\t  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n\t  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n\t  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n\t  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n\t  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n\t  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n\t  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n\t  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n\t  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n\t  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n\t  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n\t  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n\t  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n\t  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n\t  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n\t  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n\t  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n\t  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n\t  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n\t  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n\t  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n\t  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n\t  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n\t  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n\t  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n\t  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n\t  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n\t  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n\t  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n\t  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n\t  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n\t  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n\t  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n\t  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n\t  t['\\u32C0'] = '\\u0031\\u6708';\n\t  t['\\u32C1'] = '\\u0032\\u6708';\n\t  t['\\u32C2'] = '\\u0033\\u6708';\n\t  t['\\u32C3'] = '\\u0034\\u6708';\n\t  t['\\u32C4'] = '\\u0035\\u6708';\n\t  t['\\u32C5'] = '\\u0036\\u6708';\n\t  t['\\u32C6'] = '\\u0037\\u6708';\n\t  t['\\u32C7'] = '\\u0038\\u6708';\n\t  t['\\u32C8'] = '\\u0039\\u6708';\n\t  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n\t  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n\t  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n\t  t['\\u3358'] = '\\u0030\\u70B9';\n\t  t['\\u3359'] = '\\u0031\\u70B9';\n\t  t['\\u335A'] = '\\u0032\\u70B9';\n\t  t['\\u335B'] = '\\u0033\\u70B9';\n\t  t['\\u335C'] = '\\u0034\\u70B9';\n\t  t['\\u335D'] = '\\u0035\\u70B9';\n\t  t['\\u335E'] = '\\u0036\\u70B9';\n\t  t['\\u335F'] = '\\u0037\\u70B9';\n\t  t['\\u3360'] = '\\u0038\\u70B9';\n\t  t['\\u3361'] = '\\u0039\\u70B9';\n\t  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n\t  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n\t  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n\t  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n\t  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n\t  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n\t  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n\t  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n\t  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n\t  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n\t  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n\t  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n\t  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n\t  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n\t  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n\t  t['\\u33E0'] = '\\u0031\\u65E5';\n\t  t['\\u33E1'] = '\\u0032\\u65E5';\n\t  t['\\u33E2'] = '\\u0033\\u65E5';\n\t  t['\\u33E3'] = '\\u0034\\u65E5';\n\t  t['\\u33E4'] = '\\u0035\\u65E5';\n\t  t['\\u33E5'] = '\\u0036\\u65E5';\n\t  t['\\u33E6'] = '\\u0037\\u65E5';\n\t  t['\\u33E7'] = '\\u0038\\u65E5';\n\t  t['\\u33E8'] = '\\u0039\\u65E5';\n\t  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n\t  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n\t  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n\t  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n\t  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n\t  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n\t  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n\t  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n\t  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n\t  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n\t  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n\t  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n\t  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n\t  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n\t  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n\t  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n\t  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n\t  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n\t  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n\t  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n\t  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n\t  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n\t  t['\\uFB00'] = '\\u0066\\u0066';\n\t  t['\\uFB01'] = '\\u0066\\u0069';\n\t  t['\\uFB02'] = '\\u0066\\u006C';\n\t  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n\t  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n\t  t['\\uFB05'] = '\\u017F\\u0074';\n\t  t['\\uFB06'] = '\\u0073\\u0074';\n\t  t['\\uFB13'] = '\\u0574\\u0576';\n\t  t['\\uFB14'] = '\\u0574\\u0565';\n\t  t['\\uFB15'] = '\\u0574\\u056B';\n\t  t['\\uFB16'] = '\\u057E\\u0576';\n\t  t['\\uFB17'] = '\\u0574\\u056D';\n\t  t['\\uFB4F'] = '\\u05D0\\u05DC';\n\t  t['\\uFB50'] = '\\u0671';\n\t  t['\\uFB51'] = '\\u0671';\n\t  t['\\uFB52'] = '\\u067B';\n\t  t['\\uFB53'] = '\\u067B';\n\t  t['\\uFB54'] = '\\u067B';\n\t  t['\\uFB55'] = '\\u067B';\n\t  t['\\uFB56'] = '\\u067E';\n\t  t['\\uFB57'] = '\\u067E';\n\t  t['\\uFB58'] = '\\u067E';\n\t  t['\\uFB59'] = '\\u067E';\n\t  t['\\uFB5A'] = '\\u0680';\n\t  t['\\uFB5B'] = '\\u0680';\n\t  t['\\uFB5C'] = '\\u0680';\n\t  t['\\uFB5D'] = '\\u0680';\n\t  t['\\uFB5E'] = '\\u067A';\n\t  t['\\uFB5F'] = '\\u067A';\n\t  t['\\uFB60'] = '\\u067A';\n\t  t['\\uFB61'] = '\\u067A';\n\t  t['\\uFB62'] = '\\u067F';\n\t  t['\\uFB63'] = '\\u067F';\n\t  t['\\uFB64'] = '\\u067F';\n\t  t['\\uFB65'] = '\\u067F';\n\t  t['\\uFB66'] = '\\u0679';\n\t  t['\\uFB67'] = '\\u0679';\n\t  t['\\uFB68'] = '\\u0679';\n\t  t['\\uFB69'] = '\\u0679';\n\t  t['\\uFB6A'] = '\\u06A4';\n\t  t['\\uFB6B'] = '\\u06A4';\n\t  t['\\uFB6C'] = '\\u06A4';\n\t  t['\\uFB6D'] = '\\u06A4';\n\t  t['\\uFB6E'] = '\\u06A6';\n\t  t['\\uFB6F'] = '\\u06A6';\n\t  t['\\uFB70'] = '\\u06A6';\n\t  t['\\uFB71'] = '\\u06A6';\n\t  t['\\uFB72'] = '\\u0684';\n\t  t['\\uFB73'] = '\\u0684';\n\t  t['\\uFB74'] = '\\u0684';\n\t  t['\\uFB75'] = '\\u0684';\n\t  t['\\uFB76'] = '\\u0683';\n\t  t['\\uFB77'] = '\\u0683';\n\t  t['\\uFB78'] = '\\u0683';\n\t  t['\\uFB79'] = '\\u0683';\n\t  t['\\uFB7A'] = '\\u0686';\n\t  t['\\uFB7B'] = '\\u0686';\n\t  t['\\uFB7C'] = '\\u0686';\n\t  t['\\uFB7D'] = '\\u0686';\n\t  t['\\uFB7E'] = '\\u0687';\n\t  t['\\uFB7F'] = '\\u0687';\n\t  t['\\uFB80'] = '\\u0687';\n\t  t['\\uFB81'] = '\\u0687';\n\t  t['\\uFB82'] = '\\u068D';\n\t  t['\\uFB83'] = '\\u068D';\n\t  t['\\uFB84'] = '\\u068C';\n\t  t['\\uFB85'] = '\\u068C';\n\t  t['\\uFB86'] = '\\u068E';\n\t  t['\\uFB87'] = '\\u068E';\n\t  t['\\uFB88'] = '\\u0688';\n\t  t['\\uFB89'] = '\\u0688';\n\t  t['\\uFB8A'] = '\\u0698';\n\t  t['\\uFB8B'] = '\\u0698';\n\t  t['\\uFB8C'] = '\\u0691';\n\t  t['\\uFB8D'] = '\\u0691';\n\t  t['\\uFB8E'] = '\\u06A9';\n\t  t['\\uFB8F'] = '\\u06A9';\n\t  t['\\uFB90'] = '\\u06A9';\n\t  t['\\uFB91'] = '\\u06A9';\n\t  t['\\uFB92'] = '\\u06AF';\n\t  t['\\uFB93'] = '\\u06AF';\n\t  t['\\uFB94'] = '\\u06AF';\n\t  t['\\uFB95'] = '\\u06AF';\n\t  t['\\uFB96'] = '\\u06B3';\n\t  t['\\uFB97'] = '\\u06B3';\n\t  t['\\uFB98'] = '\\u06B3';\n\t  t['\\uFB99'] = '\\u06B3';\n\t  t['\\uFB9A'] = '\\u06B1';\n\t  t['\\uFB9B'] = '\\u06B1';\n\t  t['\\uFB9C'] = '\\u06B1';\n\t  t['\\uFB9D'] = '\\u06B1';\n\t  t['\\uFB9E'] = '\\u06BA';\n\t  t['\\uFB9F'] = '\\u06BA';\n\t  t['\\uFBA0'] = '\\u06BB';\n\t  t['\\uFBA1'] = '\\u06BB';\n\t  t['\\uFBA2'] = '\\u06BB';\n\t  t['\\uFBA3'] = '\\u06BB';\n\t  t['\\uFBA4'] = '\\u06C0';\n\t  t['\\uFBA5'] = '\\u06C0';\n\t  t['\\uFBA6'] = '\\u06C1';\n\t  t['\\uFBA7'] = '\\u06C1';\n\t  t['\\uFBA8'] = '\\u06C1';\n\t  t['\\uFBA9'] = '\\u06C1';\n\t  t['\\uFBAA'] = '\\u06BE';\n\t  t['\\uFBAB'] = '\\u06BE';\n\t  t['\\uFBAC'] = '\\u06BE';\n\t  t['\\uFBAD'] = '\\u06BE';\n\t  t['\\uFBAE'] = '\\u06D2';\n\t  t['\\uFBAF'] = '\\u06D2';\n\t  t['\\uFBB0'] = '\\u06D3';\n\t  t['\\uFBB1'] = '\\u06D3';\n\t  t['\\uFBD3'] = '\\u06AD';\n\t  t['\\uFBD4'] = '\\u06AD';\n\t  t['\\uFBD5'] = '\\u06AD';\n\t  t['\\uFBD6'] = '\\u06AD';\n\t  t['\\uFBD7'] = '\\u06C7';\n\t  t['\\uFBD8'] = '\\u06C7';\n\t  t['\\uFBD9'] = '\\u06C6';\n\t  t['\\uFBDA'] = '\\u06C6';\n\t  t['\\uFBDB'] = '\\u06C8';\n\t  t['\\uFBDC'] = '\\u06C8';\n\t  t['\\uFBDD'] = '\\u0677';\n\t  t['\\uFBDE'] = '\\u06CB';\n\t  t['\\uFBDF'] = '\\u06CB';\n\t  t['\\uFBE0'] = '\\u06C5';\n\t  t['\\uFBE1'] = '\\u06C5';\n\t  t['\\uFBE2'] = '\\u06C9';\n\t  t['\\uFBE3'] = '\\u06C9';\n\t  t['\\uFBE4'] = '\\u06D0';\n\t  t['\\uFBE5'] = '\\u06D0';\n\t  t['\\uFBE6'] = '\\u06D0';\n\t  t['\\uFBE7'] = '\\u06D0';\n\t  t['\\uFBE8'] = '\\u0649';\n\t  t['\\uFBE9'] = '\\u0649';\n\t  t['\\uFBEA'] = '\\u0626\\u0627';\n\t  t['\\uFBEB'] = '\\u0626\\u0627';\n\t  t['\\uFBEC'] = '\\u0626\\u06D5';\n\t  t['\\uFBED'] = '\\u0626\\u06D5';\n\t  t['\\uFBEE'] = '\\u0626\\u0648';\n\t  t['\\uFBEF'] = '\\u0626\\u0648';\n\t  t['\\uFBF0'] = '\\u0626\\u06C7';\n\t  t['\\uFBF1'] = '\\u0626\\u06C7';\n\t  t['\\uFBF2'] = '\\u0626\\u06C6';\n\t  t['\\uFBF3'] = '\\u0626\\u06C6';\n\t  t['\\uFBF4'] = '\\u0626\\u06C8';\n\t  t['\\uFBF5'] = '\\u0626\\u06C8';\n\t  t['\\uFBF6'] = '\\u0626\\u06D0';\n\t  t['\\uFBF7'] = '\\u0626\\u06D0';\n\t  t['\\uFBF8'] = '\\u0626\\u06D0';\n\t  t['\\uFBF9'] = '\\u0626\\u0649';\n\t  t['\\uFBFA'] = '\\u0626\\u0649';\n\t  t['\\uFBFB'] = '\\u0626\\u0649';\n\t  t['\\uFBFC'] = '\\u06CC';\n\t  t['\\uFBFD'] = '\\u06CC';\n\t  t['\\uFBFE'] = '\\u06CC';\n\t  t['\\uFBFF'] = '\\u06CC';\n\t  t['\\uFC00'] = '\\u0626\\u062C';\n\t  t['\\uFC01'] = '\\u0626\\u062D';\n\t  t['\\uFC02'] = '\\u0626\\u0645';\n\t  t['\\uFC03'] = '\\u0626\\u0649';\n\t  t['\\uFC04'] = '\\u0626\\u064A';\n\t  t['\\uFC05'] = '\\u0628\\u062C';\n\t  t['\\uFC06'] = '\\u0628\\u062D';\n\t  t['\\uFC07'] = '\\u0628\\u062E';\n\t  t['\\uFC08'] = '\\u0628\\u0645';\n\t  t['\\uFC09'] = '\\u0628\\u0649';\n\t  t['\\uFC0A'] = '\\u0628\\u064A';\n\t  t['\\uFC0B'] = '\\u062A\\u062C';\n\t  t['\\uFC0C'] = '\\u062A\\u062D';\n\t  t['\\uFC0D'] = '\\u062A\\u062E';\n\t  t['\\uFC0E'] = '\\u062A\\u0645';\n\t  t['\\uFC0F'] = '\\u062A\\u0649';\n\t  t['\\uFC10'] = '\\u062A\\u064A';\n\t  t['\\uFC11'] = '\\u062B\\u062C';\n\t  t['\\uFC12'] = '\\u062B\\u0645';\n\t  t['\\uFC13'] = '\\u062B\\u0649';\n\t  t['\\uFC14'] = '\\u062B\\u064A';\n\t  t['\\uFC15'] = '\\u062C\\u062D';\n\t  t['\\uFC16'] = '\\u062C\\u0645';\n\t  t['\\uFC17'] = '\\u062D\\u062C';\n\t  t['\\uFC18'] = '\\u062D\\u0645';\n\t  t['\\uFC19'] = '\\u062E\\u062C';\n\t  t['\\uFC1A'] = '\\u062E\\u062D';\n\t  t['\\uFC1B'] = '\\u062E\\u0645';\n\t  t['\\uFC1C'] = '\\u0633\\u062C';\n\t  t['\\uFC1D'] = '\\u0633\\u062D';\n\t  t['\\uFC1E'] = '\\u0633\\u062E';\n\t  t['\\uFC1F'] = '\\u0633\\u0645';\n\t  t['\\uFC20'] = '\\u0635\\u062D';\n\t  t['\\uFC21'] = '\\u0635\\u0645';\n\t  t['\\uFC22'] = '\\u0636\\u062C';\n\t  t['\\uFC23'] = '\\u0636\\u062D';\n\t  t['\\uFC24'] = '\\u0636\\u062E';\n\t  t['\\uFC25'] = '\\u0636\\u0645';\n\t  t['\\uFC26'] = '\\u0637\\u062D';\n\t  t['\\uFC27'] = '\\u0637\\u0645';\n\t  t['\\uFC28'] = '\\u0638\\u0645';\n\t  t['\\uFC29'] = '\\u0639\\u062C';\n\t  t['\\uFC2A'] = '\\u0639\\u0645';\n\t  t['\\uFC2B'] = '\\u063A\\u062C';\n\t  t['\\uFC2C'] = '\\u063A\\u0645';\n\t  t['\\uFC2D'] = '\\u0641\\u062C';\n\t  t['\\uFC2E'] = '\\u0641\\u062D';\n\t  t['\\uFC2F'] = '\\u0641\\u062E';\n\t  t['\\uFC30'] = '\\u0641\\u0645';\n\t  t['\\uFC31'] = '\\u0641\\u0649';\n\t  t['\\uFC32'] = '\\u0641\\u064A';\n\t  t['\\uFC33'] = '\\u0642\\u062D';\n\t  t['\\uFC34'] = '\\u0642\\u0645';\n\t  t['\\uFC35'] = '\\u0642\\u0649';\n\t  t['\\uFC36'] = '\\u0642\\u064A';\n\t  t['\\uFC37'] = '\\u0643\\u0627';\n\t  t['\\uFC38'] = '\\u0643\\u062C';\n\t  t['\\uFC39'] = '\\u0643\\u062D';\n\t  t['\\uFC3A'] = '\\u0643\\u062E';\n\t  t['\\uFC3B'] = '\\u0643\\u0644';\n\t  t['\\uFC3C'] = '\\u0643\\u0645';\n\t  t['\\uFC3D'] = '\\u0643\\u0649';\n\t  t['\\uFC3E'] = '\\u0643\\u064A';\n\t  t['\\uFC3F'] = '\\u0644\\u062C';\n\t  t['\\uFC40'] = '\\u0644\\u062D';\n\t  t['\\uFC41'] = '\\u0644\\u062E';\n\t  t['\\uFC42'] = '\\u0644\\u0645';\n\t  t['\\uFC43'] = '\\u0644\\u0649';\n\t  t['\\uFC44'] = '\\u0644\\u064A';\n\t  t['\\uFC45'] = '\\u0645\\u062C';\n\t  t['\\uFC46'] = '\\u0645\\u062D';\n\t  t['\\uFC47'] = '\\u0645\\u062E';\n\t  t['\\uFC48'] = '\\u0645\\u0645';\n\t  t['\\uFC49'] = '\\u0645\\u0649';\n\t  t['\\uFC4A'] = '\\u0645\\u064A';\n\t  t['\\uFC4B'] = '\\u0646\\u062C';\n\t  t['\\uFC4C'] = '\\u0646\\u062D';\n\t  t['\\uFC4D'] = '\\u0646\\u062E';\n\t  t['\\uFC4E'] = '\\u0646\\u0645';\n\t  t['\\uFC4F'] = '\\u0646\\u0649';\n\t  t['\\uFC50'] = '\\u0646\\u064A';\n\t  t['\\uFC51'] = '\\u0647\\u062C';\n\t  t['\\uFC52'] = '\\u0647\\u0645';\n\t  t['\\uFC53'] = '\\u0647\\u0649';\n\t  t['\\uFC54'] = '\\u0647\\u064A';\n\t  t['\\uFC55'] = '\\u064A\\u062C';\n\t  t['\\uFC56'] = '\\u064A\\u062D';\n\t  t['\\uFC57'] = '\\u064A\\u062E';\n\t  t['\\uFC58'] = '\\u064A\\u0645';\n\t  t['\\uFC59'] = '\\u064A\\u0649';\n\t  t['\\uFC5A'] = '\\u064A\\u064A';\n\t  t['\\uFC5B'] = '\\u0630\\u0670';\n\t  t['\\uFC5C'] = '\\u0631\\u0670';\n\t  t['\\uFC5D'] = '\\u0649\\u0670';\n\t  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n\t  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n\t  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n\t  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n\t  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n\t  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n\t  t['\\uFC64'] = '\\u0626\\u0631';\n\t  t['\\uFC65'] = '\\u0626\\u0632';\n\t  t['\\uFC66'] = '\\u0626\\u0645';\n\t  t['\\uFC67'] = '\\u0626\\u0646';\n\t  t['\\uFC68'] = '\\u0626\\u0649';\n\t  t['\\uFC69'] = '\\u0626\\u064A';\n\t  t['\\uFC6A'] = '\\u0628\\u0631';\n\t  t['\\uFC6B'] = '\\u0628\\u0632';\n\t  t['\\uFC6C'] = '\\u0628\\u0645';\n\t  t['\\uFC6D'] = '\\u0628\\u0646';\n\t  t['\\uFC6E'] = '\\u0628\\u0649';\n\t  t['\\uFC6F'] = '\\u0628\\u064A';\n\t  t['\\uFC70'] = '\\u062A\\u0631';\n\t  t['\\uFC71'] = '\\u062A\\u0632';\n\t  t['\\uFC72'] = '\\u062A\\u0645';\n\t  t['\\uFC73'] = '\\u062A\\u0646';\n\t  t['\\uFC74'] = '\\u062A\\u0649';\n\t  t['\\uFC75'] = '\\u062A\\u064A';\n\t  t['\\uFC76'] = '\\u062B\\u0631';\n\t  t['\\uFC77'] = '\\u062B\\u0632';\n\t  t['\\uFC78'] = '\\u062B\\u0645';\n\t  t['\\uFC79'] = '\\u062B\\u0646';\n\t  t['\\uFC7A'] = '\\u062B\\u0649';\n\t  t['\\uFC7B'] = '\\u062B\\u064A';\n\t  t['\\uFC7C'] = '\\u0641\\u0649';\n\t  t['\\uFC7D'] = '\\u0641\\u064A';\n\t  t['\\uFC7E'] = '\\u0642\\u0649';\n\t  t['\\uFC7F'] = '\\u0642\\u064A';\n\t  t['\\uFC80'] = '\\u0643\\u0627';\n\t  t['\\uFC81'] = '\\u0643\\u0644';\n\t  t['\\uFC82'] = '\\u0643\\u0645';\n\t  t['\\uFC83'] = '\\u0643\\u0649';\n\t  t['\\uFC84'] = '\\u0643\\u064A';\n\t  t['\\uFC85'] = '\\u0644\\u0645';\n\t  t['\\uFC86'] = '\\u0644\\u0649';\n\t  t['\\uFC87'] = '\\u0644\\u064A';\n\t  t['\\uFC88'] = '\\u0645\\u0627';\n\t  t['\\uFC89'] = '\\u0645\\u0645';\n\t  t['\\uFC8A'] = '\\u0646\\u0631';\n\t  t['\\uFC8B'] = '\\u0646\\u0632';\n\t  t['\\uFC8C'] = '\\u0646\\u0645';\n\t  t['\\uFC8D'] = '\\u0646\\u0646';\n\t  t['\\uFC8E'] = '\\u0646\\u0649';\n\t  t['\\uFC8F'] = '\\u0646\\u064A';\n\t  t['\\uFC90'] = '\\u0649\\u0670';\n\t  t['\\uFC91'] = '\\u064A\\u0631';\n\t  t['\\uFC92'] = '\\u064A\\u0632';\n\t  t['\\uFC93'] = '\\u064A\\u0645';\n\t  t['\\uFC94'] = '\\u064A\\u0646';\n\t  t['\\uFC95'] = '\\u064A\\u0649';\n\t  t['\\uFC96'] = '\\u064A\\u064A';\n\t  t['\\uFC97'] = '\\u0626\\u062C';\n\t  t['\\uFC98'] = '\\u0626\\u062D';\n\t  t['\\uFC99'] = '\\u0626\\u062E';\n\t  t['\\uFC9A'] = '\\u0626\\u0645';\n\t  t['\\uFC9B'] = '\\u0626\\u0647';\n\t  t['\\uFC9C'] = '\\u0628\\u062C';\n\t  t['\\uFC9D'] = '\\u0628\\u062D';\n\t  t['\\uFC9E'] = '\\u0628\\u062E';\n\t  t['\\uFC9F'] = '\\u0628\\u0645';\n\t  t['\\uFCA0'] = '\\u0628\\u0647';\n\t  t['\\uFCA1'] = '\\u062A\\u062C';\n\t  t['\\uFCA2'] = '\\u062A\\u062D';\n\t  t['\\uFCA3'] = '\\u062A\\u062E';\n\t  t['\\uFCA4'] = '\\u062A\\u0645';\n\t  t['\\uFCA5'] = '\\u062A\\u0647';\n\t  t['\\uFCA6'] = '\\u062B\\u0645';\n\t  t['\\uFCA7'] = '\\u062C\\u062D';\n\t  t['\\uFCA8'] = '\\u062C\\u0645';\n\t  t['\\uFCA9'] = '\\u062D\\u062C';\n\t  t['\\uFCAA'] = '\\u062D\\u0645';\n\t  t['\\uFCAB'] = '\\u062E\\u062C';\n\t  t['\\uFCAC'] = '\\u062E\\u0645';\n\t  t['\\uFCAD'] = '\\u0633\\u062C';\n\t  t['\\uFCAE'] = '\\u0633\\u062D';\n\t  t['\\uFCAF'] = '\\u0633\\u062E';\n\t  t['\\uFCB0'] = '\\u0633\\u0645';\n\t  t['\\uFCB1'] = '\\u0635\\u062D';\n\t  t['\\uFCB2'] = '\\u0635\\u062E';\n\t  t['\\uFCB3'] = '\\u0635\\u0645';\n\t  t['\\uFCB4'] = '\\u0636\\u062C';\n\t  t['\\uFCB5'] = '\\u0636\\u062D';\n\t  t['\\uFCB6'] = '\\u0636\\u062E';\n\t  t['\\uFCB7'] = '\\u0636\\u0645';\n\t  t['\\uFCB8'] = '\\u0637\\u062D';\n\t  t['\\uFCB9'] = '\\u0638\\u0645';\n\t  t['\\uFCBA'] = '\\u0639\\u062C';\n\t  t['\\uFCBB'] = '\\u0639\\u0645';\n\t  t['\\uFCBC'] = '\\u063A\\u062C';\n\t  t['\\uFCBD'] = '\\u063A\\u0645';\n\t  t['\\uFCBE'] = '\\u0641\\u062C';\n\t  t['\\uFCBF'] = '\\u0641\\u062D';\n\t  t['\\uFCC0'] = '\\u0641\\u062E';\n\t  t['\\uFCC1'] = '\\u0641\\u0645';\n\t  t['\\uFCC2'] = '\\u0642\\u062D';\n\t  t['\\uFCC3'] = '\\u0642\\u0645';\n\t  t['\\uFCC4'] = '\\u0643\\u062C';\n\t  t['\\uFCC5'] = '\\u0643\\u062D';\n\t  t['\\uFCC6'] = '\\u0643\\u062E';\n\t  t['\\uFCC7'] = '\\u0643\\u0644';\n\t  t['\\uFCC8'] = '\\u0643\\u0645';\n\t  t['\\uFCC9'] = '\\u0644\\u062C';\n\t  t['\\uFCCA'] = '\\u0644\\u062D';\n\t  t['\\uFCCB'] = '\\u0644\\u062E';\n\t  t['\\uFCCC'] = '\\u0644\\u0645';\n\t  t['\\uFCCD'] = '\\u0644\\u0647';\n\t  t['\\uFCCE'] = '\\u0645\\u062C';\n\t  t['\\uFCCF'] = '\\u0645\\u062D';\n\t  t['\\uFCD0'] = '\\u0645\\u062E';\n\t  t['\\uFCD1'] = '\\u0645\\u0645';\n\t  t['\\uFCD2'] = '\\u0646\\u062C';\n\t  t['\\uFCD3'] = '\\u0646\\u062D';\n\t  t['\\uFCD4'] = '\\u0646\\u062E';\n\t  t['\\uFCD5'] = '\\u0646\\u0645';\n\t  t['\\uFCD6'] = '\\u0646\\u0647';\n\t  t['\\uFCD7'] = '\\u0647\\u062C';\n\t  t['\\uFCD8'] = '\\u0647\\u0645';\n\t  t['\\uFCD9'] = '\\u0647\\u0670';\n\t  t['\\uFCDA'] = '\\u064A\\u062C';\n\t  t['\\uFCDB'] = '\\u064A\\u062D';\n\t  t['\\uFCDC'] = '\\u064A\\u062E';\n\t  t['\\uFCDD'] = '\\u064A\\u0645';\n\t  t['\\uFCDE'] = '\\u064A\\u0647';\n\t  t['\\uFCDF'] = '\\u0626\\u0645';\n\t  t['\\uFCE0'] = '\\u0626\\u0647';\n\t  t['\\uFCE1'] = '\\u0628\\u0645';\n\t  t['\\uFCE2'] = '\\u0628\\u0647';\n\t  t['\\uFCE3'] = '\\u062A\\u0645';\n\t  t['\\uFCE4'] = '\\u062A\\u0647';\n\t  t['\\uFCE5'] = '\\u062B\\u0645';\n\t  t['\\uFCE6'] = '\\u062B\\u0647';\n\t  t['\\uFCE7'] = '\\u0633\\u0645';\n\t  t['\\uFCE8'] = '\\u0633\\u0647';\n\t  t['\\uFCE9'] = '\\u0634\\u0645';\n\t  t['\\uFCEA'] = '\\u0634\\u0647';\n\t  t['\\uFCEB'] = '\\u0643\\u0644';\n\t  t['\\uFCEC'] = '\\u0643\\u0645';\n\t  t['\\uFCED'] = '\\u0644\\u0645';\n\t  t['\\uFCEE'] = '\\u0646\\u0645';\n\t  t['\\uFCEF'] = '\\u0646\\u0647';\n\t  t['\\uFCF0'] = '\\u064A\\u0645';\n\t  t['\\uFCF1'] = '\\u064A\\u0647';\n\t  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n\t  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n\t  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n\t  t['\\uFCF5'] = '\\u0637\\u0649';\n\t  t['\\uFCF6'] = '\\u0637\\u064A';\n\t  t['\\uFCF7'] = '\\u0639\\u0649';\n\t  t['\\uFCF8'] = '\\u0639\\u064A';\n\t  t['\\uFCF9'] = '\\u063A\\u0649';\n\t  t['\\uFCFA'] = '\\u063A\\u064A';\n\t  t['\\uFCFB'] = '\\u0633\\u0649';\n\t  t['\\uFCFC'] = '\\u0633\\u064A';\n\t  t['\\uFCFD'] = '\\u0634\\u0649';\n\t  t['\\uFCFE'] = '\\u0634\\u064A';\n\t  t['\\uFCFF'] = '\\u062D\\u0649';\n\t  t['\\uFD00'] = '\\u062D\\u064A';\n\t  t['\\uFD01'] = '\\u062C\\u0649';\n\t  t['\\uFD02'] = '\\u062C\\u064A';\n\t  t['\\uFD03'] = '\\u062E\\u0649';\n\t  t['\\uFD04'] = '\\u062E\\u064A';\n\t  t['\\uFD05'] = '\\u0635\\u0649';\n\t  t['\\uFD06'] = '\\u0635\\u064A';\n\t  t['\\uFD07'] = '\\u0636\\u0649';\n\t  t['\\uFD08'] = '\\u0636\\u064A';\n\t  t['\\uFD09'] = '\\u0634\\u062C';\n\t  t['\\uFD0A'] = '\\u0634\\u062D';\n\t  t['\\uFD0B'] = '\\u0634\\u062E';\n\t  t['\\uFD0C'] = '\\u0634\\u0645';\n\t  t['\\uFD0D'] = '\\u0634\\u0631';\n\t  t['\\uFD0E'] = '\\u0633\\u0631';\n\t  t['\\uFD0F'] = '\\u0635\\u0631';\n\t  t['\\uFD10'] = '\\u0636\\u0631';\n\t  t['\\uFD11'] = '\\u0637\\u0649';\n\t  t['\\uFD12'] = '\\u0637\\u064A';\n\t  t['\\uFD13'] = '\\u0639\\u0649';\n\t  t['\\uFD14'] = '\\u0639\\u064A';\n\t  t['\\uFD15'] = '\\u063A\\u0649';\n\t  t['\\uFD16'] = '\\u063A\\u064A';\n\t  t['\\uFD17'] = '\\u0633\\u0649';\n\t  t['\\uFD18'] = '\\u0633\\u064A';\n\t  t['\\uFD19'] = '\\u0634\\u0649';\n\t  t['\\uFD1A'] = '\\u0634\\u064A';\n\t  t['\\uFD1B'] = '\\u062D\\u0649';\n\t  t['\\uFD1C'] = '\\u062D\\u064A';\n\t  t['\\uFD1D'] = '\\u062C\\u0649';\n\t  t['\\uFD1E'] = '\\u062C\\u064A';\n\t  t['\\uFD1F'] = '\\u062E\\u0649';\n\t  t['\\uFD20'] = '\\u062E\\u064A';\n\t  t['\\uFD21'] = '\\u0635\\u0649';\n\t  t['\\uFD22'] = '\\u0635\\u064A';\n\t  t['\\uFD23'] = '\\u0636\\u0649';\n\t  t['\\uFD24'] = '\\u0636\\u064A';\n\t  t['\\uFD25'] = '\\u0634\\u062C';\n\t  t['\\uFD26'] = '\\u0634\\u062D';\n\t  t['\\uFD27'] = '\\u0634\\u062E';\n\t  t['\\uFD28'] = '\\u0634\\u0645';\n\t  t['\\uFD29'] = '\\u0634\\u0631';\n\t  t['\\uFD2A'] = '\\u0633\\u0631';\n\t  t['\\uFD2B'] = '\\u0635\\u0631';\n\t  t['\\uFD2C'] = '\\u0636\\u0631';\n\t  t['\\uFD2D'] = '\\u0634\\u062C';\n\t  t['\\uFD2E'] = '\\u0634\\u062D';\n\t  t['\\uFD2F'] = '\\u0634\\u062E';\n\t  t['\\uFD30'] = '\\u0634\\u0645';\n\t  t['\\uFD31'] = '\\u0633\\u0647';\n\t  t['\\uFD32'] = '\\u0634\\u0647';\n\t  t['\\uFD33'] = '\\u0637\\u0645';\n\t  t['\\uFD34'] = '\\u0633\\u062C';\n\t  t['\\uFD35'] = '\\u0633\\u062D';\n\t  t['\\uFD36'] = '\\u0633\\u062E';\n\t  t['\\uFD37'] = '\\u0634\\u062C';\n\t  t['\\uFD38'] = '\\u0634\\u062D';\n\t  t['\\uFD39'] = '\\u0634\\u062E';\n\t  t['\\uFD3A'] = '\\u0637\\u0645';\n\t  t['\\uFD3B'] = '\\u0638\\u0645';\n\t  t['\\uFD3C'] = '\\u0627\\u064B';\n\t  t['\\uFD3D'] = '\\u0627\\u064B';\n\t  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n\t  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n\t  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n\t  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n\t  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n\t  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n\t  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n\t  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n\t  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n\t  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n\t  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n\t  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n\t  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n\t  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n\t  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n\t  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n\t  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n\t  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n\t  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n\t  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n\t  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n\t  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n\t  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n\t  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n\t  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n\t  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n\t  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n\t  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n\t  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n\t  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n\t  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n\t  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n\t  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n\t  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n\t  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n\t  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n\t  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n\t  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n\t  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n\t  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n\t  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n\t  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n\t  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n\t  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n\t  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n\t  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n\t  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n\t  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n\t  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n\t  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n\t  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n\t  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n\t  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n\t  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n\t  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n\t  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n\t  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n\t  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n\t  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n\t  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n\t  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n\t  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n\t  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n\t  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n\t  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n\t  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n\t  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n\t  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n\t  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n\t  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n\t  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n\t  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n\t  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n\t  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n\t  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n\t  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n\t  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n\t  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n\t  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n\t  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n\t  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n\t  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n\t  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n\t  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n\t  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n\t  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n\t  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n\t  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n\t  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n\t  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n\t  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n\t  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n\t  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n\t  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n\t  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n\t  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n\t  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n\t  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n\t  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n\t  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n\t  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n\t  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n\t  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n\t  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n\t  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n\t  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n\t  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n\t  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n\t  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n\t  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n\t  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n\t  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n\t  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n\t  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n\t  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n\t  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n\t  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n\t  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n\t  t['\\uFE49'] = '\\u203E';\n\t  t['\\uFE4A'] = '\\u203E';\n\t  t['\\uFE4B'] = '\\u203E';\n\t  t['\\uFE4C'] = '\\u203E';\n\t  t['\\uFE4D'] = '\\u005F';\n\t  t['\\uFE4E'] = '\\u005F';\n\t  t['\\uFE4F'] = '\\u005F';\n\t  t['\\uFE80'] = '\\u0621';\n\t  t['\\uFE81'] = '\\u0622';\n\t  t['\\uFE82'] = '\\u0622';\n\t  t['\\uFE83'] = '\\u0623';\n\t  t['\\uFE84'] = '\\u0623';\n\t  t['\\uFE85'] = '\\u0624';\n\t  t['\\uFE86'] = '\\u0624';\n\t  t['\\uFE87'] = '\\u0625';\n\t  t['\\uFE88'] = '\\u0625';\n\t  t['\\uFE89'] = '\\u0626';\n\t  t['\\uFE8A'] = '\\u0626';\n\t  t['\\uFE8B'] = '\\u0626';\n\t  t['\\uFE8C'] = '\\u0626';\n\t  t['\\uFE8D'] = '\\u0627';\n\t  t['\\uFE8E'] = '\\u0627';\n\t  t['\\uFE8F'] = '\\u0628';\n\t  t['\\uFE90'] = '\\u0628';\n\t  t['\\uFE91'] = '\\u0628';\n\t  t['\\uFE92'] = '\\u0628';\n\t  t['\\uFE93'] = '\\u0629';\n\t  t['\\uFE94'] = '\\u0629';\n\t  t['\\uFE95'] = '\\u062A';\n\t  t['\\uFE96'] = '\\u062A';\n\t  t['\\uFE97'] = '\\u062A';\n\t  t['\\uFE98'] = '\\u062A';\n\t  t['\\uFE99'] = '\\u062B';\n\t  t['\\uFE9A'] = '\\u062B';\n\t  t['\\uFE9B'] = '\\u062B';\n\t  t['\\uFE9C'] = '\\u062B';\n\t  t['\\uFE9D'] = '\\u062C';\n\t  t['\\uFE9E'] = '\\u062C';\n\t  t['\\uFE9F'] = '\\u062C';\n\t  t['\\uFEA0'] = '\\u062C';\n\t  t['\\uFEA1'] = '\\u062D';\n\t  t['\\uFEA2'] = '\\u062D';\n\t  t['\\uFEA3'] = '\\u062D';\n\t  t['\\uFEA4'] = '\\u062D';\n\t  t['\\uFEA5'] = '\\u062E';\n\t  t['\\uFEA6'] = '\\u062E';\n\t  t['\\uFEA7'] = '\\u062E';\n\t  t['\\uFEA8'] = '\\u062E';\n\t  t['\\uFEA9'] = '\\u062F';\n\t  t['\\uFEAA'] = '\\u062F';\n\t  t['\\uFEAB'] = '\\u0630';\n\t  t['\\uFEAC'] = '\\u0630';\n\t  t['\\uFEAD'] = '\\u0631';\n\t  t['\\uFEAE'] = '\\u0631';\n\t  t['\\uFEAF'] = '\\u0632';\n\t  t['\\uFEB0'] = '\\u0632';\n\t  t['\\uFEB1'] = '\\u0633';\n\t  t['\\uFEB2'] = '\\u0633';\n\t  t['\\uFEB3'] = '\\u0633';\n\t  t['\\uFEB4'] = '\\u0633';\n\t  t['\\uFEB5'] = '\\u0634';\n\t  t['\\uFEB6'] = '\\u0634';\n\t  t['\\uFEB7'] = '\\u0634';\n\t  t['\\uFEB8'] = '\\u0634';\n\t  t['\\uFEB9'] = '\\u0635';\n\t  t['\\uFEBA'] = '\\u0635';\n\t  t['\\uFEBB'] = '\\u0635';\n\t  t['\\uFEBC'] = '\\u0635';\n\t  t['\\uFEBD'] = '\\u0636';\n\t  t['\\uFEBE'] = '\\u0636';\n\t  t['\\uFEBF'] = '\\u0636';\n\t  t['\\uFEC0'] = '\\u0636';\n\t  t['\\uFEC1'] = '\\u0637';\n\t  t['\\uFEC2'] = '\\u0637';\n\t  t['\\uFEC3'] = '\\u0637';\n\t  t['\\uFEC4'] = '\\u0637';\n\t  t['\\uFEC5'] = '\\u0638';\n\t  t['\\uFEC6'] = '\\u0638';\n\t  t['\\uFEC7'] = '\\u0638';\n\t  t['\\uFEC8'] = '\\u0638';\n\t  t['\\uFEC9'] = '\\u0639';\n\t  t['\\uFECA'] = '\\u0639';\n\t  t['\\uFECB'] = '\\u0639';\n\t  t['\\uFECC'] = '\\u0639';\n\t  t['\\uFECD'] = '\\u063A';\n\t  t['\\uFECE'] = '\\u063A';\n\t  t['\\uFECF'] = '\\u063A';\n\t  t['\\uFED0'] = '\\u063A';\n\t  t['\\uFED1'] = '\\u0641';\n\t  t['\\uFED2'] = '\\u0641';\n\t  t['\\uFED3'] = '\\u0641';\n\t  t['\\uFED4'] = '\\u0641';\n\t  t['\\uFED5'] = '\\u0642';\n\t  t['\\uFED6'] = '\\u0642';\n\t  t['\\uFED7'] = '\\u0642';\n\t  t['\\uFED8'] = '\\u0642';\n\t  t['\\uFED9'] = '\\u0643';\n\t  t['\\uFEDA'] = '\\u0643';\n\t  t['\\uFEDB'] = '\\u0643';\n\t  t['\\uFEDC'] = '\\u0643';\n\t  t['\\uFEDD'] = '\\u0644';\n\t  t['\\uFEDE'] = '\\u0644';\n\t  t['\\uFEDF'] = '\\u0644';\n\t  t['\\uFEE0'] = '\\u0644';\n\t  t['\\uFEE1'] = '\\u0645';\n\t  t['\\uFEE2'] = '\\u0645';\n\t  t['\\uFEE3'] = '\\u0645';\n\t  t['\\uFEE4'] = '\\u0645';\n\t  t['\\uFEE5'] = '\\u0646';\n\t  t['\\uFEE6'] = '\\u0646';\n\t  t['\\uFEE7'] = '\\u0646';\n\t  t['\\uFEE8'] = '\\u0646';\n\t  t['\\uFEE9'] = '\\u0647';\n\t  t['\\uFEEA'] = '\\u0647';\n\t  t['\\uFEEB'] = '\\u0647';\n\t  t['\\uFEEC'] = '\\u0647';\n\t  t['\\uFEED'] = '\\u0648';\n\t  t['\\uFEEE'] = '\\u0648';\n\t  t['\\uFEEF'] = '\\u0649';\n\t  t['\\uFEF0'] = '\\u0649';\n\t  t['\\uFEF1'] = '\\u064A';\n\t  t['\\uFEF2'] = '\\u064A';\n\t  t['\\uFEF3'] = '\\u064A';\n\t  t['\\uFEF4'] = '\\u064A';\n\t  t['\\uFEF5'] = '\\u0644\\u0622';\n\t  t['\\uFEF6'] = '\\u0644\\u0622';\n\t  t['\\uFEF7'] = '\\u0644\\u0623';\n\t  t['\\uFEF8'] = '\\u0644\\u0623';\n\t  t['\\uFEF9'] = '\\u0644\\u0625';\n\t  t['\\uFEFA'] = '\\u0644\\u0625';\n\t  t['\\uFEFB'] = '\\u0644\\u0627';\n\t  t['\\uFEFC'] = '\\u0644\\u0627';\n\t});\n\tfunction reverseIfRtl(chars) {\n\t  var charsLength = chars.length;\n\t  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n\t    return chars;\n\t  }\n\t  var s = '';\n\t  for (var ii = charsLength - 1; ii >= 0; ii--) {\n\t    s += chars[ii];\n\t  }\n\t  return s;\n\t}\n\texports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n\texports.reverseIfRtl = reverseIfRtl;\n\texports.getUnicodeRangeFor = getUnicodeRangeFor;\n\texports.getNormalizedUnicodes = getNormalizedUnicodes;\n\texports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ },\n\n/***/ 684:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _obj = __webpack_require__(408);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _colorspace = __webpack_require__(97);\n\t\n\tvar _operator_list = __webpack_require__(181);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AnnotationFactory = function () {\n\t  function AnnotationFactory() {\n\t    _classCallCheck(this, AnnotationFactory);\n\t  }\n\t\n\t  _createClass(AnnotationFactory, null, [{\n\t    key: 'create',\n\t    value: function create(xref, ref, pdfManager, idFactory) {\n\t      var dict = xref.fetchIfRef(ref);\n\t      if (!(0, _primitives.isDict)(dict)) {\n\t        return;\n\t      }\n\t      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n\t      var subtype = dict.get('Subtype');\n\t      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n\t      var parameters = {\n\t        xref: xref,\n\t        dict: dict,\n\t        ref: (0, _primitives.isRef)(ref) ? ref : null,\n\t        subtype: subtype,\n\t        id: id,\n\t        pdfManager: pdfManager\n\t      };\n\t      switch (subtype) {\n\t        case 'Link':\n\t          return new LinkAnnotation(parameters);\n\t        case 'Text':\n\t          return new TextAnnotation(parameters);\n\t        case 'Widget':\n\t          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n\t          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\t          switch (fieldType) {\n\t            case 'Tx':\n\t              return new TextWidgetAnnotation(parameters);\n\t            case 'Btn':\n\t              return new ButtonWidgetAnnotation(parameters);\n\t            case 'Ch':\n\t              return new ChoiceWidgetAnnotation(parameters);\n\t          }\n\t          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n\t          return new WidgetAnnotation(parameters);\n\t        case 'Popup':\n\t          return new PopupAnnotation(parameters);\n\t        case 'Line':\n\t          return new LineAnnotation(parameters);\n\t        case 'Square':\n\t          return new SquareAnnotation(parameters);\n\t        case 'Circle':\n\t          return new CircleAnnotation(parameters);\n\t        case 'PolyLine':\n\t          return new PolylineAnnotation(parameters);\n\t        case 'Polygon':\n\t          return new PolygonAnnotation(parameters);\n\t        case 'Highlight':\n\t          return new HighlightAnnotation(parameters);\n\t        case 'Underline':\n\t          return new UnderlineAnnotation(parameters);\n\t        case 'Squiggly':\n\t          return new SquigglyAnnotation(parameters);\n\t        case 'StrikeOut':\n\t          return new StrikeOutAnnotation(parameters);\n\t        case 'Stamp':\n\t          return new StampAnnotation(parameters);\n\t        case 'FileAttachment':\n\t          return new FileAttachmentAnnotation(parameters);\n\t        default:\n\t          if (!subtype) {\n\t            (0, _util.warn)('Annotation is missing the required /Subtype.');\n\t          } else {\n\t            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n\t          }\n\t          return new Annotation(parameters);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AnnotationFactory;\n\t}();\n\t\n\tfunction getTransformMatrix(rect, bbox, matrix) {\n\t  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n\t  var minX = bounds[0];\n\t  var minY = bounds[1];\n\t  var maxX = bounds[2];\n\t  var maxY = bounds[3];\n\t  if (minX === maxX || minY === maxY) {\n\t    return [1, 0, 0, 1, rect[0], rect[1]];\n\t  }\n\t  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n\t  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n\t  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n\t}\n\t\n\tvar Annotation = function () {\n\t  function Annotation(params) {\n\t    _classCallCheck(this, Annotation);\n\t\n\t    var dict = params.dict;\n\t    this.setFlags(dict.get('F'));\n\t    this.setRectangle(dict.getArray('Rect'));\n\t    this.setColor(dict.getArray('C'));\n\t    this.setBorderStyle(dict);\n\t    this.setAppearance(dict);\n\t    this.data = {\n\t      annotationFlags: this.flags,\n\t      borderStyle: this.borderStyle,\n\t      color: this.color,\n\t      hasAppearance: !!this.appearance,\n\t      id: params.id,\n\t      rect: this.rectangle,\n\t      subtype: params.subtype\n\t    };\n\t  }\n\t\n\t  _createClass(Annotation, [{\n\t    key: '_hasFlag',\n\t    value: function _hasFlag(flags, flag) {\n\t      return !!(flags & flag);\n\t    }\n\t  }, {\n\t    key: '_isViewable',\n\t    value: function _isViewable(flags) {\n\t      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n\t    }\n\t  }, {\n\t    key: '_isPrintable',\n\t    value: function _isPrintable(flags) {\n\t      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n\t    }\n\t  }, {\n\t    key: 'setFlags',\n\t    value: function setFlags(flags) {\n\t      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag(flag) {\n\t      return this._hasFlag(this.flags, flag);\n\t    }\n\t  }, {\n\t    key: 'setRectangle',\n\t    value: function setRectangle(rectangle) {\n\t      if (Array.isArray(rectangle) && rectangle.length === 4) {\n\t        this.rectangle = _util.Util.normalizeRect(rectangle);\n\t      } else {\n\t        this.rectangle = [0, 0, 0, 0];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setColor',\n\t    value: function setColor(color) {\n\t      var rgbColor = new Uint8Array(3);\n\t      if (!Array.isArray(color)) {\n\t        this.color = rgbColor;\n\t        return;\n\t      }\n\t      switch (color.length) {\n\t        case 0:\n\t          this.color = null;\n\t          break;\n\t        case 1:\n\t          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        case 3:\n\t          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        case 4:\n\t          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        default:\n\t          this.color = rgbColor;\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setBorderStyle',\n\t    value: function setBorderStyle(borderStyle) {\n\t      this.borderStyle = new AnnotationBorderStyle();\n\t      if (!(0, _primitives.isDict)(borderStyle)) {\n\t        return;\n\t      }\n\t      if (borderStyle.has('BS')) {\n\t        var dict = borderStyle.get('BS');\n\t        var dictType = dict.get('Type');\n\t        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n\t          this.borderStyle.setWidth(dict.get('W'));\n\t          this.borderStyle.setStyle(dict.get('S'));\n\t          this.borderStyle.setDashArray(dict.getArray('D'));\n\t        }\n\t      } else if (borderStyle.has('Border')) {\n\t        var array = borderStyle.getArray('Border');\n\t        if (Array.isArray(array) && array.length >= 3) {\n\t          this.borderStyle.setHorizontalCornerRadius(array[0]);\n\t          this.borderStyle.setVerticalCornerRadius(array[1]);\n\t          this.borderStyle.setWidth(array[2]);\n\t          if (array.length === 4) {\n\t            this.borderStyle.setDashArray(array[3]);\n\t          }\n\t        }\n\t      } else {\n\t        this.borderStyle.setWidth(0);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setAppearance',\n\t    value: function setAppearance(dict) {\n\t      this.appearance = null;\n\t      var appearanceStates = dict.get('AP');\n\t      if (!(0, _primitives.isDict)(appearanceStates)) {\n\t        return;\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if ((0, _primitives.isStream)(normalAppearanceState)) {\n\t        this.appearance = normalAppearanceState;\n\t        return;\n\t      }\n\t      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n\t        return;\n\t      }\n\t      var as = dict.get('AS');\n\t      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n\t        return;\n\t      }\n\t      this.appearance = normalAppearanceState.get(as.name);\n\t    }\n\t  }, {\n\t    key: '_preparePopup',\n\t    value: function _preparePopup(dict) {\n\t      if (!dict.has('C')) {\n\t        this.data.color = null;\n\t      }\n\t      this.data.hasPopup = dict.has('Popup');\n\t      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n\t      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n\t    }\n\t  }, {\n\t    key: 'loadResources',\n\t    value: function loadResources(keys) {\n\t      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n\t        if (!resources) {\n\t          return;\n\t        }\n\t        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n\t        return objectLoader.load().then(function () {\n\t          return resources;\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      var _this = this;\n\t\n\t      if (!this.appearance) {\n\t        return Promise.resolve(new _operator_list.OperatorList());\n\t      }\n\t      var data = this.data;\n\t      var appearanceDict = this.appearance.dict;\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n\t      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n\t      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n\t      var transform = getTransformMatrix(data.rect, bbox, matrix);\n\t      return resourcesPromise.then(function (resources) {\n\t        var opList = new _operator_list.OperatorList();\n\t        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n\t        return evaluator.getOperatorList({\n\t          stream: _this.appearance,\n\t          task: task,\n\t          resources: resources,\n\t          operatorList: opList\n\t        }).then(function () {\n\t          opList.addOp(_util.OPS.endAnnotation, []);\n\t          _this.appearance.reset();\n\t          return opList;\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'viewable',\n\t    get: function get() {\n\t      if (this.flags === 0) {\n\t        return true;\n\t      }\n\t      return this._isViewable(this.flags);\n\t    }\n\t  }, {\n\t    key: 'printable',\n\t    get: function get() {\n\t      if (this.flags === 0) {\n\t        return false;\n\t      }\n\t      return this._isPrintable(this.flags);\n\t    }\n\t  }]);\n\t\n\t  return Annotation;\n\t}();\n\t\n\tvar AnnotationBorderStyle = function () {\n\t  function AnnotationBorderStyle() {\n\t    _classCallCheck(this, AnnotationBorderStyle);\n\t\n\t    this.width = 1;\n\t    this.style = _util.AnnotationBorderStyleType.SOLID;\n\t    this.dashArray = [3];\n\t    this.horizontalCornerRadius = 0;\n\t    this.verticalCornerRadius = 0;\n\t  }\n\t\n\t  _createClass(AnnotationBorderStyle, [{\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      if (Number.isInteger(width)) {\n\t        this.width = width;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      if (!style) {\n\t        return;\n\t      }\n\t      switch (style.name) {\n\t        case 'S':\n\t          this.style = _util.AnnotationBorderStyleType.SOLID;\n\t          break;\n\t        case 'D':\n\t          this.style = _util.AnnotationBorderStyleType.DASHED;\n\t          break;\n\t        case 'B':\n\t          this.style = _util.AnnotationBorderStyleType.BEVELED;\n\t          break;\n\t        case 'I':\n\t          this.style = _util.AnnotationBorderStyleType.INSET;\n\t          break;\n\t        case 'U':\n\t          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setDashArray',\n\t    value: function setDashArray(dashArray) {\n\t      if (Array.isArray(dashArray) && dashArray.length > 0) {\n\t        var isValid = true;\n\t        var allZeros = true;\n\t        for (var i = 0, len = dashArray.length; i < len; i++) {\n\t          var element = dashArray[i];\n\t          var validNumber = +element >= 0;\n\t          if (!validNumber) {\n\t            isValid = false;\n\t            break;\n\t          } else if (element > 0) {\n\t            allZeros = false;\n\t          }\n\t        }\n\t        if (isValid && !allZeros) {\n\t          this.dashArray = dashArray;\n\t        } else {\n\t          this.width = 0;\n\t        }\n\t      } else if (dashArray) {\n\t        this.width = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setHorizontalCornerRadius',\n\t    value: function setHorizontalCornerRadius(radius) {\n\t      if (Number.isInteger(radius)) {\n\t        this.horizontalCornerRadius = radius;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setVerticalCornerRadius',\n\t    value: function setVerticalCornerRadius(radius) {\n\t      if (Number.isInteger(radius)) {\n\t        this.verticalCornerRadius = radius;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AnnotationBorderStyle;\n\t}();\n\t\n\tvar WidgetAnnotation = function (_Annotation) {\n\t  _inherits(WidgetAnnotation, _Annotation);\n\t\n\t  function WidgetAnnotation(params) {\n\t    _classCallCheck(this, WidgetAnnotation);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\t\n\t    var dict = params.dict;\n\t    var data = _this2.data;\n\t    data.annotationType = _util.AnnotationType.WIDGET;\n\t    data.fieldName = _this2._constructFieldName(dict);\n\t    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n\t    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n\t    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n\t    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n\t    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\t    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n\t    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n\t    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n\t      data.fieldFlags = 0;\n\t    }\n\t    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n\t    if (data.fieldType === 'Sig') {\n\t      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n\t    }\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(WidgetAnnotation, [{\n\t    key: '_constructFieldName',\n\t    value: function _constructFieldName(dict) {\n\t      if (!dict.has('T') && !dict.has('Parent')) {\n\t        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n\t        return '';\n\t      }\n\t      if (!dict.has('Parent')) {\n\t        return (0, _util.stringToPDFString)(dict.get('T'));\n\t      }\n\t      var fieldName = [];\n\t      if (dict.has('T')) {\n\t        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n\t      }\n\t      var loopDict = dict;\n\t      while (loopDict.has('Parent')) {\n\t        loopDict = loopDict.get('Parent');\n\t        if (!(0, _primitives.isDict)(loopDict)) {\n\t          break;\n\t        }\n\t        if (loopDict.has('T')) {\n\t          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n\t        }\n\t      }\n\t      return fieldName.join('.');\n\t    }\n\t  }, {\n\t    key: 'hasFieldFlag',\n\t    value: function hasFieldFlag(flag) {\n\t      return !!(this.data.fieldFlags & flag);\n\t    }\n\t  }, {\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      if (renderForms) {\n\t        return Promise.resolve(new _operator_list.OperatorList());\n\t      }\n\t      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n\t    }\n\t  }]);\n\t\n\t  return WidgetAnnotation;\n\t}(Annotation);\n\t\n\tvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n\t  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\t\n\t  function TextWidgetAnnotation(params) {\n\t    _classCallCheck(this, TextWidgetAnnotation);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\t\n\t    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n\t    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n\t    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n\t      alignment = null;\n\t    }\n\t    _this3.data.textAlignment = alignment;\n\t    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n\t    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n\t      maximumLength = null;\n\t    }\n\t    _this3.data.maxLen = maximumLength;\n\t    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n\t    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(TextWidgetAnnotation, [{\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      if (renderForms || this.appearance) {\n\t        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n\t      }\n\t      var operatorList = new _operator_list.OperatorList();\n\t      if (!this.data.defaultAppearance) {\n\t        return Promise.resolve(operatorList);\n\t      }\n\t      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n\t      return evaluator.getOperatorList({\n\t        stream: stream,\n\t        task: task,\n\t        resources: this.fieldResources,\n\t        operatorList: operatorList\n\t      }).then(function () {\n\t        return operatorList;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return TextWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n\t  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\t\n\t  function ButtonWidgetAnnotation(params) {\n\t    _classCallCheck(this, ButtonWidgetAnnotation);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\t\n\t    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    if (_this4.data.checkBox) {\n\t      _this4._processCheckBox();\n\t    } else if (_this4.data.radioButton) {\n\t      _this4._processRadioButton(params);\n\t    } else if (_this4.data.pushButton) {\n\t      _this4._processPushButton(params);\n\t    } else {\n\t      (0, _util.warn)('Invalid field flags for button widget annotation');\n\t    }\n\t    return _this4;\n\t  }\n\t\n\t  _createClass(ButtonWidgetAnnotation, [{\n\t    key: '_processCheckBox',\n\t    value: function _processCheckBox() {\n\t      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n\t        return;\n\t      }\n\t      this.data.fieldValue = this.data.fieldValue.name;\n\t    }\n\t  }, {\n\t    key: '_processRadioButton',\n\t    value: function _processRadioButton(params) {\n\t      this.data.fieldValue = this.data.buttonValue = null;\n\t      var fieldParent = params.dict.get('Parent');\n\t      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n\t        var fieldParentValue = fieldParent.get('V');\n\t        if ((0, _primitives.isName)(fieldParentValue)) {\n\t          this.data.fieldValue = fieldParentValue.name;\n\t        }\n\t      }\n\t      var appearanceStates = params.dict.get('AP');\n\t      if (!(0, _primitives.isDict)(appearanceStates)) {\n\t        return;\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n\t        return;\n\t      }\n\t      var keys = normalAppearanceState.getKeys();\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t        if (keys[i] !== 'Off') {\n\t          this.data.buttonValue = keys[i];\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: '_processPushButton',\n\t    value: function _processPushButton(params) {\n\t      if (!params.dict.has('A')) {\n\t        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n\t        return;\n\t      }\n\t      _obj.Catalog.parseDestDictionary({\n\t        destDict: params.dict,\n\t        resultObj: this.data,\n\t        docBaseUrl: params.pdfManager.docBaseUrl\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return ButtonWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n\t  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\t\n\t  function ChoiceWidgetAnnotation(params) {\n\t    _classCallCheck(this, ChoiceWidgetAnnotation);\n\t\n\t    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\t\n\t    _this5.data.options = [];\n\t    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n\t    if (Array.isArray(options)) {\n\t      var xref = params.xref;\n\t      for (var i = 0, ii = options.length; i < ii; i++) {\n\t        var option = xref.fetchIfRef(options[i]);\n\t        var isOptionArray = Array.isArray(option);\n\t        _this5.data.options[i] = {\n\t          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n\t          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n\t        };\n\t      }\n\t    }\n\t    if (!Array.isArray(_this5.data.fieldValue)) {\n\t      _this5.data.fieldValue = [_this5.data.fieldValue];\n\t    }\n\t    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n\t    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n\t    return _this5;\n\t  }\n\t\n\t  return ChoiceWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar TextAnnotation = function (_Annotation2) {\n\t  _inherits(TextAnnotation, _Annotation2);\n\t\n\t  function TextAnnotation(parameters) {\n\t    _classCallCheck(this, TextAnnotation);\n\t\n\t    var DEFAULT_ICON_SIZE = 22;\n\t\n\t    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\t\n\t    _this6.data.annotationType = _util.AnnotationType.TEXT;\n\t    if (_this6.data.hasAppearance) {\n\t      _this6.data.name = 'NoIcon';\n\t    } else {\n\t      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n\t      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n\t      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n\t    }\n\t    _this6._preparePopup(parameters.dict);\n\t    return _this6;\n\t  }\n\t\n\t  return TextAnnotation;\n\t}(Annotation);\n\t\n\tvar LinkAnnotation = function (_Annotation3) {\n\t  _inherits(LinkAnnotation, _Annotation3);\n\t\n\t  function LinkAnnotation(params) {\n\t    _classCallCheck(this, LinkAnnotation);\n\t\n\t    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\t\n\t    _this7.data.annotationType = _util.AnnotationType.LINK;\n\t    _obj.Catalog.parseDestDictionary({\n\t      destDict: params.dict,\n\t      resultObj: _this7.data,\n\t      docBaseUrl: params.pdfManager.docBaseUrl\n\t    });\n\t    return _this7;\n\t  }\n\t\n\t  return LinkAnnotation;\n\t}(Annotation);\n\t\n\tvar PopupAnnotation = function (_Annotation4) {\n\t  _inherits(PopupAnnotation, _Annotation4);\n\t\n\t  function PopupAnnotation(parameters) {\n\t    _classCallCheck(this, PopupAnnotation);\n\t\n\t    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\t\n\t    _this8.data.annotationType = _util.AnnotationType.POPUP;\n\t    var dict = parameters.dict;\n\t    var parentItem = dict.get('Parent');\n\t    if (!parentItem) {\n\t      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n\t      return _possibleConstructorReturn(_this8);\n\t    }\n\t    var parentSubtype = parentItem.get('Subtype');\n\t    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n\t    _this8.data.parentId = dict.getRaw('Parent').toString();\n\t    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n\t    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n\t    if (!parentItem.has('C')) {\n\t      _this8.data.color = null;\n\t    } else {\n\t      _this8.setColor(parentItem.getArray('C'));\n\t      _this8.data.color = _this8.color;\n\t    }\n\t    if (!_this8.viewable) {\n\t      var parentFlags = parentItem.get('F');\n\t      if (_this8._isViewable(parentFlags)) {\n\t        _this8.setFlags(parentFlags);\n\t      }\n\t    }\n\t    return _this8;\n\t  }\n\t\n\t  return PopupAnnotation;\n\t}(Annotation);\n\t\n\tvar LineAnnotation = function (_Annotation5) {\n\t  _inherits(LineAnnotation, _Annotation5);\n\t\n\t  function LineAnnotation(parameters) {\n\t    _classCallCheck(this, LineAnnotation);\n\t\n\t    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\t\n\t    _this9.data.annotationType = _util.AnnotationType.LINE;\n\t    var dict = parameters.dict;\n\t    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n\t    _this9._preparePopup(dict);\n\t    return _this9;\n\t  }\n\t\n\t  return LineAnnotation;\n\t}(Annotation);\n\t\n\tvar SquareAnnotation = function (_Annotation6) {\n\t  _inherits(SquareAnnotation, _Annotation6);\n\t\n\t  function SquareAnnotation(parameters) {\n\t    _classCallCheck(this, SquareAnnotation);\n\t\n\t    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\t\n\t    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n\t    _this10._preparePopup(parameters.dict);\n\t    return _this10;\n\t  }\n\t\n\t  return SquareAnnotation;\n\t}(Annotation);\n\t\n\tvar CircleAnnotation = function (_Annotation7) {\n\t  _inherits(CircleAnnotation, _Annotation7);\n\t\n\t  function CircleAnnotation(parameters) {\n\t    _classCallCheck(this, CircleAnnotation);\n\t\n\t    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\t\n\t    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n\t    _this11._preparePopup(parameters.dict);\n\t    return _this11;\n\t  }\n\t\n\t  return CircleAnnotation;\n\t}(Annotation);\n\t\n\tvar PolylineAnnotation = function (_Annotation8) {\n\t  _inherits(PolylineAnnotation, _Annotation8);\n\t\n\t  function PolylineAnnotation(parameters) {\n\t    _classCallCheck(this, PolylineAnnotation);\n\t\n\t    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\t\n\t    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n\t    var dict = parameters.dict;\n\t    var rawVertices = dict.getArray('Vertices');\n\t    _this12.data.vertices = [];\n\t    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n\t      _this12.data.vertices.push({\n\t        x: rawVertices[i],\n\t        y: rawVertices[i + 1]\n\t      });\n\t    }\n\t    _this12._preparePopup(dict);\n\t    return _this12;\n\t  }\n\t\n\t  return PolylineAnnotation;\n\t}(Annotation);\n\t\n\tvar PolygonAnnotation = function (_PolylineAnnotation) {\n\t  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\t\n\t  function PolygonAnnotation(parameters) {\n\t    _classCallCheck(this, PolygonAnnotation);\n\t\n\t    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\t\n\t    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n\t    return _this13;\n\t  }\n\t\n\t  return PolygonAnnotation;\n\t}(PolylineAnnotation);\n\t\n\tvar HighlightAnnotation = function (_Annotation9) {\n\t  _inherits(HighlightAnnotation, _Annotation9);\n\t\n\t  function HighlightAnnotation(parameters) {\n\t    _classCallCheck(this, HighlightAnnotation);\n\t\n\t    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\t\n\t    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n\t    _this14._preparePopup(parameters.dict);\n\t    return _this14;\n\t  }\n\t\n\t  return HighlightAnnotation;\n\t}(Annotation);\n\t\n\tvar UnderlineAnnotation = function (_Annotation10) {\n\t  _inherits(UnderlineAnnotation, _Annotation10);\n\t\n\t  function UnderlineAnnotation(parameters) {\n\t    _classCallCheck(this, UnderlineAnnotation);\n\t\n\t    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\t\n\t    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n\t    _this15._preparePopup(parameters.dict);\n\t    return _this15;\n\t  }\n\t\n\t  return UnderlineAnnotation;\n\t}(Annotation);\n\t\n\tvar SquigglyAnnotation = function (_Annotation11) {\n\t  _inherits(SquigglyAnnotation, _Annotation11);\n\t\n\t  function SquigglyAnnotation(parameters) {\n\t    _classCallCheck(this, SquigglyAnnotation);\n\t\n\t    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\t\n\t    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n\t    _this16._preparePopup(parameters.dict);\n\t    return _this16;\n\t  }\n\t\n\t  return SquigglyAnnotation;\n\t}(Annotation);\n\t\n\tvar StrikeOutAnnotation = function (_Annotation12) {\n\t  _inherits(StrikeOutAnnotation, _Annotation12);\n\t\n\t  function StrikeOutAnnotation(parameters) {\n\t    _classCallCheck(this, StrikeOutAnnotation);\n\t\n\t    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\t\n\t    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n\t    _this17._preparePopup(parameters.dict);\n\t    return _this17;\n\t  }\n\t\n\t  return StrikeOutAnnotation;\n\t}(Annotation);\n\t\n\tvar StampAnnotation = function (_Annotation13) {\n\t  _inherits(StampAnnotation, _Annotation13);\n\t\n\t  function StampAnnotation(parameters) {\n\t    _classCallCheck(this, StampAnnotation);\n\t\n\t    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\t\n\t    _this18.data.annotationType = _util.AnnotationType.STAMP;\n\t    _this18._preparePopup(parameters.dict);\n\t    return _this18;\n\t  }\n\t\n\t  return StampAnnotation;\n\t}(Annotation);\n\t\n\tvar FileAttachmentAnnotation = function (_Annotation14) {\n\t  _inherits(FileAttachmentAnnotation, _Annotation14);\n\t\n\t  function FileAttachmentAnnotation(parameters) {\n\t    _classCallCheck(this, FileAttachmentAnnotation);\n\t\n\t    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\t\n\t    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n\t    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n\t    _this19.data.file = file.serializable;\n\t    _this19._preparePopup(parameters.dict);\n\t    return _this19;\n\t  }\n\t\n\t  return FileAttachmentAnnotation;\n\t}(Annotation);\n\t\n\texports.Annotation = Annotation;\n\texports.AnnotationBorderStyle = AnnotationBorderStyle;\n\texports.AnnotationFactory = AnnotationFactory;\n\n/***/ },\n\n/***/ 685:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.bidi = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\n\tvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\n\tfunction isOdd(i) {\n\t  return (i & 1) !== 0;\n\t}\n\tfunction isEven(i) {\n\t  return (i & 1) === 0;\n\t}\n\tfunction findUnequal(arr, start, value) {\n\t  for (var j = start, jj = arr.length; j < jj; ++j) {\n\t    if (arr[j] !== value) {\n\t      return j;\n\t    }\n\t  }\n\t  return j;\n\t}\n\tfunction setValues(arr, start, end, value) {\n\t  for (var j = start; j < end; ++j) {\n\t    arr[j] = value;\n\t  }\n\t}\n\tfunction reverseValues(arr, start, end) {\n\t  for (var i = start, j = end - 1; i < j; ++i, --j) {\n\t    var temp = arr[i];\n\t    arr[i] = arr[j];\n\t    arr[j] = temp;\n\t  }\n\t}\n\tfunction createBidiText(str, isLTR, vertical) {\n\t  return {\n\t    str: str,\n\t    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n\t  };\n\t}\n\tvar chars = [];\n\tvar types = [];\n\tfunction bidi(str, startLevel, vertical) {\n\t  var isLTR = true;\n\t  var strLength = str.length;\n\t  if (strLength === 0 || vertical) {\n\t    return createBidiText(str, isLTR, vertical);\n\t  }\n\t  chars.length = strLength;\n\t  types.length = strLength;\n\t  var numBidi = 0;\n\t  var i, ii;\n\t  for (i = 0; i < strLength; ++i) {\n\t    chars[i] = str.charAt(i);\n\t    var charCode = str.charCodeAt(i);\n\t    var charType = 'L';\n\t    if (charCode <= 0x00ff) {\n\t      charType = baseTypes[charCode];\n\t    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n\t      charType = 'R';\n\t    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n\t      charType = arabicTypes[charCode & 0xff];\n\t      if (!charType) {\n\t        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n\t      }\n\t    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n\t      charType = 'AL';\n\t    }\n\t    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n\t      numBidi++;\n\t    }\n\t    types[i] = charType;\n\t  }\n\t  if (numBidi === 0) {\n\t    isLTR = true;\n\t    return createBidiText(str, isLTR);\n\t  }\n\t  if (startLevel === -1) {\n\t    if (numBidi / strLength < 0.3) {\n\t      isLTR = true;\n\t      startLevel = 0;\n\t    } else {\n\t      isLTR = false;\n\t      startLevel = 1;\n\t    }\n\t  }\n\t  var levels = [];\n\t  for (i = 0; i < strLength; ++i) {\n\t    levels[i] = startLevel;\n\t  }\n\t  var e = isOdd(startLevel) ? 'R' : 'L';\n\t  var sor = e;\n\t  var eor = sor;\n\t  var lastType = sor;\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'NSM') {\n\t      types[i] = lastType;\n\t    } else {\n\t      lastType = types[i];\n\t    }\n\t  }\n\t  lastType = sor;\n\t  var t;\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'EN') {\n\t      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n\t    } else if (t === 'R' || t === 'L' || t === 'AL') {\n\t      lastType = t;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'AL') {\n\t      types[i] = 'R';\n\t    }\n\t  }\n\t  for (i = 1; i < strLength - 1; ++i) {\n\t    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n\t      types[i] = 'EN';\n\t    }\n\t    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n\t      types[i] = types[i - 1];\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'EN') {\n\t      var j;\n\t      for (j = i - 1; j >= 0; --j) {\n\t        if (types[j] !== 'ET') {\n\t          break;\n\t        }\n\t        types[j] = 'EN';\n\t      }\n\t      for (j = i + 1; j < strLength; ++j) {\n\t        if (types[j] !== 'ET') {\n\t          break;\n\t        }\n\t        types[j] = 'EN';\n\t      }\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n\t      types[i] = 'ON';\n\t    }\n\t  }\n\t  lastType = sor;\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'EN') {\n\t      types[i] = lastType === 'L' ? 'L' : 'EN';\n\t    } else if (t === 'R' || t === 'L') {\n\t      lastType = t;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'ON') {\n\t      var end = findUnequal(types, i + 1, 'ON');\n\t      var before = sor;\n\t      if (i > 0) {\n\t        before = types[i - 1];\n\t      }\n\t      var after = eor;\n\t      if (end + 1 < strLength) {\n\t        after = types[end + 1];\n\t      }\n\t      if (before !== 'L') {\n\t        before = 'R';\n\t      }\n\t      if (after !== 'L') {\n\t        after = 'R';\n\t      }\n\t      if (before === after) {\n\t        setValues(types, i, end, before);\n\t      }\n\t      i = end - 1;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'ON') {\n\t      types[i] = e;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (isEven(levels[i])) {\n\t      if (t === 'R') {\n\t        levels[i] += 1;\n\t      } else if (t === 'AN' || t === 'EN') {\n\t        levels[i] += 2;\n\t      }\n\t    } else {\n\t      if (t === 'L' || t === 'AN' || t === 'EN') {\n\t        levels[i] += 1;\n\t      }\n\t    }\n\t  }\n\t  var highestLevel = -1;\n\t  var lowestOddLevel = 99;\n\t  var level;\n\t  for (i = 0, ii = levels.length; i < ii; ++i) {\n\t    level = levels[i];\n\t    if (highestLevel < level) {\n\t      highestLevel = level;\n\t    }\n\t    if (lowestOddLevel > level && isOdd(level)) {\n\t      lowestOddLevel = level;\n\t    }\n\t  }\n\t  for (level = highestLevel; level >= lowestOddLevel; --level) {\n\t    var start = -1;\n\t    for (i = 0, ii = levels.length; i < ii; ++i) {\n\t      if (levels[i] < level) {\n\t        if (start >= 0) {\n\t          reverseValues(chars, start, i);\n\t          start = -1;\n\t        }\n\t      } else if (start < 0) {\n\t        start = i;\n\t      }\n\t    }\n\t    if (start >= 0) {\n\t      reverseValues(chars, start, levels.length);\n\t    }\n\t  }\n\t  for (i = 0, ii = chars.length; i < ii; ++i) {\n\t    var ch = chars[i];\n\t    if (ch === '<' || ch === '>') {\n\t      chars[i] = '';\n\t    }\n\t  }\n\t  return createBidiText(chars.join(''), isLTR);\n\t}\n\texports.bidi = bidi;\n\n/***/ },\n\n/***/ 686:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CCITTFaxStream = undefined;\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _ccitt = __webpack_require__(402);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n\t  function CCITTFaxStream(str, maybeLength, params) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    if (!(0, _primitives.isDict)(params)) {\n\t      params = _primitives.Dict.empty;\n\t    }\n\t    var source = {\n\t      next: function next() {\n\t        return str.getByte();\n\t      }\n\t    };\n\t    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n\t      K: params.get('K'),\n\t      EndOfLine: params.get('EndOfLine'),\n\t      EncodedByteAlign: params.get('EncodedByteAlign'),\n\t      Columns: params.get('Columns'),\n\t      Rows: params.get('Rows'),\n\t      EndOfBlock: params.get('EndOfBlock'),\n\t      BlackIs1: params.get('BlackIs1')\n\t    });\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  CCITTFaxStream.prototype.readBlock = function () {\n\t    while (!this.eof) {\n\t      var c = this.ccittFaxDecoder.readNextChar();\n\t      if (c === -1) {\n\t        this.eof = true;\n\t        return;\n\t      }\n\t      this.ensureBuffer(this.bufferLength + 1);\n\t      this.buffer[this.bufferLength++] = c;\n\t    }\n\t  };\n\t  return CCITTFaxStream;\n\t}();\n\texports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ },\n\n/***/ 687:\n/***/ function(module, exports) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\n\tvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\tvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\texports.ISOAdobeCharset = ISOAdobeCharset;\n\texports.ExpertCharset = ExpertCharset;\n\texports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ },\n\n/***/ 688:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _parser = __webpack_require__(122);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\n\tvar CMap = function CMapClosure() {\n\t  function CMap(builtInCMap) {\n\t    this.codespaceRanges = [[], [], [], []];\n\t    this.numCodespaceRanges = 0;\n\t    this._map = [];\n\t    this.name = '';\n\t    this.vertical = false;\n\t    this.useCMap = null;\n\t    this.builtInCMap = builtInCMap;\n\t  }\n\t  CMap.prototype = {\n\t    addCodespaceRange: function addCodespaceRange(n, low, high) {\n\t      this.codespaceRanges[n - 1].push(low, high);\n\t      this.numCodespaceRanges++;\n\t    },\n\t    mapCidRange: function mapCidRange(low, high, dstLow) {\n\t      while (low <= high) {\n\t        this._map[low++] = dstLow++;\n\t      }\n\t    },\n\t    mapBfRange: function mapBfRange(low, high, dstLow) {\n\t      var lastByte = dstLow.length - 1;\n\t      while (low <= high) {\n\t        this._map[low++] = dstLow;\n\t        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n\t      }\n\t    },\n\t    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n\t      var i = 0,\n\t          ii = array.length;\n\t      while (low <= high && i < ii) {\n\t        this._map[low] = array[i++];\n\t        ++low;\n\t      }\n\t    },\n\t    mapOne: function mapOne(src, dst) {\n\t      this._map[src] = dst;\n\t    },\n\t    lookup: function lookup(code) {\n\t      return this._map[code];\n\t    },\n\t    contains: function contains(code) {\n\t      return this._map[code] !== undefined;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      var map = this._map;\n\t      var length = map.length;\n\t      if (length <= 0x10000) {\n\t        for (var i = 0; i < length; i++) {\n\t          if (map[i] !== undefined) {\n\t            callback(i, map[i]);\n\t          }\n\t        }\n\t      } else {\n\t        for (var _i in map) {\n\t          callback(_i, map[_i]);\n\t        }\n\t      }\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      var map = this._map;\n\t      if (map.length <= 0x10000) {\n\t        return map.indexOf(value);\n\t      }\n\t      for (var charCode in map) {\n\t        if (map[charCode] === value) {\n\t          return charCode | 0;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t    getMap: function getMap() {\n\t      return this._map;\n\t    },\n\t    readCharCode: function readCharCode(str, offset, out) {\n\t      var c = 0;\n\t      var codespaceRanges = this.codespaceRanges;\n\t      var codespaceRangesLen = this.codespaceRanges.length;\n\t      for (var n = 0; n < codespaceRangesLen; n++) {\n\t        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n\t        var codespaceRange = codespaceRanges[n];\n\t        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n\t          var low = codespaceRange[k++];\n\t          var high = codespaceRange[k++];\n\t          if (c >= low && c <= high) {\n\t            out.charcode = c;\n\t            out.length = n + 1;\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      out.charcode = 0;\n\t      out.length = 1;\n\t    },\n\t\n\t    get length() {\n\t      return this._map.length;\n\t    },\n\t    get isIdentityCMap() {\n\t      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n\t        return false;\n\t      }\n\t      if (this._map.length !== 0x10000) {\n\t        return false;\n\t      }\n\t      for (var i = 0; i < 0x10000; i++) {\n\t        if (this._map[i] !== i) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  };\n\t  return CMap;\n\t}();\n\tvar IdentityCMap = function IdentityCMapClosure() {\n\t  function IdentityCMap(vertical, n) {\n\t    CMap.call(this);\n\t    this.vertical = vertical;\n\t    this.addCodespaceRange(n, 0, 0xffff);\n\t  }\n\t  _util.Util.inherit(IdentityCMap, CMap, {});\n\t  IdentityCMap.prototype = {\n\t    addCodespaceRange: CMap.prototype.addCodespaceRange,\n\t    mapCidRange: function mapCidRange(low, high, dstLow) {\n\t      (0, _util.unreachable)('should not call mapCidRange');\n\t    },\n\t    mapBfRange: function mapBfRange(low, high, dstLow) {\n\t      (0, _util.unreachable)('should not call mapBfRange');\n\t    },\n\t    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n\t      (0, _util.unreachable)('should not call mapBfRangeToArray');\n\t    },\n\t    mapOne: function mapOne(src, dst) {\n\t      (0, _util.unreachable)('should not call mapCidOne');\n\t    },\n\t    lookup: function lookup(code) {\n\t      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n\t    },\n\t    contains: function contains(code) {\n\t      return Number.isInteger(code) && code <= 0xffff;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t        callback(i, i);\n\t      }\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n\t    },\n\t    getMap: function getMap() {\n\t      var map = new Array(0x10000);\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t        map[i] = i;\n\t      }\n\t      return map;\n\t    },\n\t\n\t    readCharCode: CMap.prototype.readCharCode,\n\t    get length() {\n\t      return 0x10000;\n\t    },\n\t    get isIdentityCMap() {\n\t      (0, _util.unreachable)('should not access .isIdentityCMap');\n\t    }\n\t  };\n\t  return IdentityCMap;\n\t}();\n\tvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n\t  function hexToInt(a, size) {\n\t    var n = 0;\n\t    for (var i = 0; i <= size; i++) {\n\t      n = n << 8 | a[i];\n\t    }\n\t    return n >>> 0;\n\t  }\n\t  function hexToStr(a, size) {\n\t    if (size === 1) {\n\t      return String.fromCharCode(a[0], a[1]);\n\t    }\n\t    if (size === 3) {\n\t      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n\t    }\n\t    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n\t  }\n\t  function addHex(a, b, size) {\n\t    var c = 0;\n\t    for (var i = size; i >= 0; i--) {\n\t      c += a[i] + b[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t    }\n\t  }\n\t  function incHex(a, size) {\n\t    var c = 1;\n\t    for (var i = size; i >= 0 && c > 0; i--) {\n\t      c += a[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t    }\n\t  }\n\t  var MAX_NUM_SIZE = 16;\n\t  var MAX_ENCODED_NUM_SIZE = 19;\n\t  function BinaryCMapStream(data) {\n\t    this.buffer = data;\n\t    this.pos = 0;\n\t    this.end = data.length;\n\t    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n\t  }\n\t  BinaryCMapStream.prototype = {\n\t    readByte: function readByte() {\n\t      if (this.pos >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.buffer[this.pos++];\n\t    },\n\t    readNumber: function readNumber() {\n\t      var n = 0;\n\t      var last;\n\t      do {\n\t        var b = this.readByte();\n\t        if (b < 0) {\n\t          throw new _util.FormatError('unexpected EOF in bcmap');\n\t        }\n\t        last = !(b & 0x80);\n\t        n = n << 7 | b & 0x7F;\n\t      } while (!last);\n\t      return n;\n\t    },\n\t    readSigned: function readSigned() {\n\t      var n = this.readNumber();\n\t      return n & 1 ? ~(n >>> 1) : n >>> 1;\n\t    },\n\t    readHex: function readHex(num, size) {\n\t      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n\t      this.pos += size + 1;\n\t    },\n\t    readHexNumber: function readHexNumber(num, size) {\n\t      var last;\n\t      var stack = this.tmpBuf,\n\t          sp = 0;\n\t      do {\n\t        var b = this.readByte();\n\t        if (b < 0) {\n\t          throw new _util.FormatError('unexpected EOF in bcmap');\n\t        }\n\t        last = !(b & 0x80);\n\t        stack[sp++] = b & 0x7F;\n\t      } while (!last);\n\t      var i = size,\n\t          buffer = 0,\n\t          bufferSize = 0;\n\t      while (i >= 0) {\n\t        while (bufferSize < 8 && stack.length > 0) {\n\t          buffer = stack[--sp] << bufferSize | buffer;\n\t          bufferSize += 7;\n\t        }\n\t        num[i] = buffer & 255;\n\t        i--;\n\t        buffer >>= 8;\n\t        bufferSize -= 8;\n\t      }\n\t    },\n\t    readHexSigned: function readHexSigned(num, size) {\n\t      this.readHexNumber(num, size);\n\t      var sign = num[size] & 1 ? 255 : 0;\n\t      var c = 0;\n\t      for (var i = 0; i <= size; i++) {\n\t        c = (c & 1) << 8 | num[i];\n\t        num[i] = c >> 1 ^ sign;\n\t      }\n\t    },\n\t    readString: function readString() {\n\t      var len = this.readNumber();\n\t      var s = '';\n\t      for (var i = 0; i < len; i++) {\n\t        s += String.fromCharCode(this.readNumber());\n\t      }\n\t      return s;\n\t    }\n\t  };\n\t  function processBinaryCMap(data, cMap, extend) {\n\t    return new Promise(function (resolve, reject) {\n\t      var stream = new BinaryCMapStream(data);\n\t      var header = stream.readByte();\n\t      cMap.vertical = !!(header & 1);\n\t      var useCMap = null;\n\t      var start = new Uint8Array(MAX_NUM_SIZE);\n\t      var end = new Uint8Array(MAX_NUM_SIZE);\n\t      var char = new Uint8Array(MAX_NUM_SIZE);\n\t      var charCode = new Uint8Array(MAX_NUM_SIZE);\n\t      var tmp = new Uint8Array(MAX_NUM_SIZE);\n\t      var code;\n\t      var b;\n\t      while ((b = stream.readByte()) >= 0) {\n\t        var type = b >> 5;\n\t        if (type === 7) {\n\t          switch (b & 0x1F) {\n\t            case 0:\n\t              stream.readString();\n\t              break;\n\t            case 1:\n\t              useCMap = stream.readString();\n\t              break;\n\t          }\n\t          continue;\n\t        }\n\t        var sequence = !!(b & 0x10);\n\t        var dataSize = b & 15;\n\t        if (dataSize + 1 > MAX_NUM_SIZE) {\n\t          throw new Error('processBinaryCMap: Invalid dataSize.');\n\t        }\n\t        var ucs2DataSize = 1;\n\t        var subitemsCount = stream.readNumber();\n\t        var i;\n\t        switch (type) {\n\t          case 0:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              stream.readHexNumber(start, dataSize);\n\t              addHex(start, end, dataSize);\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t            }\n\t            break;\n\t          case 1:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            stream.readNumber();\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              stream.readHexNumber(start, dataSize);\n\t              addHex(start, end, dataSize);\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              stream.readNumber();\n\t            }\n\t            break;\n\t          case 2:\n\t            stream.readHex(char, dataSize);\n\t            code = stream.readNumber();\n\t            cMap.mapOne(hexToInt(char, dataSize), code);\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(char, dataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(tmp, dataSize);\n\t                addHex(char, tmp, dataSize);\n\t              }\n\t              code = stream.readSigned() + (code + 1);\n\t              cMap.mapOne(hexToInt(char, dataSize), code);\n\t            }\n\t            break;\n\t          case 3:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            code = stream.readNumber();\n\t            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(start, dataSize);\n\t                addHex(start, end, dataSize);\n\t              } else {\n\t                start.set(end);\n\t              }\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              code = stream.readNumber();\n\t              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t            }\n\t            break;\n\t          case 4:\n\t            stream.readHex(char, ucs2DataSize);\n\t            stream.readHex(charCode, dataSize);\n\t            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(char, ucs2DataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(tmp, ucs2DataSize);\n\t                addHex(char, tmp, ucs2DataSize);\n\t              }\n\t              incHex(charCode, dataSize);\n\t              stream.readHexSigned(tmp, dataSize);\n\t              addHex(charCode, tmp, dataSize);\n\t              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            }\n\t            break;\n\t          case 5:\n\t            stream.readHex(start, ucs2DataSize);\n\t            stream.readHexNumber(end, ucs2DataSize);\n\t            addHex(end, start, ucs2DataSize);\n\t            stream.readHex(charCode, dataSize);\n\t            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, ucs2DataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(start, ucs2DataSize);\n\t                addHex(start, end, ucs2DataSize);\n\t              } else {\n\t                start.set(end);\n\t              }\n\t              stream.readHexNumber(end, ucs2DataSize);\n\t              addHex(end, start, ucs2DataSize);\n\t              stream.readHex(charCode, dataSize);\n\t              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            }\n\t            break;\n\t          default:\n\t            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n\t            return;\n\t        }\n\t      }\n\t      if (useCMap) {\n\t        resolve(extend(useCMap));\n\t        return;\n\t      }\n\t      resolve(cMap);\n\t    });\n\t  }\n\t  function BinaryCMapReader() {}\n\t  BinaryCMapReader.prototype = { process: processBinaryCMap };\n\t  return BinaryCMapReader;\n\t}();\n\tvar CMapFactory = function CMapFactoryClosure() {\n\t  function strToInt(str) {\n\t    var a = 0;\n\t    for (var i = 0; i < str.length; i++) {\n\t      a = a << 8 | str.charCodeAt(i);\n\t    }\n\t    return a >>> 0;\n\t  }\n\t  function expectString(obj) {\n\t    if (!(0, _util.isString)(obj)) {\n\t      throw new _util.FormatError('Malformed CMap: expected string.');\n\t    }\n\t  }\n\t  function expectInt(obj) {\n\t    if (!Number.isInteger(obj)) {\n\t      throw new _util.FormatError('Malformed CMap: expected int.');\n\t    }\n\t  }\n\t  function parseBfChar(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t    }\n\t  }\n\t  function parseBfRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n\t        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n\t        cMap.mapBfRange(low, high, dstLow);\n\t      } else if ((0, _primitives.isCmd)(obj, '[')) {\n\t        obj = lexer.getObj();\n\t        var array = [];\n\t        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n\t          array.push(obj);\n\t          obj = lexer.getObj();\n\t        }\n\t        cMap.mapBfRangeToArray(low, high, array);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    throw new _util.FormatError('Invalid bf range.');\n\t  }\n\t  function parseCidChar(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t    }\n\t  }\n\t  function parseCidRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dstLow = obj;\n\t      cMap.mapCidRange(low, high, dstLow);\n\t    }\n\t  }\n\t  function parseCodespaceRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n\t        return;\n\t      }\n\t      if (!(0, _util.isString)(obj)) {\n\t        break;\n\t      }\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (!(0, _util.isString)(obj)) {\n\t        break;\n\t      }\n\t      var high = strToInt(obj);\n\t      cMap.addCodespaceRange(obj.length, low, high);\n\t    }\n\t    throw new _util.FormatError('Invalid codespace range.');\n\t  }\n\t  function parseWMode(cMap, lexer) {\n\t    var obj = lexer.getObj();\n\t    if (Number.isInteger(obj)) {\n\t      cMap.vertical = !!obj;\n\t    }\n\t  }\n\t  function parseCMapName(cMap, lexer) {\n\t    var obj = lexer.getObj();\n\t    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n\t      cMap.name = obj.name;\n\t    }\n\t  }\n\t  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n\t    var previous;\n\t    var embededUseCMap;\n\t    objLoop: while (true) {\n\t      try {\n\t        var obj = lexer.getObj();\n\t        if ((0, _primitives.isEOF)(obj)) {\n\t          break;\n\t        } else if ((0, _primitives.isName)(obj)) {\n\t          if (obj.name === 'WMode') {\n\t            parseWMode(cMap, lexer);\n\t          } else if (obj.name === 'CMapName') {\n\t            parseCMapName(cMap, lexer);\n\t          }\n\t          previous = obj;\n\t        } else if ((0, _primitives.isCmd)(obj)) {\n\t          switch (obj.cmd) {\n\t            case 'endcmap':\n\t              break objLoop;\n\t            case 'usecmap':\n\t              if ((0, _primitives.isName)(previous)) {\n\t                embededUseCMap = previous.name;\n\t              }\n\t              break;\n\t            case 'begincodespacerange':\n\t              parseCodespaceRange(cMap, lexer);\n\t              break;\n\t            case 'beginbfchar':\n\t              parseBfChar(cMap, lexer);\n\t              break;\n\t            case 'begincidchar':\n\t              parseCidChar(cMap, lexer);\n\t              break;\n\t            case 'beginbfrange':\n\t              parseBfRange(cMap, lexer);\n\t              break;\n\t            case 'begincidrange':\n\t              parseCidRange(cMap, lexer);\n\t              break;\n\t          }\n\t        }\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Invalid cMap data: ' + ex);\n\t        continue;\n\t      }\n\t    }\n\t    if (!useCMap && embededUseCMap) {\n\t      useCMap = embededUseCMap;\n\t    }\n\t    if (useCMap) {\n\t      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t    }\n\t    return Promise.resolve(cMap);\n\t  }\n\t  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n\t    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n\t      cMap.useCMap = newCMap;\n\t      if (cMap.numCodespaceRanges === 0) {\n\t        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n\t        for (var i = 0; i < useCodespaceRanges.length; i++) {\n\t          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n\t        }\n\t        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n\t      }\n\t      cMap.useCMap.forEach(function (key, value) {\n\t        if (!cMap.contains(key)) {\n\t          cMap.mapOne(key, cMap.useCMap.lookup(key));\n\t        }\n\t      });\n\t      return cMap;\n\t    });\n\t  }\n\t  function createBuiltInCMap(name, fetchBuiltInCMap) {\n\t    if (name === 'Identity-H') {\n\t      return Promise.resolve(new IdentityCMap(false, 2));\n\t    } else if (name === 'Identity-V') {\n\t      return Promise.resolve(new IdentityCMap(true, 2));\n\t    }\n\t    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n\t      return Promise.reject(new Error('Unknown CMap name: ' + name));\n\t    }\n\t    if (!fetchBuiltInCMap) {\n\t      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n\t    }\n\t    return fetchBuiltInCMap(name).then(function (data) {\n\t      var cMapData = data.cMapData,\n\t          compressionType = data.compressionType;\n\t      var cMap = new CMap(true);\n\t      if (compressionType === _util.CMapCompressionType.BINARY) {\n\t        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n\t          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t        });\n\t      }\n\t      if (compressionType === _util.CMapCompressionType.NONE) {\n\t        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n\t        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n\t      }\n\t      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n\t    });\n\t  }\n\t  return {\n\t    create: function create(params) {\n\t      var encoding = params.encoding;\n\t      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n\t      var useCMap = params.useCMap;\n\t      if ((0, _primitives.isName)(encoding)) {\n\t        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n\t      } else if ((0, _primitives.isStream)(encoding)) {\n\t        var cMap = new CMap();\n\t        var lexer = new _parser.Lexer(encoding);\n\t        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n\t          if (parsedCMap.isIdentityCMap) {\n\t            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n\t          }\n\t          return parsedCMap;\n\t        });\n\t      }\n\t      return Promise.reject(new Error('Encoding required.'));\n\t    }\n\t  };\n\t}();\n\texports.CMap = CMap;\n\texports.IdentityCMap = IdentityCMap;\n\texports.CMapFactory = CMapFactory;\n\n/***/ },\n\n/***/ 689:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PDFDocument = exports.Page = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _obj = __webpack_require__(408);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _annotation = __webpack_require__(684);\n\t\n\tvar _crypto = __webpack_require__(405);\n\t\n\tvar _parser = __webpack_require__(122);\n\t\n\tvar _operator_list = __webpack_require__(181);\n\t\n\tvar _evaluator = __webpack_require__(690);\n\t\n\tvar _function = __webpack_require__(406);\n\t\n\tvar Page = function PageClosure() {\n\t  var DEFAULT_USER_UNIT = 1.0;\n\t  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n\t  function isAnnotationRenderable(annotation, intent) {\n\t    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n\t  }\n\t  function Page(_ref) {\n\t    var pdfManager = _ref.pdfManager,\n\t        xref = _ref.xref,\n\t        pageIndex = _ref.pageIndex,\n\t        pageDict = _ref.pageDict,\n\t        ref = _ref.ref,\n\t        fontCache = _ref.fontCache,\n\t        builtInCMapCache = _ref.builtInCMapCache,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.pdfManager = pdfManager;\n\t    this.pageIndex = pageIndex;\n\t    this.pageDict = pageDict;\n\t    this.xref = xref;\n\t    this.ref = ref;\n\t    this.fontCache = fontCache;\n\t    this.builtInCMapCache = builtInCMapCache;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t    this.evaluatorOptions = pdfManager.evaluatorOptions;\n\t    this.resourcesPromise = null;\n\t    var uniquePrefix = 'p' + this.pageIndex + '_';\n\t    var idCounters = { obj: 0 };\n\t    this.idFactory = {\n\t      createObjId: function createObjId() {\n\t        return uniquePrefix + ++idCounters.obj;\n\t      }\n\t    };\n\t  }\n\t  Page.prototype = {\n\t    getPageProp: function Page_getPageProp(key) {\n\t      return this.pageDict.get(key);\n\t    },\n\t    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n\t      var dict = this.pageDict,\n\t          valueArray = null,\n\t          loopCount = 0;\n\t      var MAX_LOOP_COUNT = 100;\n\t      getArray = getArray || false;\n\t      while (dict) {\n\t        var value = getArray ? dict.getArray(key) : dict.get(key);\n\t        if (value !== undefined) {\n\t          if (!valueArray) {\n\t            valueArray = [];\n\t          }\n\t          valueArray.push(value);\n\t        }\n\t        if (++loopCount > MAX_LOOP_COUNT) {\n\t          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n\t          return valueArray ? valueArray[0] : undefined;\n\t        }\n\t        dict = dict.get('Parent');\n\t      }\n\t      if (!valueArray) {\n\t        return undefined;\n\t      }\n\t      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n\t        return valueArray[0];\n\t      }\n\t      return _primitives.Dict.merge(this.xref, valueArray);\n\t    },\n\t    get content() {\n\t      return this.getPageProp('Contents');\n\t    },\n\t    get resources() {\n\t      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n\t    },\n\t    get mediaBox() {\n\t      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n\t      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n\t        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n\t      }\n\t      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n\t    },\n\t    get cropBox() {\n\t      var cropBox = this.getInheritedPageProp('CropBox', true);\n\t      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n\t        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n\t      }\n\t      return (0, _util.shadow)(this, 'cropBox', cropBox);\n\t    },\n\t    get userUnit() {\n\t      var obj = this.getPageProp('UserUnit');\n\t      if (!(0, _util.isNum)(obj) || obj <= 0) {\n\t        obj = DEFAULT_USER_UNIT;\n\t      }\n\t      return (0, _util.shadow)(this, 'userUnit', obj);\n\t    },\n\t    get view() {\n\t      var mediaBox = this.mediaBox,\n\t          cropBox = this.cropBox;\n\t      if (mediaBox === cropBox) {\n\t        return (0, _util.shadow)(this, 'view', mediaBox);\n\t      }\n\t      var intersection = _util.Util.intersect(cropBox, mediaBox);\n\t      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n\t    },\n\t    get rotate() {\n\t      var rotate = this.getInheritedPageProp('Rotate') || 0;\n\t      if (rotate % 90 !== 0) {\n\t        rotate = 0;\n\t      } else if (rotate >= 360) {\n\t        rotate = rotate % 360;\n\t      } else if (rotate < 0) {\n\t        rotate = (rotate % 360 + 360) % 360;\n\t      }\n\t      return (0, _util.shadow)(this, 'rotate', rotate);\n\t    },\n\t    getContentStream: function Page_getContentStream() {\n\t      var content = this.content;\n\t      var stream;\n\t      if (Array.isArray(content)) {\n\t        var xref = this.xref;\n\t        var i,\n\t            n = content.length;\n\t        var streams = [];\n\t        for (i = 0; i < n; ++i) {\n\t          streams.push(xref.fetchIfRef(content[i]));\n\t        }\n\t        stream = new _stream.StreamsSequenceStream(streams);\n\t      } else if ((0, _primitives.isStream)(content)) {\n\t        stream = content;\n\t      } else {\n\t        stream = new _stream.NullStream();\n\t      }\n\t      return stream;\n\t    },\n\t    loadResources: function Page_loadResources(keys) {\n\t      var _this = this;\n\t\n\t      if (!this.resourcesPromise) {\n\t        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n\t      }\n\t      return this.resourcesPromise.then(function () {\n\t        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n\t        return objectLoader.load();\n\t      });\n\t    },\n\t    getOperatorList: function getOperatorList(_ref2) {\n\t      var _this2 = this;\n\t\n\t      var handler = _ref2.handler,\n\t          task = _ref2.task,\n\t          intent = _ref2.intent,\n\t          renderInteractiveForms = _ref2.renderInteractiveForms;\n\t\n\t      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n\t      var partialEvaluator = new _evaluator.PartialEvaluator({\n\t        pdfManager: this.pdfManager,\n\t        xref: this.xref,\n\t        handler: handler,\n\t        pageIndex: this.pageIndex,\n\t        idFactory: this.idFactory,\n\t        fontCache: this.fontCache,\n\t        builtInCMapCache: this.builtInCMapCache,\n\t        options: this.evaluatorOptions,\n\t        pdfFunctionFactory: this.pdfFunctionFactory\n\t      });\n\t      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n\t      var pageListPromise = dataPromises.then(function (_ref3) {\n\t        var _ref4 = _slicedToArray(_ref3, 1),\n\t            contentStream = _ref4[0];\n\t\n\t        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n\t        handler.send('StartRenderPage', {\n\t          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n\t          pageIndex: _this2.pageIndex,\n\t          intent: intent\n\t        });\n\t        return partialEvaluator.getOperatorList({\n\t          stream: contentStream,\n\t          task: task,\n\t          resources: _this2.resources,\n\t          operatorList: opList\n\t        }).then(function () {\n\t          return opList;\n\t        });\n\t      });\n\t      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n\t      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n\t        var _ref6 = _slicedToArray(_ref5, 2),\n\t            pageOpList = _ref6[0],\n\t            annotations = _ref6[1];\n\t\n\t        if (annotations.length === 0) {\n\t          pageOpList.flush(true);\n\t          return pageOpList;\n\t        }\n\t        var i,\n\t            ii,\n\t            opListPromises = [];\n\t        for (i = 0, ii = annotations.length; i < ii; i++) {\n\t          if (isAnnotationRenderable(annotations[i], intent)) {\n\t            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n\t          }\n\t        }\n\t        return Promise.all(opListPromises).then(function (opLists) {\n\t          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n\t          for (i = 0, ii = opLists.length; i < ii; i++) {\n\t            pageOpList.addOpList(opLists[i]);\n\t          }\n\t          pageOpList.addOp(_util.OPS.endAnnotations, []);\n\t          pageOpList.flush(true);\n\t          return pageOpList;\n\t        });\n\t      });\n\t    },\n\t    extractTextContent: function extractTextContent(_ref7) {\n\t      var _this3 = this;\n\t\n\t      var handler = _ref7.handler,\n\t          task = _ref7.task,\n\t          normalizeWhitespace = _ref7.normalizeWhitespace,\n\t          sink = _ref7.sink,\n\t          combineTextItems = _ref7.combineTextItems;\n\t\n\t      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n\t      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n\t      return dataPromises.then(function (_ref8) {\n\t        var _ref9 = _slicedToArray(_ref8, 1),\n\t            contentStream = _ref9[0];\n\t\n\t        var partialEvaluator = new _evaluator.PartialEvaluator({\n\t          pdfManager: _this3.pdfManager,\n\t          xref: _this3.xref,\n\t          handler: handler,\n\t          pageIndex: _this3.pageIndex,\n\t          idFactory: _this3.idFactory,\n\t          fontCache: _this3.fontCache,\n\t          builtInCMapCache: _this3.builtInCMapCache,\n\t          options: _this3.evaluatorOptions,\n\t          pdfFunctionFactory: _this3.pdfFunctionFactory\n\t        });\n\t        return partialEvaluator.getTextContent({\n\t          stream: contentStream,\n\t          task: task,\n\t          resources: _this3.resources,\n\t          normalizeWhitespace: normalizeWhitespace,\n\t          combineTextItems: combineTextItems,\n\t          sink: sink\n\t        });\n\t      });\n\t    },\n\t\n\t    getAnnotationsData: function Page_getAnnotationsData(intent) {\n\t      var annotations = this.annotations;\n\t      var annotationsData = [];\n\t      for (var i = 0, n = annotations.length; i < n; ++i) {\n\t        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n\t          annotationsData.push(annotations[i].data);\n\t        }\n\t      }\n\t      return annotationsData;\n\t    },\n\t    get annotations() {\n\t      var annotations = [];\n\t      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n\t      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n\t        var annotationRef = annotationRefs[i];\n\t        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n\t        if (annotation) {\n\t          annotations.push(annotation);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'annotations', annotations);\n\t    }\n\t  };\n\t  return Page;\n\t}();\n\tvar PDFDocument = function PDFDocumentClosure() {\n\t  var FINGERPRINT_FIRST_BYTES = 1024;\n\t  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n\t  function PDFDocument(pdfManager, arg) {\n\t    var stream;\n\t    if ((0, _primitives.isStream)(arg)) {\n\t      stream = arg;\n\t    } else if ((0, _util.isArrayBuffer)(arg)) {\n\t      stream = new _stream.Stream(arg);\n\t    } else {\n\t      throw new Error('PDFDocument: Unknown argument type');\n\t    }\n\t    if (stream.length <= 0) {\n\t      throw new Error('PDFDocument: stream must have data');\n\t    }\n\t    this.pdfManager = pdfManager;\n\t    this.stream = stream;\n\t    this.xref = new _obj.XRef(stream, pdfManager);\n\t    var evaluatorOptions = pdfManager.evaluatorOptions;\n\t    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n\t      xref: this.xref,\n\t      isEvalSupported: evaluatorOptions.isEvalSupported\n\t    });\n\t  }\n\t  function find(stream, needle, limit, backwards) {\n\t    var pos = stream.pos;\n\t    var end = stream.end;\n\t    var strBuf = [];\n\t    if (pos + limit > end) {\n\t      limit = end - pos;\n\t    }\n\t    for (var n = 0; n < limit; ++n) {\n\t      strBuf.push(String.fromCharCode(stream.getByte()));\n\t    }\n\t    var str = strBuf.join('');\n\t    stream.pos = pos;\n\t    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n\t    if (index === -1) {\n\t      return false;\n\t    }\n\t    stream.pos += index;\n\t    return true;\n\t  }\n\t  var DocumentInfoValidators = {\n\t    get entries() {\n\t      return (0, _util.shadow)(this, 'entries', {\n\t        Title: _util.isString,\n\t        Author: _util.isString,\n\t        Subject: _util.isString,\n\t        Keywords: _util.isString,\n\t        Creator: _util.isString,\n\t        Producer: _util.isString,\n\t        CreationDate: _util.isString,\n\t        ModDate: _util.isString,\n\t        Trapped: _primitives.isName\n\t      });\n\t    }\n\t  };\n\t  PDFDocument.prototype = {\n\t    parse: function PDFDocument_parse(recoveryMode) {\n\t      this.setup(recoveryMode);\n\t      var version = this.catalog.catDict.get('Version');\n\t      if ((0, _primitives.isName)(version)) {\n\t        this.pdfFormatVersion = version.name;\n\t      }\n\t      try {\n\t        this.acroForm = this.catalog.catDict.get('AcroForm');\n\t        if (this.acroForm) {\n\t          this.xfa = this.acroForm.get('XFA');\n\t          var fields = this.acroForm.get('Fields');\n\t          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n\t            this.acroForm = null;\n\t          }\n\t        }\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.info)('Something wrong with AcroForm entry');\n\t        this.acroForm = null;\n\t      }\n\t    },\n\t    get linearization() {\n\t      var linearization = null;\n\t      if (this.stream.length) {\n\t        try {\n\t          linearization = _parser.Linearization.create(this.stream);\n\t        } catch (err) {\n\t          if (err instanceof _util.MissingDataException) {\n\t            throw err;\n\t          }\n\t          (0, _util.info)(err);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'linearization', linearization);\n\t    },\n\t    get startXRef() {\n\t      var stream = this.stream;\n\t      var startXRef = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t        stream.reset();\n\t        if (find(stream, 'endobj', 1024)) {\n\t          startXRef = stream.pos + 6;\n\t        }\n\t      } else {\n\t        var step = 1024;\n\t        var found = false,\n\t            pos = stream.end;\n\t        while (!found && pos > 0) {\n\t          pos -= step - 'startxref'.length;\n\t          if (pos < 0) {\n\t            pos = 0;\n\t          }\n\t          stream.pos = pos;\n\t          found = find(stream, 'startxref', step, true);\n\t        }\n\t        if (found) {\n\t          stream.skip(9);\n\t          var ch;\n\t          do {\n\t            ch = stream.getByte();\n\t          } while ((0, _util.isSpace)(ch));\n\t          var str = '';\n\t          while (ch >= 0x20 && ch <= 0x39) {\n\t            str += String.fromCharCode(ch);\n\t            ch = stream.getByte();\n\t          }\n\t          startXRef = parseInt(str, 10);\n\t          if (isNaN(startXRef)) {\n\t            startXRef = 0;\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'startXRef', startXRef);\n\t    },\n\t    get mainXRefEntriesOffset() {\n\t      var mainXRefEntriesOffset = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n\t      }\n\t      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n\t    },\n\t    checkHeader: function PDFDocument_checkHeader() {\n\t      var stream = this.stream;\n\t      stream.reset();\n\t      if (find(stream, '%PDF-', 1024)) {\n\t        stream.moveStart();\n\t        var MAX_VERSION_LENGTH = 12;\n\t        var version = '',\n\t            ch;\n\t        while ((ch = stream.getByte()) > 0x20) {\n\t          if (version.length >= MAX_VERSION_LENGTH) {\n\t            break;\n\t          }\n\t          version += String.fromCharCode(ch);\n\t        }\n\t        if (!this.pdfFormatVersion) {\n\t          this.pdfFormatVersion = version.substring(5);\n\t        }\n\t        return;\n\t      }\n\t    },\n\t    parseStartXRef: function PDFDocument_parseStartXRef() {\n\t      var startXRef = this.startXRef;\n\t      this.xref.setStartXRef(startXRef);\n\t    },\n\t    setup: function PDFDocument_setup(recoveryMode) {\n\t      var _this4 = this;\n\t\n\t      this.xref.parse(recoveryMode);\n\t      var pageFactory = {\n\t        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n\t          return new Page({\n\t            pdfManager: _this4.pdfManager,\n\t            xref: _this4.xref,\n\t            pageIndex: pageIndex,\n\t            pageDict: dict,\n\t            ref: ref,\n\t            fontCache: fontCache,\n\t            builtInCMapCache: builtInCMapCache,\n\t            pdfFunctionFactory: _this4.pdfFunctionFactory\n\t          });\n\t        }\n\t      };\n\t      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n\t    },\n\t    get numPages() {\n\t      var linearization = this.linearization;\n\t      var num = linearization ? linearization.numPages : this.catalog.numPages;\n\t      return (0, _util.shadow)(this, 'numPages', num);\n\t    },\n\t    get documentInfo() {\n\t      var docInfo = {\n\t        PDFFormatVersion: this.pdfFormatVersion,\n\t        IsAcroFormPresent: !!this.acroForm,\n\t        IsXFAPresent: !!this.xfa\n\t      };\n\t      var infoDict;\n\t      try {\n\t        infoDict = this.xref.trailer.get('Info');\n\t      } catch (err) {\n\t        if (err instanceof _util.MissingDataException) {\n\t          throw err;\n\t        }\n\t        (0, _util.info)('The document information dictionary is invalid.');\n\t      }\n\t      if (infoDict) {\n\t        var validEntries = DocumentInfoValidators.entries;\n\t        for (var key in validEntries) {\n\t          if (infoDict.has(key)) {\n\t            var value = infoDict.get(key);\n\t            if (validEntries[key](value)) {\n\t              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n\t            } else {\n\t              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n\t    },\n\t    get fingerprint() {\n\t      var xref = this.xref,\n\t          hash,\n\t          fileID = '';\n\t      var idArray = xref.trailer.get('ID');\n\t      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n\t        hash = (0, _util.stringToBytes)(idArray[0]);\n\t      } else {\n\t        if (this.stream.ensureRange) {\n\t          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n\t        }\n\t        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n\t      }\n\t      for (var i = 0, n = hash.length; i < n; i++) {\n\t        var hex = hash[i].toString(16);\n\t        fileID += hex.length === 1 ? '0' + hex : hex;\n\t      }\n\t      return (0, _util.shadow)(this, 'fingerprint', fileID);\n\t    },\n\t    getPage: function PDFDocument_getPage(pageIndex) {\n\t      return this.catalog.getPage(pageIndex);\n\t    },\n\t    cleanup: function PDFDocument_cleanup() {\n\t      return this.catalog.cleanup();\n\t    }\n\t  };\n\t  return PDFDocument;\n\t}();\n\texports.Page = Page;\n\texports.PDFDocument = PDFDocument;\n\n/***/ },\n\n/***/ 690:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PartialEvaluator = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _cmap = __webpack_require__(688);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _fonts = __webpack_require__(692);\n\t\n\tvar _encodings = __webpack_require__(98);\n\t\n\tvar _unicode = __webpack_require__(410);\n\t\n\tvar _standard_fonts = __webpack_require__(409);\n\t\n\tvar _pattern = __webpack_require__(700);\n\t\n\tvar _parser = __webpack_require__(122);\n\t\n\tvar _bidi = __webpack_require__(685);\n\t\n\tvar _colorspace = __webpack_require__(97);\n\t\n\tvar _glyphlist = __webpack_require__(179);\n\t\n\tvar _metrics = __webpack_require__(698);\n\t\n\tvar _function = __webpack_require__(406);\n\t\n\tvar _jpeg_stream = __webpack_require__(180);\n\t\n\tvar _murmurhash = __webpack_require__(699);\n\t\n\tvar _operator_list = __webpack_require__(181);\n\t\n\tvar _image = __webpack_require__(693);\n\t\n\tvar PartialEvaluator = function PartialEvaluatorClosure() {\n\t  var DefaultPartialEvaluatorOptions = {\n\t    forceDataSchema: false,\n\t    maxImageSize: -1,\n\t    disableFontFace: false,\n\t    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n\t    ignoreErrors: false,\n\t    isEvalSupported: true\n\t  };\n\t  function NativeImageDecoder(_ref) {\n\t    var xref = _ref.xref,\n\t        resources = _ref.resources,\n\t        handler = _ref.handler,\n\t        _ref$forceDataSchema = _ref.forceDataSchema,\n\t        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.xref = xref;\n\t    this.resources = resources;\n\t    this.handler = handler;\n\t    this.forceDataSchema = forceDataSchema;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t  }\n\t  NativeImageDecoder.prototype = {\n\t    canDecode: function canDecode(image) {\n\t      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n\t    },\n\t    decode: function decode(image) {\n\t      var dict = image.dict;\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n\t      var numComps = colorSpace.numComps;\n\t      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n\t      return decodePromise.then(function (message) {\n\t        var data = message.data;\n\t        return new _stream.Stream(data, 0, data.length, image.dict);\n\t      });\n\t    }\n\t  };\n\t  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n\t    var dict = image.dict;\n\t    if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t    }\n\t    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n\t    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t  };\n\t  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n\t    var dict = image.dict;\n\t    if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t    }\n\t    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n\t    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t  };\n\t  function PartialEvaluator(_ref2) {\n\t    var _this = this;\n\t\n\t    var pdfManager = _ref2.pdfManager,\n\t        xref = _ref2.xref,\n\t        handler = _ref2.handler,\n\t        pageIndex = _ref2.pageIndex,\n\t        idFactory = _ref2.idFactory,\n\t        fontCache = _ref2.fontCache,\n\t        builtInCMapCache = _ref2.builtInCMapCache,\n\t        _ref2$options = _ref2.options,\n\t        options = _ref2$options === undefined ? null : _ref2$options,\n\t        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\t\n\t    this.pdfManager = pdfManager;\n\t    this.xref = xref;\n\t    this.handler = handler;\n\t    this.pageIndex = pageIndex;\n\t    this.idFactory = idFactory;\n\t    this.fontCache = fontCache;\n\t    this.builtInCMapCache = builtInCMapCache;\n\t    this.options = options || DefaultPartialEvaluatorOptions;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t    this.fetchBuiltInCMap = function (name) {\n\t      var cachedCMap = _this.builtInCMapCache[name];\n\t      if (cachedCMap) {\n\t        return Promise.resolve(cachedCMap);\n\t      }\n\t      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n\t        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n\t          _this.builtInCMapCache[name] = data;\n\t        }\n\t        return data;\n\t      });\n\t    };\n\t  }\n\t  var TIME_SLOT_DURATION_MS = 20;\n\t  var CHECK_TIME_EVERY = 100;\n\t  function TimeSlotManager() {\n\t    this.reset();\n\t  }\n\t  TimeSlotManager.prototype = {\n\t    check: function TimeSlotManager_check() {\n\t      if (++this.checked < CHECK_TIME_EVERY) {\n\t        return false;\n\t      }\n\t      this.checked = 0;\n\t      return this.endTime <= Date.now();\n\t    },\n\t    reset: function TimeSlotManager_reset() {\n\t      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n\t      this.checked = 0;\n\t    }\n\t  };\n\t  function normalizeBlendMode(value) {\n\t    if (!(0, _primitives.isName)(value)) {\n\t      return 'source-over';\n\t    }\n\t    switch (value.name) {\n\t      case 'Normal':\n\t      case 'Compatible':\n\t        return 'source-over';\n\t      case 'Multiply':\n\t        return 'multiply';\n\t      case 'Screen':\n\t        return 'screen';\n\t      case 'Overlay':\n\t        return 'overlay';\n\t      case 'Darken':\n\t        return 'darken';\n\t      case 'Lighten':\n\t        return 'lighten';\n\t      case 'ColorDodge':\n\t        return 'color-dodge';\n\t      case 'ColorBurn':\n\t        return 'color-burn';\n\t      case 'HardLight':\n\t        return 'hard-light';\n\t      case 'SoftLight':\n\t        return 'soft-light';\n\t      case 'Difference':\n\t        return 'difference';\n\t      case 'Exclusion':\n\t        return 'exclusion';\n\t      case 'Hue':\n\t        return 'hue';\n\t      case 'Saturation':\n\t        return 'saturation';\n\t      case 'Color':\n\t        return 'color';\n\t      case 'Luminosity':\n\t        return 'luminosity';\n\t    }\n\t    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n\t    return 'source-over';\n\t  }\n\t  var deferred = Promise.resolve();\n\t  var TILING_PATTERN = 1,\n\t      SHADING_PATTERN = 2;\n\t  PartialEvaluator.prototype = {\n\t    clone: function clone() {\n\t      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\t\n\t      var newEvaluator = Object.create(this);\n\t      newEvaluator.options = newOptions;\n\t      return newEvaluator;\n\t    },\n\t\n\t    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n\t      if (!(0, _primitives.isDict)(resources)) {\n\t        return false;\n\t      }\n\t      var processed = Object.create(null);\n\t      if (resources.objId) {\n\t        processed[resources.objId] = true;\n\t      }\n\t      var nodes = [resources],\n\t          xref = this.xref;\n\t      while (nodes.length) {\n\t        var key, i, ii;\n\t        var node = nodes.shift();\n\t        var graphicStates = node.get('ExtGState');\n\t        if ((0, _primitives.isDict)(graphicStates)) {\n\t          var graphicStatesKeys = graphicStates.getKeys();\n\t          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n\t            key = graphicStatesKeys[i];\n\t            var graphicState = graphicStates.get(key);\n\t            var bm = graphicState.get('BM');\n\t            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        var xObjects = node.get('XObject');\n\t        if (!(0, _primitives.isDict)(xObjects)) {\n\t          continue;\n\t        }\n\t        var xObjectsKeys = xObjects.getKeys();\n\t        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n\t          key = xObjectsKeys[i];\n\t          var xObject = xObjects.getRaw(key);\n\t          if ((0, _primitives.isRef)(xObject)) {\n\t            if (processed[xObject.toString()]) {\n\t              continue;\n\t            }\n\t            xObject = xref.fetch(xObject);\n\t          }\n\t          if (!(0, _primitives.isStream)(xObject)) {\n\t            continue;\n\t          }\n\t          if (xObject.dict.objId) {\n\t            if (processed[xObject.dict.objId]) {\n\t              continue;\n\t            }\n\t            processed[xObject.dict.objId] = true;\n\t          }\n\t          var xResources = xObject.dict.get('Resources');\n\t          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n\t            nodes.push(xResources);\n\t            if (xResources.objId) {\n\t              processed[xResources.objId] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n\t      var dict = xobj.dict;\n\t      var matrix = dict.getArray('Matrix');\n\t      var bbox = dict.getArray('BBox');\n\t      var group = dict.get('Group');\n\t      if (group) {\n\t        var groupOptions = {\n\t          matrix: matrix,\n\t          bbox: bbox,\n\t          smask: smask,\n\t          isolated: false,\n\t          knockout: false\n\t        };\n\t        var groupSubtype = group.get('S');\n\t        var colorSpace = null;\n\t        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n\t          groupOptions.isolated = group.get('I') || false;\n\t          groupOptions.knockout = group.get('K') || false;\n\t          if (group.has('CS')) {\n\t            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n\t          }\n\t        }\n\t        if (smask && smask.backdrop) {\n\t          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n\t          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n\t        }\n\t        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n\t      }\n\t      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n\t      return this.getOperatorList({\n\t        stream: xobj,\n\t        task: task,\n\t        resources: dict.get('Resources') || resources,\n\t        operatorList: operatorList,\n\t        initialState: initialState\n\t      }).then(function () {\n\t        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n\t        if (group) {\n\t          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n\t        }\n\t      });\n\t    },\n\t    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n\t      var _this2 = this;\n\t\n\t      var dict = image.dict;\n\t      var w = dict.get('Width', 'W');\n\t      var h = dict.get('Height', 'H');\n\t      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n\t        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n\t        return;\n\t      }\n\t      var maxImageSize = this.options.maxImageSize;\n\t      if (maxImageSize !== -1 && w * h > maxImageSize) {\n\t        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n\t        return;\n\t      }\n\t      var imageMask = dict.get('ImageMask', 'IM') || false;\n\t      var imgData, args;\n\t      if (imageMask) {\n\t        var width = dict.get('Width', 'W');\n\t        var height = dict.get('Height', 'H');\n\t        var bitStrideLength = width + 7 >> 3;\n\t        var imgArray = image.getBytes(bitStrideLength * height);\n\t        var decode = dict.getArray('Decode', 'D');\n\t        imgData = _image.PDFImage.createMask({\n\t          imgArray: imgArray,\n\t          width: width,\n\t          height: height,\n\t          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n\t          inverseDecode: !!decode && decode[0] > 0\n\t        });\n\t        imgData.cached = true;\n\t        args = [imgData];\n\t        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n\t        if (cacheKey) {\n\t          imageCache[cacheKey] = {\n\t            fn: _util.OPS.paintImageMaskXObject,\n\t            args: args\n\t          };\n\t        }\n\t        return;\n\t      }\n\t      var softMask = dict.get('SMask', 'SM') || false;\n\t      var mask = dict.get('Mask') || false;\n\t      var SMALL_IMAGE_DIMENSIONS = 200;\n\t      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n\t        var imageObj = new _image.PDFImage({\n\t          xref: this.xref,\n\t          res: resources,\n\t          image: image,\n\t          isInline: inline,\n\t          pdfFunctionFactory: this.pdfFunctionFactory\n\t        });\n\t        imgData = imageObj.createImageData(true);\n\t        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n\t        return;\n\t      }\n\t      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n\t      var objId = 'img_' + this.idFactory.createObjId();\n\t      operatorList.addDependency(objId);\n\t      args = [objId, w, h];\n\t      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n\t        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n\t        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n\t        if (cacheKey) {\n\t          imageCache[cacheKey] = {\n\t            fn: _util.OPS.paintJpegXObject,\n\t            args: args\n\t          };\n\t        }\n\t        return;\n\t      }\n\t      var nativeImageDecoder = null;\n\t      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n\t        nativeImageDecoder = new NativeImageDecoder({\n\t          xref: this.xref,\n\t          resources: resources,\n\t          handler: this.handler,\n\t          forceDataSchema: this.options.forceDataSchema,\n\t          pdfFunctionFactory: this.pdfFunctionFactory\n\t        });\n\t      }\n\t      _image.PDFImage.buildImage({\n\t        handler: this.handler,\n\t        xref: this.xref,\n\t        res: resources,\n\t        image: image,\n\t        isInline: inline,\n\t        nativeDecoder: nativeImageDecoder,\n\t        pdfFunctionFactory: this.pdfFunctionFactory\n\t      }).then(function (imageObj) {\n\t        var imgData = imageObj.createImageData(false);\n\t        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n\t      }).catch(function (reason) {\n\t        (0, _util.warn)('Unable to decode image: ' + reason);\n\t        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n\t      });\n\t      operatorList.addOp(_util.OPS.paintImageXObject, args);\n\t      if (cacheKey) {\n\t        imageCache[cacheKey] = {\n\t          fn: _util.OPS.paintImageXObject,\n\t          args: args\n\t        };\n\t      }\n\t    },\n\t    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n\t      var smaskContent = smask.get('G');\n\t      var smaskOptions = {\n\t        subtype: smask.get('S').name,\n\t        backdrop: smask.get('BC')\n\t      };\n\t      var transferObj = smask.get('TR');\n\t      if ((0, _function.isPDFFunction)(transferObj)) {\n\t        var transferFn = this.pdfFunctionFactory.create(transferObj);\n\t        var transferMap = new Uint8Array(256);\n\t        var tmp = new Float32Array(1);\n\t        for (var i = 0; i < 256; i++) {\n\t          tmp[0] = i / 255;\n\t          transferFn(tmp, 0, tmp, 0);\n\t          transferMap[i] = tmp[0] * 255 | 0;\n\t        }\n\t        smaskOptions.transferMap = transferMap;\n\t      }\n\t      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n\t    },\n\t    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n\t      var _this3 = this;\n\t\n\t      var tilingOpList = new _operator_list.OperatorList();\n\t      var resourcesArray = [patternDict.get('Resources'), resources];\n\t      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n\t      return this.getOperatorList({\n\t        stream: pattern,\n\t        task: task,\n\t        resources: patternResources,\n\t        operatorList: tilingOpList\n\t      }).then(function () {\n\t        return (0, _pattern.getTilingPatternIR)({\n\t          fnArray: tilingOpList.fnArray,\n\t          argsArray: tilingOpList.argsArray\n\t        }, patternDict, args);\n\t      }).then(function (tilingPatternIR) {\n\t        operatorList.addDependencies(tilingOpList.dependencies);\n\t        operatorList.addOp(fn, tilingPatternIR);\n\t      }, function (reason) {\n\t        if (_this3.options.ignoreErrors) {\n\t          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t\n\t    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n\t      var _this4 = this;\n\t\n\t      var fontName;\n\t      if (fontArgs) {\n\t        fontArgs = fontArgs.slice();\n\t        fontName = fontArgs[0].name;\n\t      }\n\t      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n\t        if (!translated.font.isType3Font) {\n\t          return translated;\n\t        }\n\t        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n\t          return translated;\n\t        }).catch(function (reason) {\n\t          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n\t          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n\t        });\n\t      }).then(function (translated) {\n\t        state.font = translated.font;\n\t        translated.send(_this4.handler);\n\t        return translated.loadedName;\n\t      });\n\t    },\n\t    handleText: function PartialEvaluator_handleText(chars, state) {\n\t      var _this5 = this;\n\t\n\t      var font = state.font;\n\t      var glyphs = font.charsToGlyphs(chars);\n\t      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n\t      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n\t        var buildPath = function buildPath(fontChar) {\n\t          if (!font.renderer.hasBuiltPath(fontChar)) {\n\t            var path = font.renderer.getPathJs(fontChar);\n\t            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n\t          }\n\t        };\n\t        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n\t          var glyph = glyphs[i];\n\t          buildPath(glyph.fontChar);\n\t          var accent = glyph.accent;\n\t          if (accent && accent.fontChar) {\n\t            buildPath(accent.fontChar);\n\t          }\n\t        }\n\t      }\n\t      return glyphs;\n\t    },\n\t    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n\t      var _this6 = this;\n\t\n\t      var gStateObj = [];\n\t      var gStateKeys = gState.getKeys();\n\t      var promise = Promise.resolve();\n\t\n\t      var _loop = function _loop() {\n\t        var key = gStateKeys[i];\n\t        var value = gState.get(key);\n\t        switch (key) {\n\t          case 'Type':\n\t            break;\n\t          case 'LW':\n\t          case 'LC':\n\t          case 'LJ':\n\t          case 'ML':\n\t          case 'D':\n\t          case 'RI':\n\t          case 'FL':\n\t          case 'CA':\n\t          case 'ca':\n\t            gStateObj.push([key, value]);\n\t            break;\n\t          case 'Font':\n\t            promise = promise.then(function () {\n\t              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n\t                operatorList.addDependency(loadedName);\n\t                gStateObj.push([key, [loadedName, value[1]]]);\n\t              });\n\t            });\n\t            break;\n\t          case 'BM':\n\t            gStateObj.push([key, normalizeBlendMode(value)]);\n\t            break;\n\t          case 'SMask':\n\t            if ((0, _primitives.isName)(value, 'None')) {\n\t              gStateObj.push([key, false]);\n\t              break;\n\t            }\n\t            if ((0, _primitives.isDict)(value)) {\n\t              promise = promise.then(function () {\n\t                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n\t              });\n\t              gStateObj.push([key, true]);\n\t            } else {\n\t              (0, _util.warn)('Unsupported SMask type');\n\t            }\n\t            break;\n\t          case 'OP':\n\t          case 'op':\n\t          case 'OPM':\n\t          case 'BG':\n\t          case 'BG2':\n\t          case 'UCR':\n\t          case 'UCR2':\n\t          case 'TR':\n\t          case 'TR2':\n\t          case 'HT':\n\t          case 'SM':\n\t          case 'SA':\n\t          case 'AIS':\n\t          case 'TK':\n\t            (0, _util.info)('graphic state operator ' + key);\n\t            break;\n\t          default:\n\t            (0, _util.info)('Unknown graphic state operator ' + key);\n\t            break;\n\t        }\n\t      };\n\t\n\t      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n\t        _loop();\n\t      }\n\t      return promise.then(function () {\n\t        if (gStateObj.length > 0) {\n\t          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n\t        }\n\t      });\n\t    },\n\t    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n\t      var _this7 = this;\n\t\n\t      function errorFont() {\n\t        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n\t      }\n\t      var fontRef,\n\t          xref = this.xref;\n\t      if (font) {\n\t        if (!(0, _primitives.isRef)(font)) {\n\t          throw new Error('The \"font\" object should be a reference.');\n\t        }\n\t        fontRef = font;\n\t      } else {\n\t        var fontRes = resources.get('Font');\n\t        if (fontRes) {\n\t          fontRef = fontRes.getRaw(fontName);\n\t        } else {\n\t          (0, _util.warn)('fontRes not available');\n\t          return errorFont();\n\t        }\n\t      }\n\t      if (!fontRef) {\n\t        (0, _util.warn)('fontRef not available');\n\t        return errorFont();\n\t      }\n\t      if (this.fontCache.has(fontRef)) {\n\t        return this.fontCache.get(fontRef);\n\t      }\n\t      font = xref.fetchIfRef(fontRef);\n\t      if (!(0, _primitives.isDict)(font)) {\n\t        return errorFont();\n\t      }\n\t      if (font.translated) {\n\t        return font.translated;\n\t      }\n\t      var fontCapability = (0, _util.createPromiseCapability)();\n\t      var preEvaluatedFont = this.preEvaluateFont(font);\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n\t          fontID;\n\t      if (fontRefIsRef) {\n\t        fontID = fontRef.toString();\n\t      }\n\t      if ((0, _primitives.isDict)(descriptor)) {\n\t        if (!descriptor.fontAliases) {\n\t          descriptor.fontAliases = Object.create(null);\n\t        }\n\t        var fontAliases = descriptor.fontAliases;\n\t        var hash = preEvaluatedFont.hash;\n\t        if (fontAliases[hash]) {\n\t          var aliasFontRef = fontAliases[hash].aliasRef;\n\t          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n\t            this.fontCache.putAlias(fontRef, aliasFontRef);\n\t            return this.fontCache.get(fontRef);\n\t          }\n\t        } else {\n\t          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n\t        }\n\t        if (fontRefIsRef) {\n\t          fontAliases[hash].aliasRef = fontRef;\n\t        }\n\t        fontID = fontAliases[hash].fontID;\n\t      }\n\t      if (fontRefIsRef) {\n\t        this.fontCache.put(fontRef, fontCapability.promise);\n\t      } else {\n\t        if (!fontID) {\n\t          fontID = this.idFactory.createObjId();\n\t        }\n\t        this.fontCache.put('id_' + fontID, fontCapability.promise);\n\t      }\n\t      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n\t      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n\t      font.translated = fontCapability.promise;\n\t      var translatedPromise;\n\t      try {\n\t        translatedPromise = this.translateFont(preEvaluatedFont);\n\t      } catch (e) {\n\t        translatedPromise = Promise.reject(e);\n\t      }\n\t      translatedPromise.then(function (translatedFont) {\n\t        if (translatedFont.fontType !== undefined) {\n\t          var xrefFontStats = xref.stats.fontTypes;\n\t          xrefFontStats[translatedFont.fontType] = true;\n\t        }\n\t        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n\t      }).catch(function (reason) {\n\t        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n\t        try {\n\t          var descriptor = preEvaluatedFont.descriptor;\n\t          var fontFile3 = descriptor && descriptor.get('FontFile3');\n\t          var subtype = fontFile3 && fontFile3.get('Subtype');\n\t          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n\t          var xrefFontStats = xref.stats.fontTypes;\n\t          xrefFontStats[fontType] = true;\n\t        } catch (ex) {}\n\t        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n\t      });\n\t      return fontCapability.promise;\n\t    },\n\t    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n\t      var lastIndex = operatorList.length - 1;\n\t      if (!args) {\n\t        args = [];\n\t      }\n\t      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n\t        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n\t      } else {\n\t        var opArgs = operatorList.argsArray[lastIndex];\n\t        opArgs[0].push(fn);\n\t        Array.prototype.push.apply(opArgs[1], args);\n\t      }\n\t    },\n\t    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n\t      var patternName = args[args.length - 1];\n\t      var pattern;\n\t      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n\t        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n\t        var typeNum = dict.get('PatternType');\n\t        if (typeNum === TILING_PATTERN) {\n\t          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n\t          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n\t        } else if (typeNum === SHADING_PATTERN) {\n\t          var shading = dict.get('Shading');\n\t          var matrix = dict.getArray('Matrix');\n\t          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n\t          operatorList.addOp(fn, pattern.getIR());\n\t          return Promise.resolve();\n\t        }\n\t        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n\t      }\n\t      operatorList.addOp(fn, args);\n\t      return Promise.resolve();\n\t    },\n\t    getOperatorList: function getOperatorList(_ref3) {\n\t      var _this8 = this;\n\t\n\t      var stream = _ref3.stream,\n\t          task = _ref3.task,\n\t          resources = _ref3.resources,\n\t          operatorList = _ref3.operatorList,\n\t          _ref3$initialState = _ref3.initialState,\n\t          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\t\n\t      resources = resources || _primitives.Dict.empty;\n\t      initialState = initialState || new EvalState();\n\t      if (!operatorList) {\n\t        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n\t      }\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var imageCache = Object.create(null);\n\t      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n\t      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n\t      var stateManager = new StateManager(initialState);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var timeSlotManager = new TimeSlotManager();\n\t      function closePendingRestoreOPS(argument) {\n\t        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n\t          operatorList.addOp(_util.OPS.restore, []);\n\t        }\n\t      }\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t        var next = function next(promise) {\n\t          promise.then(function () {\n\t            try {\n\t              promiseBody(resolve, reject);\n\t            } catch (ex) {\n\t              reject(ex);\n\t            }\n\t          }, reject);\n\t        };\n\t        task.ensureNotTerminated();\n\t        timeSlotManager.reset();\n\t        var stop,\n\t            operation = {},\n\t            i,\n\t            ii,\n\t            cs;\n\t        while (!(stop = timeSlotManager.check())) {\n\t          operation.args = null;\n\t          if (!preprocessor.read(operation)) {\n\t            break;\n\t          }\n\t          var args = operation.args;\n\t          var fn = operation.fn;\n\t          switch (fn | 0) {\n\t            case _util.OPS.paintXObject:\n\t              var name = args[0].name;\n\t              if (name && imageCache[name] !== undefined) {\n\t                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n\t                args = null;\n\t                continue;\n\t              }\n\t              next(new Promise(function (resolveXObject, rejectXObject) {\n\t                if (!name) {\n\t                  throw new _util.FormatError('XObject must be referred to by name.');\n\t                }\n\t                var xobj = xobjs.get(name);\n\t                if (!xobj) {\n\t                  operatorList.addOp(fn, args);\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                if (!(0, _primitives.isStream)(xobj)) {\n\t                  throw new _util.FormatError('XObject should be a stream');\n\t                }\n\t                var type = xobj.dict.get('Subtype');\n\t                if (!(0, _primitives.isName)(type)) {\n\t                  throw new _util.FormatError('XObject should have a Name subtype');\n\t                }\n\t                if (type.name === 'Form') {\n\t                  stateManager.save();\n\t                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n\t                    stateManager.restore();\n\t                    resolveXObject();\n\t                  }, rejectXObject);\n\t                  return;\n\t                } else if (type.name === 'Image') {\n\t                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n\t                } else if (type.name === 'PS') {\n\t                  (0, _util.info)('Ignored XObject subtype PS');\n\t                } else {\n\t                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n\t                }\n\t                resolveXObject();\n\t              }).catch(function (reason) {\n\t                if (self.options.ignoreErrors) {\n\t                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n\t                  return;\n\t                }\n\t                throw reason;\n\t              }));\n\t              return;\n\t            case _util.OPS.setFont:\n\t              var fontSize = args[1];\n\t              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n\t                operatorList.addDependency(loadedName);\n\t                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n\t              }));\n\t              return;\n\t            case _util.OPS.endInlineImage:\n\t              var cacheKey = args[0].cacheKey;\n\t              if (cacheKey) {\n\t                var cacheEntry = imageCache[cacheKey];\n\t                if (cacheEntry !== undefined) {\n\t                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n\t                  args = null;\n\t                  continue;\n\t                }\n\t              }\n\t              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n\t              args = null;\n\t              continue;\n\t            case _util.OPS.showText:\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              break;\n\t            case _util.OPS.showSpacedText:\n\t              var arr = args[0];\n\t              var combinedGlyphs = [];\n\t              var arrLength = arr.length;\n\t              var state = stateManager.state;\n\t              for (i = 0; i < arrLength; ++i) {\n\t                var arrItem = arr[i];\n\t                if ((0, _util.isString)(arrItem)) {\n\t                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n\t                } else if ((0, _util.isNum)(arrItem)) {\n\t                  combinedGlyphs.push(arrItem);\n\t                }\n\t              }\n\t              args[0] = combinedGlyphs;\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.nextLineShowText:\n\t              operatorList.addOp(_util.OPS.nextLine);\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.nextLineSetSpacingShowText:\n\t              operatorList.addOp(_util.OPS.nextLine);\n\t              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n\t              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.setTextRenderingMode:\n\t              stateManager.state.textRenderingMode = args[0];\n\t              break;\n\t            case _util.OPS.setFillColorSpace:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n\t              continue;\n\t            case _util.OPS.setStrokeColorSpace:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n\t              continue;\n\t            case _util.OPS.setFillColor:\n\t              cs = stateManager.state.fillColorSpace;\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeColor:\n\t              cs = stateManager.state.strokeColorSpace;\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillGray:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeGray:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillCMYKColor:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n\t              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeCMYKColor:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n\t              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillRGBColor:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n\t              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n\t              break;\n\t            case _util.OPS.setStrokeRGBColor:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n\t              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n\t              break;\n\t            case _util.OPS.setFillColorN:\n\t              cs = stateManager.state.fillColorSpace;\n\t              if (cs.name === 'Pattern') {\n\t                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n\t                return;\n\t              }\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeColorN:\n\t              cs = stateManager.state.strokeColorSpace;\n\t              if (cs.name === 'Pattern') {\n\t                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n\t                return;\n\t              }\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.shadingFill:\n\t              var shadingRes = resources.get('Shading');\n\t              if (!shadingRes) {\n\t                throw new _util.FormatError('No shading resource found');\n\t              }\n\t              var shading = shadingRes.get(args[0].name);\n\t              if (!shading) {\n\t                throw new _util.FormatError('No shading object found');\n\t              }\n\t              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n\t              var patternIR = shadingFill.getIR();\n\t              args = [patternIR];\n\t              fn = _util.OPS.shadingFill;\n\t              break;\n\t            case _util.OPS.setGState:\n\t              var dictName = args[0];\n\t              var extGState = resources.get('ExtGState');\n\t              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n\t                break;\n\t              }\n\t              var gState = extGState.get(dictName.name);\n\t              next(self.setGState(resources, gState, operatorList, task, stateManager));\n\t              return;\n\t            case _util.OPS.moveTo:\n\t            case _util.OPS.lineTo:\n\t            case _util.OPS.curveTo:\n\t            case _util.OPS.curveTo2:\n\t            case _util.OPS.curveTo3:\n\t            case _util.OPS.closePath:\n\t              self.buildPath(operatorList, fn, args);\n\t              continue;\n\t            case _util.OPS.rectangle:\n\t              self.buildPath(operatorList, fn, args);\n\t              continue;\n\t            case _util.OPS.markPoint:\n\t            case _util.OPS.markPointProps:\n\t            case _util.OPS.beginMarkedContent:\n\t            case _util.OPS.beginMarkedContentProps:\n\t            case _util.OPS.endMarkedContent:\n\t            case _util.OPS.beginCompat:\n\t            case _util.OPS.endCompat:\n\t              continue;\n\t            default:\n\t              if (args !== null) {\n\t                for (i = 0, ii = args.length; i < ii; i++) {\n\t                  if (args[i] instanceof _primitives.Dict) {\n\t                    break;\n\t                  }\n\t                }\n\t                if (i < ii) {\n\t                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n\t                  continue;\n\t                }\n\t              }\n\t          }\n\t          operatorList.addOp(fn, args);\n\t        }\n\t        if (stop) {\n\t          next(deferred);\n\t          return;\n\t        }\n\t        closePendingRestoreOPS();\n\t        resolve();\n\t      }).catch(function (reason) {\n\t        if (_this8.options.ignoreErrors) {\n\t          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n\t          closePendingRestoreOPS();\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t    getTextContent: function getTextContent(_ref4) {\n\t      var _this9 = this;\n\t\n\t      var stream = _ref4.stream,\n\t          task = _ref4.task,\n\t          resources = _ref4.resources,\n\t          _ref4$stateManager = _ref4.stateManager,\n\t          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n\t          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n\t          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n\t          _ref4$combineTextItem = _ref4.combineTextItems,\n\t          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n\t          sink = _ref4.sink,\n\t          _ref4$seenStyles = _ref4.seenStyles,\n\t          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\t\n\t      resources = resources || _primitives.Dict.empty;\n\t      stateManager = stateManager || new StateManager(new TextState());\n\t      var WhitespaceRegexp = /\\s/g;\n\t      var textContent = {\n\t        items: [],\n\t        styles: Object.create(null)\n\t      };\n\t      var textContentItem = {\n\t        initialized: false,\n\t        str: [],\n\t        width: 0,\n\t        height: 0,\n\t        vertical: false,\n\t        lastAdvanceWidth: 0,\n\t        lastAdvanceHeight: 0,\n\t        textAdvanceScale: 0,\n\t        spaceWidth: 0,\n\t        fakeSpaceMin: Infinity,\n\t        fakeMultiSpaceMin: Infinity,\n\t        fakeMultiSpaceMax: -0,\n\t        textRunBreakAllowed: false,\n\t        transform: null,\n\t        fontName: null\n\t      };\n\t      var SPACE_FACTOR = 0.3;\n\t      var MULTI_SPACE_FACTOR = 1.5;\n\t      var MULTI_SPACE_FACTOR_MAX = 4;\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var xobjs = null;\n\t      var skipEmptyXObjs = Object.create(null);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var textState;\n\t      function ensureTextContentItem() {\n\t        if (textContentItem.initialized) {\n\t          return textContentItem;\n\t        }\n\t        var font = textState.font;\n\t        if (!(font.loadedName in seenStyles)) {\n\t          seenStyles[font.loadedName] = true;\n\t          textContent.styles[font.loadedName] = {\n\t            fontFamily: font.fallbackName,\n\t            ascent: font.ascent,\n\t            descent: font.descent,\n\t            vertical: font.vertical\n\t          };\n\t        }\n\t        textContentItem.fontName = font.loadedName;\n\t        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n\t        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n\t          var glyphHeight = font.bbox[3] - font.bbox[1];\n\t          if (glyphHeight > 0) {\n\t            glyphHeight = glyphHeight * textState.fontMatrix[3];\n\t            tsm[3] *= glyphHeight;\n\t          }\n\t        }\n\t        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n\t        textContentItem.transform = trm;\n\t        if (!font.vertical) {\n\t          textContentItem.width = 0;\n\t          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n\t          textContentItem.vertical = false;\n\t        } else {\n\t          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n\t          textContentItem.height = 0;\n\t          textContentItem.vertical = true;\n\t        }\n\t        var a = textState.textLineMatrix[0];\n\t        var b = textState.textLineMatrix[1];\n\t        var scaleLineX = Math.sqrt(a * a + b * b);\n\t        a = textState.ctm[0];\n\t        b = textState.ctm[1];\n\t        var scaleCtmX = Math.sqrt(a * a + b * b);\n\t        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n\t        textContentItem.lastAdvanceWidth = 0;\n\t        textContentItem.lastAdvanceHeight = 0;\n\t        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n\t        if (spaceWidth) {\n\t          textContentItem.spaceWidth = spaceWidth;\n\t          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n\t          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n\t          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n\t          textContentItem.textRunBreakAllowed = !font.isMonospace;\n\t        } else {\n\t          textContentItem.spaceWidth = 0;\n\t          textContentItem.fakeSpaceMin = Infinity;\n\t          textContentItem.fakeMultiSpaceMin = Infinity;\n\t          textContentItem.fakeMultiSpaceMax = 0;\n\t          textContentItem.textRunBreakAllowed = false;\n\t        }\n\t        textContentItem.initialized = true;\n\t        return textContentItem;\n\t      }\n\t      function replaceWhitespace(str) {\n\t        var i = 0,\n\t            ii = str.length,\n\t            code;\n\t        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n\t          i++;\n\t        }\n\t        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n\t      }\n\t      function runBidiTransform(textChunk) {\n\t        var str = textChunk.str.join('');\n\t        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n\t        return {\n\t          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n\t          dir: bidiResult.dir,\n\t          width: textChunk.width,\n\t          height: textChunk.height,\n\t          transform: textChunk.transform,\n\t          fontName: textChunk.fontName\n\t        };\n\t      }\n\t      function handleSetFont(fontName, fontRef) {\n\t        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n\t          textState.font = translated.font;\n\t          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\t        });\n\t      }\n\t      function buildTextContentItem(chars) {\n\t        var font = textState.font;\n\t        var textChunk = ensureTextContentItem();\n\t        var width = 0;\n\t        var height = 0;\n\t        var glyphs = font.charsToGlyphs(chars);\n\t        for (var i = 0; i < glyphs.length; i++) {\n\t          var glyph = glyphs[i];\n\t          var glyphWidth = null;\n\t          if (font.vertical && glyph.vmetric) {\n\t            glyphWidth = glyph.vmetric[0];\n\t          } else {\n\t            glyphWidth = glyph.width;\n\t          }\n\t          var glyphUnicode = glyph.unicode;\n\t          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n\t          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n\t            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n\t          }\n\t          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n\t          var charSpacing = textState.charSpacing;\n\t          if (glyph.isSpace) {\n\t            var wordSpacing = textState.wordSpacing;\n\t            charSpacing += wordSpacing;\n\t            if (wordSpacing > 0) {\n\t              addFakeSpaces(wordSpacing, textChunk.str);\n\t            }\n\t          }\n\t          var tx = 0;\n\t          var ty = 0;\n\t          if (!font.vertical) {\n\t            var w0 = glyphWidth * textState.fontMatrix[0];\n\t            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n\t            width += tx;\n\t          } else {\n\t            var w1 = glyphWidth * textState.fontMatrix[0];\n\t            ty = w1 * textState.fontSize + charSpacing;\n\t            height += ty;\n\t          }\n\t          textState.translateTextMatrix(tx, ty);\n\t          textChunk.str.push(glyphUnicode);\n\t        }\n\t        if (!font.vertical) {\n\t          textChunk.lastAdvanceWidth = width;\n\t          textChunk.width += width;\n\t        } else {\n\t          textChunk.lastAdvanceHeight = height;\n\t          textChunk.height += Math.abs(height);\n\t        }\n\t        return textChunk;\n\t      }\n\t      function addFakeSpaces(width, strBuf) {\n\t        if (width < textContentItem.fakeSpaceMin) {\n\t          return;\n\t        }\n\t        if (width < textContentItem.fakeMultiSpaceMin) {\n\t          strBuf.push(' ');\n\t          return;\n\t        }\n\t        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n\t        while (fakeSpaces-- > 0) {\n\t          strBuf.push(' ');\n\t        }\n\t      }\n\t      function flushTextContentItem() {\n\t        if (!textContentItem.initialized) {\n\t          return;\n\t        }\n\t        textContentItem.width *= textContentItem.textAdvanceScale;\n\t        textContentItem.height *= textContentItem.textAdvanceScale;\n\t        textContent.items.push(runBidiTransform(textContentItem));\n\t        textContentItem.initialized = false;\n\t        textContentItem.str.length = 0;\n\t      }\n\t      function enqueueChunk() {\n\t        var length = textContent.items.length;\n\t        if (length > 0) {\n\t          sink.enqueue(textContent, length);\n\t          textContent.items = [];\n\t          textContent.styles = Object.create(null);\n\t        }\n\t      }\n\t      var timeSlotManager = new TimeSlotManager();\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t        var next = function next(promise) {\n\t          enqueueChunk();\n\t          Promise.all([promise, sink.ready]).then(function () {\n\t            try {\n\t              promiseBody(resolve, reject);\n\t            } catch (ex) {\n\t              reject(ex);\n\t            }\n\t          }, reject);\n\t        };\n\t        task.ensureNotTerminated();\n\t        timeSlotManager.reset();\n\t        var stop,\n\t            operation = {},\n\t            args = [];\n\t        while (!(stop = timeSlotManager.check())) {\n\t          args.length = 0;\n\t          operation.args = args;\n\t          if (!preprocessor.read(operation)) {\n\t            break;\n\t          }\n\t          textState = stateManager.state;\n\t          var fn = operation.fn;\n\t          args = operation.args;\n\t          var advance, diff;\n\t          switch (fn | 0) {\n\t            case _util.OPS.setFont:\n\t              var fontNameArg = args[0].name,\n\t                  fontSizeArg = args[1];\n\t              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.fontName = fontNameArg;\n\t              textState.fontSize = fontSizeArg;\n\t              next(handleSetFont(fontNameArg, null));\n\t              return;\n\t            case _util.OPS.setTextRise:\n\t              flushTextContentItem();\n\t              textState.textRise = args[0];\n\t              break;\n\t            case _util.OPS.setHScale:\n\t              flushTextContentItem();\n\t              textState.textHScale = args[0] / 100;\n\t              break;\n\t            case _util.OPS.setLeading:\n\t              flushTextContentItem();\n\t              textState.leading = args[0];\n\t              break;\n\t            case _util.OPS.moveText:\n\t              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n\t              advance = args[0] - args[1];\n\t              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n\t                textState.translateTextLineMatrix(args[0], args[1]);\n\t                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n\t                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n\t                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n\t                addFakeSpaces(diff, textContentItem.str);\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.translateTextLineMatrix(args[0], args[1]);\n\t              textState.textMatrix = textState.textLineMatrix.slice();\n\t              break;\n\t            case _util.OPS.setLeadingMoveText:\n\t              flushTextContentItem();\n\t              textState.leading = -args[1];\n\t              textState.translateTextLineMatrix(args[0], args[1]);\n\t              textState.textMatrix = textState.textLineMatrix.slice();\n\t              break;\n\t            case _util.OPS.nextLine:\n\t              flushTextContentItem();\n\t              textState.carriageReturn();\n\t              break;\n\t            case _util.OPS.setTextMatrix:\n\t              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n\t                textState.translateTextLineMatrix(advance.width, advance.height);\n\t                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n\t                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n\t                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n\t                addFakeSpaces(diff, textContentItem.str);\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              break;\n\t            case _util.OPS.setCharSpacing:\n\t              textState.charSpacing = args[0];\n\t              break;\n\t            case _util.OPS.setWordSpacing:\n\t              textState.wordSpacing = args[0];\n\t              break;\n\t            case _util.OPS.beginText:\n\t              flushTextContentItem();\n\t              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n\t              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n\t              break;\n\t            case _util.OPS.showSpacedText:\n\t              var items = args[0];\n\t              var offset;\n\t              for (var j = 0, jj = items.length; j < jj; j++) {\n\t                if (typeof items[j] === 'string') {\n\t                  buildTextContentItem(items[j]);\n\t                } else if ((0, _util.isNum)(items[j])) {\n\t                  ensureTextContentItem();\n\t                  advance = items[j] * textState.fontSize / 1000;\n\t                  var breakTextRun = false;\n\t                  if (textState.font.vertical) {\n\t                    offset = advance;\n\t                    textState.translateTextMatrix(0, offset);\n\t                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t                    if (!breakTextRun) {\n\t                      textContentItem.height += offset;\n\t                    }\n\t                  } else {\n\t                    advance = -advance;\n\t                    offset = advance * textState.textHScale;\n\t                    textState.translateTextMatrix(offset, 0);\n\t                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t                    if (!breakTextRun) {\n\t                      textContentItem.width += offset;\n\t                    }\n\t                  }\n\t                  if (breakTextRun) {\n\t                    flushTextContentItem();\n\t                  } else if (advance > 0) {\n\t                    addFakeSpaces(advance, textContentItem.str);\n\t                  }\n\t                }\n\t              }\n\t              break;\n\t            case _util.OPS.showText:\n\t              buildTextContentItem(args[0]);\n\t              break;\n\t            case _util.OPS.nextLineShowText:\n\t              flushTextContentItem();\n\t              textState.carriageReturn();\n\t              buildTextContentItem(args[0]);\n\t              break;\n\t            case _util.OPS.nextLineSetSpacingShowText:\n\t              flushTextContentItem();\n\t              textState.wordSpacing = args[0];\n\t              textState.charSpacing = args[1];\n\t              textState.carriageReturn();\n\t              buildTextContentItem(args[2]);\n\t              break;\n\t            case _util.OPS.paintXObject:\n\t              flushTextContentItem();\n\t              if (!xobjs) {\n\t                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n\t              }\n\t              var name = args[0].name;\n\t              if (name && skipEmptyXObjs[name] !== undefined) {\n\t                break;\n\t              }\n\t              next(new Promise(function (resolveXObject, rejectXObject) {\n\t                if (!name) {\n\t                  throw new _util.FormatError('XObject must be referred to by name.');\n\t                }\n\t                var xobj = xobjs.get(name);\n\t                if (!xobj) {\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                if (!(0, _primitives.isStream)(xobj)) {\n\t                  throw new _util.FormatError('XObject should be a stream');\n\t                }\n\t                var type = xobj.dict.get('Subtype');\n\t                if (!(0, _primitives.isName)(type)) {\n\t                  throw new _util.FormatError('XObject should have a Name subtype');\n\t                }\n\t                if (type.name !== 'Form') {\n\t                  skipEmptyXObjs[name] = true;\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                var currentState = stateManager.state.clone();\n\t                var xObjStateManager = new StateManager(currentState);\n\t                var matrix = xobj.dict.getArray('Matrix');\n\t                if (Array.isArray(matrix) && matrix.length === 6) {\n\t                  xObjStateManager.transform(matrix);\n\t                }\n\t                enqueueChunk();\n\t                var sinkWrapper = {\n\t                  enqueueInvoked: false,\n\t                  enqueue: function enqueue(chunk, size) {\n\t                    this.enqueueInvoked = true;\n\t                    sink.enqueue(chunk, size);\n\t                  },\n\t\n\t                  get desiredSize() {\n\t                    return sink.desiredSize;\n\t                  },\n\t                  get ready() {\n\t                    return sink.ready;\n\t                  }\n\t                };\n\t                self.getTextContent({\n\t                  stream: xobj,\n\t                  task: task,\n\t                  resources: xobj.dict.get('Resources') || resources,\n\t                  stateManager: xObjStateManager,\n\t                  normalizeWhitespace: normalizeWhitespace,\n\t                  combineTextItems: combineTextItems,\n\t                  sink: sinkWrapper,\n\t                  seenStyles: seenStyles\n\t                }).then(function () {\n\t                  if (!sinkWrapper.enqueueInvoked) {\n\t                    skipEmptyXObjs[name] = true;\n\t                  }\n\t                  resolveXObject();\n\t                }, rejectXObject);\n\t              }).catch(function (reason) {\n\t                if (reason instanceof _util.AbortException) {\n\t                  return;\n\t                }\n\t                if (self.options.ignoreErrors) {\n\t                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n\t                  return;\n\t                }\n\t                throw reason;\n\t              }));\n\t              return;\n\t            case _util.OPS.setGState:\n\t              flushTextContentItem();\n\t              var dictName = args[0];\n\t              var extGState = resources.get('ExtGState');\n\t              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n\t                break;\n\t              }\n\t              var gState = extGState.get(dictName.name);\n\t              if (!(0, _primitives.isDict)(gState)) {\n\t                break;\n\t              }\n\t              var gStateFont = gState.get('Font');\n\t              if (gStateFont) {\n\t                textState.fontName = null;\n\t                textState.fontSize = gStateFont[1];\n\t                next(handleSetFont(null, gStateFont[0]));\n\t                return;\n\t              }\n\t              break;\n\t          }\n\t          if (textContent.items.length >= sink.desiredSize) {\n\t            stop = true;\n\t            break;\n\t          }\n\t        }\n\t        if (stop) {\n\t          next(deferred);\n\t          return;\n\t        }\n\t        flushTextContentItem();\n\t        enqueueChunk();\n\t        resolve();\n\t      }).catch(function (reason) {\n\t        if (reason instanceof _util.AbortException) {\n\t          return;\n\t        }\n\t        if (_this9.options.ignoreErrors) {\n\t          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n\t          flushTextContentItem();\n\t          enqueueChunk();\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t\n\t    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n\t      var _this10 = this;\n\t\n\t      var xref = this.xref;\n\t      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n\t      if (properties.composite) {\n\t        var cidSystemInfo = dict.get('CIDSystemInfo');\n\t        if ((0, _primitives.isDict)(cidSystemInfo)) {\n\t          properties.cidSystemInfo = {\n\t            registry: cidSystemInfo.get('Registry'),\n\t            ordering: cidSystemInfo.get('Ordering'),\n\t            supplement: cidSystemInfo.get('Supplement')\n\t          };\n\t        }\n\t        var cidToGidMap = dict.get('CIDToGIDMap');\n\t        if ((0, _primitives.isStream)(cidToGidMap)) {\n\t          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n\t        }\n\t      }\n\t      var differences = [];\n\t      var baseEncodingName = null;\n\t      var encoding;\n\t      if (dict.has('Encoding')) {\n\t        encoding = dict.get('Encoding');\n\t        if ((0, _primitives.isDict)(encoding)) {\n\t          baseEncodingName = encoding.get('BaseEncoding');\n\t          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n\t          if (encoding.has('Differences')) {\n\t            var diffEncoding = encoding.get('Differences');\n\t            var index = 0;\n\t            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n\t              var data = xref.fetchIfRef(diffEncoding[j]);\n\t              if ((0, _util.isNum)(data)) {\n\t                index = data;\n\t              } else if ((0, _primitives.isName)(data)) {\n\t                differences[index++] = data.name;\n\t              } else {\n\t                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n\t              }\n\t            }\n\t          }\n\t        } else if ((0, _primitives.isName)(encoding)) {\n\t          baseEncodingName = encoding.name;\n\t        } else {\n\t          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n\t        }\n\t        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n\t          baseEncodingName = null;\n\t        }\n\t      }\n\t      if (baseEncodingName) {\n\t        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n\t      } else {\n\t        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n\t        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n\t        encoding = _encodings.StandardEncoding;\n\t        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n\t          encoding = _encodings.WinAnsiEncoding;\n\t        }\n\t        if (isSymbolicFont) {\n\t          encoding = _encodings.MacRomanEncoding;\n\t          if (!properties.file) {\n\t            if (/Symbol/i.test(properties.name)) {\n\t              encoding = _encodings.SymbolSetEncoding;\n\t            } else if (/Dingbats/i.test(properties.name)) {\n\t              encoding = _encodings.ZapfDingbatsEncoding;\n\t            }\n\t          }\n\t        }\n\t        properties.defaultEncoding = encoding;\n\t      }\n\t      properties.differences = differences;\n\t      properties.baseEncodingName = baseEncodingName;\n\t      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n\t      properties.dict = dict;\n\t      return toUnicodePromise.then(function (toUnicode) {\n\t        properties.toUnicode = toUnicode;\n\t        return _this10.buildToUnicode(properties);\n\t      }).then(function (toUnicode) {\n\t        properties.toUnicode = toUnicode;\n\t        return properties;\n\t      });\n\t    },\n\t    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n\t      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n\t      var toUnicode = [],\n\t          charcode = void 0,\n\t          glyphName = void 0;\n\t      var encoding = properties.defaultEncoding.slice();\n\t      var baseEncodingName = properties.baseEncodingName;\n\t      var differences = properties.differences;\n\t      for (charcode in differences) {\n\t        glyphName = differences[charcode];\n\t        if (glyphName === '.notdef') {\n\t          continue;\n\t        }\n\t        encoding[charcode] = glyphName;\n\t      }\n\t      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t      for (charcode in encoding) {\n\t        glyphName = encoding[charcode];\n\t        if (glyphName === '') {\n\t          continue;\n\t        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n\t          var code = 0;\n\t          switch (glyphName[0]) {\n\t            case 'G':\n\t              if (glyphName.length === 3) {\n\t                code = parseInt(glyphName.substr(1), 16);\n\t              }\n\t              break;\n\t            case 'g':\n\t              if (glyphName.length === 5) {\n\t                code = parseInt(glyphName.substr(1), 16);\n\t              }\n\t              break;\n\t            case 'C':\n\t            case 'c':\n\t              if (glyphName.length >= 3) {\n\t                code = +glyphName.substr(1);\n\t              }\n\t              break;\n\t            default:\n\t              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t              if (unicode !== -1) {\n\t                code = unicode;\n\t              }\n\t          }\n\t          if (code) {\n\t            if (baseEncodingName && code === +charcode) {\n\t              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n\t              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n\t                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t                continue;\n\t              }\n\t            }\n\t            toUnicode[charcode] = String.fromCharCode(code);\n\t          }\n\t          continue;\n\t        }\n\t        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t      }\n\t      return new _fonts.ToUnicodeMap(toUnicode);\n\t    },\n\t    buildToUnicode: function buildToUnicode(properties) {\n\t      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n\t      if (properties.hasIncludedToUnicodeMap) {\n\t        if (!properties.composite && properties.hasEncoding) {\n\t          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n\t        }\n\t        return Promise.resolve(properties.toUnicode);\n\t      }\n\t      if (!properties.composite) {\n\t        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n\t      }\n\t      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n\t        var registry = properties.cidSystemInfo.registry;\n\t        var ordering = properties.cidSystemInfo.ordering;\n\t        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n\t        return _cmap.CMapFactory.create({\n\t          encoding: ucs2CMapName,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (ucs2CMap) {\n\t          var cMap = properties.cMap;\n\t          var toUnicode = [];\n\t          cMap.forEach(function (charcode, cid) {\n\t            if (cid > 0xffff) {\n\t              throw new _util.FormatError('Max size of CID is 65,535');\n\t            }\n\t            var ucs2 = ucs2CMap.lookup(cid);\n\t            if (ucs2) {\n\t              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n\t            }\n\t          });\n\t          return new _fonts.ToUnicodeMap(toUnicode);\n\t        });\n\t      }\n\t      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n\t    },\n\t\n\t    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n\t      var cmapObj = toUnicode;\n\t      if ((0, _primitives.isName)(cmapObj)) {\n\t        return _cmap.CMapFactory.create({\n\t          encoding: cmapObj,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cmap) {\n\t          if (cmap instanceof _cmap.IdentityCMap) {\n\t            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n\t          }\n\t          return new _fonts.ToUnicodeMap(cmap.getMap());\n\t        });\n\t      } else if ((0, _primitives.isStream)(cmapObj)) {\n\t        return _cmap.CMapFactory.create({\n\t          encoding: cmapObj,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cmap) {\n\t          if (cmap instanceof _cmap.IdentityCMap) {\n\t            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n\t          }\n\t          var map = new Array(cmap.length);\n\t          cmap.forEach(function (charCode, token) {\n\t            var str = [];\n\t            for (var k = 0; k < token.length; k += 2) {\n\t              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t              if ((w1 & 0xF800) !== 0xD800) {\n\t                str.push(w1);\n\t                continue;\n\t              }\n\t              k += 2;\n\t              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n\t            }\n\t            map[charCode] = String.fromCharCode.apply(String, str);\n\t          });\n\t          return new _fonts.ToUnicodeMap(map);\n\t        });\n\t      }\n\t      return Promise.resolve(null);\n\t    },\n\t    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n\t      var glyphsData = cidToGidStream.getBytes();\n\t      var result = [];\n\t      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n\t        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n\t        if (glyphID === 0) {\n\t          continue;\n\t        }\n\t        var code = j >> 1;\n\t        result[code] = glyphID;\n\t      }\n\t      return result;\n\t    },\n\t    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n\t      var xref = this.xref;\n\t      var glyphsWidths = [];\n\t      var defaultWidth = 0;\n\t      var glyphsVMetrics = [];\n\t      var defaultVMetrics;\n\t      var i, ii, j, jj, start, code, widths;\n\t      if (properties.composite) {\n\t        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n\t        widths = dict.get('W');\n\t        if (widths) {\n\t          for (i = 0, ii = widths.length; i < ii; i++) {\n\t            start = xref.fetchIfRef(widths[i++]);\n\t            code = xref.fetchIfRef(widths[i]);\n\t            if (Array.isArray(code)) {\n\t              for (j = 0, jj = code.length; j < jj; j++) {\n\t                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n\t              }\n\t            } else {\n\t              var width = xref.fetchIfRef(widths[++i]);\n\t              for (j = start; j <= code; j++) {\n\t                glyphsWidths[j] = width;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (properties.vertical) {\n\t          var vmetrics = dict.getArray('DW2') || [880, -1000];\n\t          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n\t          vmetrics = dict.get('W2');\n\t          if (vmetrics) {\n\t            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n\t              start = xref.fetchIfRef(vmetrics[i++]);\n\t              code = xref.fetchIfRef(vmetrics[i]);\n\t              if (Array.isArray(code)) {\n\t                for (j = 0, jj = code.length; j < jj; j++) {\n\t                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n\t                }\n\t              } else {\n\t                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n\t                for (j = start; j <= code; j++) {\n\t                  glyphsVMetrics[j] = vmetric;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        var firstChar = properties.firstChar;\n\t        widths = dict.get('Widths');\n\t        if (widths) {\n\t          j = firstChar;\n\t          for (i = 0, ii = widths.length; i < ii; i++) {\n\t            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n\t          }\n\t          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n\t        } else {\n\t          var baseFontName = dict.get('BaseFont');\n\t          if ((0, _primitives.isName)(baseFontName)) {\n\t            var metrics = this.getBaseFontMetrics(baseFontName.name);\n\t            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t            defaultWidth = metrics.defaultWidth;\n\t          }\n\t        }\n\t      }\n\t      var isMonospace = true;\n\t      var firstWidth = defaultWidth;\n\t      for (var glyph in glyphsWidths) {\n\t        var glyphWidth = glyphsWidths[glyph];\n\t        if (!glyphWidth) {\n\t          continue;\n\t        }\n\t        if (!firstWidth) {\n\t          firstWidth = glyphWidth;\n\t          continue;\n\t        }\n\t        if (firstWidth !== glyphWidth) {\n\t          isMonospace = false;\n\t          break;\n\t        }\n\t      }\n\t      if (isMonospace) {\n\t        properties.flags |= _fonts.FontFlags.FixedPitch;\n\t      }\n\t      properties.defaultWidth = defaultWidth;\n\t      properties.widths = glyphsWidths;\n\t      properties.defaultVMetrics = defaultVMetrics;\n\t      properties.vmetrics = glyphsVMetrics;\n\t    },\n\t    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n\t      var fontNameWoStyle = baseFontName.split('-')[0];\n\t      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n\t    },\n\t    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n\t      var defaultWidth = 0;\n\t      var widths = [];\n\t      var monospace = false;\n\t      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n\t      var lookupName = stdFontMap[name] || name;\n\t      var Metrics = (0, _metrics.getMetrics)();\n\t      if (!(lookupName in Metrics)) {\n\t        if (this.isSerifFont(name)) {\n\t          lookupName = 'Times-Roman';\n\t        } else {\n\t          lookupName = 'Helvetica';\n\t        }\n\t      }\n\t      var glyphWidths = Metrics[lookupName];\n\t      if ((0, _util.isNum)(glyphWidths)) {\n\t        defaultWidth = glyphWidths;\n\t        monospace = true;\n\t      } else {\n\t        widths = glyphWidths();\n\t      }\n\t      return {\n\t        defaultWidth: defaultWidth,\n\t        monospace: monospace,\n\t        widths: widths\n\t      };\n\t    },\n\t    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n\t      var widths = Object.create(null);\n\t      var differences = properties.differences;\n\t      var encoding = properties.defaultEncoding;\n\t      for (var charCode = 0; charCode < 256; charCode++) {\n\t        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n\t          widths[charCode] = widthsByGlyphName[differences[charCode]];\n\t          continue;\n\t        }\n\t        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n\t          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n\t          continue;\n\t        }\n\t      }\n\t      return widths;\n\t    },\n\t    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n\t      var baseDict = dict;\n\t      var type = dict.get('Subtype');\n\t      if (!(0, _primitives.isName)(type)) {\n\t        throw new _util.FormatError('invalid font Subtype');\n\t      }\n\t      var composite = false;\n\t      var uint8array;\n\t      if (type.name === 'Type0') {\n\t        var df = dict.get('DescendantFonts');\n\t        if (!df) {\n\t          throw new _util.FormatError('Descendant fonts are not specified');\n\t        }\n\t        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n\t        type = dict.get('Subtype');\n\t        if (!(0, _primitives.isName)(type)) {\n\t          throw new _util.FormatError('invalid font Subtype');\n\t        }\n\t        composite = true;\n\t      }\n\t      var descriptor = dict.get('FontDescriptor');\n\t      if (descriptor) {\n\t        var hash = new _murmurhash.MurmurHash3_64();\n\t        var encoding = baseDict.getRaw('Encoding');\n\t        if ((0, _primitives.isName)(encoding)) {\n\t          hash.update(encoding.name);\n\t        } else if ((0, _primitives.isRef)(encoding)) {\n\t          hash.update(encoding.toString());\n\t        } else if ((0, _primitives.isDict)(encoding)) {\n\t          var keys = encoding.getKeys();\n\t          for (var i = 0, ii = keys.length; i < ii; i++) {\n\t            var entry = encoding.getRaw(keys[i]);\n\t            if ((0, _primitives.isName)(entry)) {\n\t              hash.update(entry.name);\n\t            } else if ((0, _primitives.isRef)(entry)) {\n\t              hash.update(entry.toString());\n\t            } else if (Array.isArray(entry)) {\n\t              var diffLength = entry.length,\n\t                  diffBuf = new Array(diffLength);\n\t              for (var j = 0; j < diffLength; j++) {\n\t                var diffEntry = entry[j];\n\t                if ((0, _primitives.isName)(diffEntry)) {\n\t                  diffBuf[j] = diffEntry.name;\n\t                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n\t                  diffBuf[j] = diffEntry.toString();\n\t                }\n\t              }\n\t              hash.update(diffBuf.join());\n\t            }\n\t          }\n\t        }\n\t        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t        if ((0, _primitives.isStream)(toUnicode)) {\n\t          var stream = toUnicode.str || toUnicode;\n\t          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n\t          hash.update(uint8array);\n\t        } else if ((0, _primitives.isName)(toUnicode)) {\n\t          hash.update(toUnicode.name);\n\t        }\n\t        var widths = dict.get('Widths') || baseDict.get('Widths');\n\t        if (widths) {\n\t          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n\t          hash.update(uint8array);\n\t        }\n\t      }\n\t      return {\n\t        descriptor: descriptor,\n\t        dict: dict,\n\t        baseDict: baseDict,\n\t        composite: composite,\n\t        type: type.name,\n\t        hash: hash ? hash.hexdigest() : ''\n\t      };\n\t    },\n\t    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n\t      var _this11 = this;\n\t\n\t      var baseDict = preEvaluatedFont.baseDict;\n\t      var dict = preEvaluatedFont.dict;\n\t      var composite = preEvaluatedFont.composite;\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var type = preEvaluatedFont.type;\n\t      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n\t      var properties;\n\t      if (!descriptor) {\n\t        if (type === 'Type3') {\n\t          descriptor = new _primitives.Dict(null);\n\t          descriptor.set('FontName', _primitives.Name.get(type));\n\t          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n\t        } else {\n\t          var baseFontName = dict.get('BaseFont');\n\t          if (!(0, _primitives.isName)(baseFontName)) {\n\t            throw new _util.FormatError('Base font is not specified');\n\t          }\n\t          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n\t          var metrics = this.getBaseFontMetrics(baseFontName);\n\t          var fontNameWoStyle = baseFontName.split('-')[0];\n\t          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n\t          properties = {\n\t            type: type,\n\t            name: baseFontName,\n\t            widths: metrics.widths,\n\t            defaultWidth: metrics.defaultWidth,\n\t            flags: flags,\n\t            firstChar: 0,\n\t            lastChar: maxCharIndex\n\t          };\n\t          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n\t            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n\t            return new _fonts.Font(baseFontName, null, properties);\n\t          });\n\t        }\n\t      }\n\t      var firstChar = dict.get('FirstChar') || 0;\n\t      var lastChar = dict.get('LastChar') || maxCharIndex;\n\t      var fontName = descriptor.get('FontName');\n\t      var baseFont = dict.get('BaseFont');\n\t      if ((0, _util.isString)(fontName)) {\n\t        fontName = _primitives.Name.get(fontName);\n\t      }\n\t      if ((0, _util.isString)(baseFont)) {\n\t        baseFont = _primitives.Name.get(baseFont);\n\t      }\n\t      if (type !== 'Type3') {\n\t        var fontNameStr = fontName && fontName.name;\n\t        var baseFontStr = baseFont && baseFont.name;\n\t        if (fontNameStr !== baseFontStr) {\n\t          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n\t          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n\t            fontName = baseFont;\n\t          }\n\t        }\n\t      }\n\t      fontName = fontName || baseFont;\n\t      if (!(0, _primitives.isName)(fontName)) {\n\t        throw new _util.FormatError('invalid font name');\n\t      }\n\t      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n\t      if (fontFile) {\n\t        if (fontFile.dict) {\n\t          var subtype = fontFile.dict.get('Subtype');\n\t          if (subtype) {\n\t            subtype = subtype.name;\n\t          }\n\t          var length1 = fontFile.dict.get('Length1');\n\t          var length2 = fontFile.dict.get('Length2');\n\t          var length3 = fontFile.dict.get('Length3');\n\t        }\n\t      }\n\t      properties = {\n\t        type: type,\n\t        name: fontName.name,\n\t        subtype: subtype,\n\t        file: fontFile,\n\t        length1: length1,\n\t        length2: length2,\n\t        length3: length3,\n\t        loadedName: baseDict.loadedName,\n\t        composite: composite,\n\t        wideChars: composite,\n\t        fixedPitch: false,\n\t        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n\t        firstChar: firstChar || 0,\n\t        lastChar: lastChar || maxCharIndex,\n\t        bbox: descriptor.getArray('FontBBox'),\n\t        ascent: descriptor.get('Ascent'),\n\t        descent: descriptor.get('Descent'),\n\t        xHeight: descriptor.get('XHeight'),\n\t        capHeight: descriptor.get('CapHeight'),\n\t        flags: descriptor.get('Flags'),\n\t        italicAngle: descriptor.get('ItalicAngle'),\n\t        isType3Font: false\n\t      };\n\t      var cMapPromise;\n\t      if (composite) {\n\t        var cidEncoding = baseDict.get('Encoding');\n\t        if ((0, _primitives.isName)(cidEncoding)) {\n\t          properties.cidEncoding = cidEncoding.name;\n\t        }\n\t        cMapPromise = _cmap.CMapFactory.create({\n\t          encoding: cidEncoding,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cMap) {\n\t          properties.cMap = cMap;\n\t          properties.vertical = properties.cMap.vertical;\n\t        });\n\t      } else {\n\t        cMapPromise = Promise.resolve(undefined);\n\t      }\n\t      return cMapPromise.then(function () {\n\t        return _this11.extractDataStructures(dict, baseDict, properties);\n\t      }).then(function (properties) {\n\t        _this11.extractWidths(dict, descriptor, properties);\n\t        if (type === 'Type3') {\n\t          properties.isType3Font = true;\n\t        }\n\t        return new _fonts.Font(fontName.name, fontFile, properties);\n\t      });\n\t    }\n\t  };\n\t  return PartialEvaluator;\n\t}();\n\tvar TranslatedFont = function TranslatedFontClosure() {\n\t  function TranslatedFont(loadedName, font, dict) {\n\t    this.loadedName = loadedName;\n\t    this.font = font;\n\t    this.dict = dict;\n\t    this.type3Loaded = null;\n\t    this.sent = false;\n\t  }\n\t  TranslatedFont.prototype = {\n\t    send: function send(handler) {\n\t      if (this.sent) {\n\t        return;\n\t      }\n\t      var fontData = this.font.exportData();\n\t      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n\t      this.sent = true;\n\t    },\n\t    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n\t      if (!this.font.isType3Font) {\n\t        throw new Error('Must be a Type3 font.');\n\t      }\n\t      if (this.type3Loaded) {\n\t        return this.type3Loaded;\n\t      }\n\t      var type3Options = Object.create(evaluator.options);\n\t      type3Options.ignoreErrors = false;\n\t      var type3Evaluator = evaluator.clone(type3Options);\n\t      var translatedFont = this.font;\n\t      var loadCharProcsPromise = Promise.resolve();\n\t      var charProcs = this.dict.get('CharProcs');\n\t      var fontResources = this.dict.get('Resources') || resources;\n\t      var charProcKeys = charProcs.getKeys();\n\t      var charProcOperatorList = Object.create(null);\n\t\n\t      var _loop2 = function _loop2() {\n\t        var key = charProcKeys[i];\n\t        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n\t          var glyphStream = charProcs.get(key);\n\t          var operatorList = new _operator_list.OperatorList();\n\t          return type3Evaluator.getOperatorList({\n\t            stream: glyphStream,\n\t            task: task,\n\t            resources: fontResources,\n\t            operatorList: operatorList\n\t          }).then(function () {\n\t            charProcOperatorList[key] = operatorList.getIR();\n\t            parentOperatorList.addDependencies(operatorList.dependencies);\n\t          }).catch(function (reason) {\n\t            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n\t            var operatorList = new _operator_list.OperatorList();\n\t            charProcOperatorList[key] = operatorList.getIR();\n\t          });\n\t        });\n\t      };\n\t\n\t      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n\t        _loop2();\n\t      }\n\t      this.type3Loaded = loadCharProcsPromise.then(function () {\n\t        translatedFont.charProcOperatorList = charProcOperatorList;\n\t      });\n\t      return this.type3Loaded;\n\t    }\n\t  };\n\t  return TranslatedFont;\n\t}();\n\tvar StateManager = function StateManagerClosure() {\n\t  function StateManager(initialState) {\n\t    this.state = initialState;\n\t    this.stateStack = [];\n\t  }\n\t  StateManager.prototype = {\n\t    save: function save() {\n\t      var old = this.state;\n\t      this.stateStack.push(this.state);\n\t      this.state = old.clone();\n\t    },\n\t    restore: function restore() {\n\t      var prev = this.stateStack.pop();\n\t      if (prev) {\n\t        this.state = prev;\n\t      }\n\t    },\n\t    transform: function transform(args) {\n\t      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n\t    }\n\t  };\n\t  return StateManager;\n\t}();\n\tvar TextState = function TextStateClosure() {\n\t  function TextState() {\n\t    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n\t    this.fontName = null;\n\t    this.fontSize = 0;\n\t    this.font = null;\n\t    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n\t    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n\t    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n\t    this.charSpacing = 0;\n\t    this.wordSpacing = 0;\n\t    this.leading = 0;\n\t    this.textHScale = 1;\n\t    this.textRise = 0;\n\t  }\n\t  TextState.prototype = {\n\t    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t    },\n\t    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textLineMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t    },\n\t    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t    },\n\t    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textLineMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t    },\n\t    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n\t      var font = this.font;\n\t      if (!font) {\n\t        return null;\n\t      }\n\t      var m = this.textLineMatrix;\n\t      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n\t        return null;\n\t      }\n\t      var txDiff = e - m[4],\n\t          tyDiff = f - m[5];\n\t      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n\t        return null;\n\t      }\n\t      var tx,\n\t          ty,\n\t          denominator = a * d - b * c;\n\t      if (font.vertical) {\n\t        tx = -tyDiff * c / denominator;\n\t        ty = tyDiff * a / denominator;\n\t      } else {\n\t        tx = txDiff * d / denominator;\n\t        ty = -txDiff * b / denominator;\n\t      }\n\t      return {\n\t        width: tx,\n\t        height: ty,\n\t        value: font.vertical ? ty : tx\n\t      };\n\t    },\n\t    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n\t      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n\t      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n\t    },\n\t    carriageReturn: function TextState_carriageReturn() {\n\t      this.translateTextLineMatrix(0, -this.leading);\n\t      this.textMatrix = this.textLineMatrix.slice();\n\t    },\n\t    clone: function TextState_clone() {\n\t      var clone = Object.create(this);\n\t      clone.textMatrix = this.textMatrix.slice();\n\t      clone.textLineMatrix = this.textLineMatrix.slice();\n\t      clone.fontMatrix = this.fontMatrix.slice();\n\t      return clone;\n\t    }\n\t  };\n\t  return TextState;\n\t}();\n\tvar EvalState = function EvalStateClosure() {\n\t  function EvalState() {\n\t    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n\t    this.font = null;\n\t    this.textRenderingMode = _util.TextRenderingMode.FILL;\n\t    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t  }\n\t  EvalState.prototype = {\n\t    clone: function CanvasExtraState_clone() {\n\t      return Object.create(this);\n\t    }\n\t  };\n\t  return EvalState;\n\t}();\n\tvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n\t  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['w'] = {\n\t      id: _util.OPS.setLineWidth,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['J'] = {\n\t      id: _util.OPS.setLineCap,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['j'] = {\n\t      id: _util.OPS.setLineJoin,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['M'] = {\n\t      id: _util.OPS.setMiterLimit,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['d'] = {\n\t      id: _util.OPS.setDash,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['ri'] = {\n\t      id: _util.OPS.setRenderingIntent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['i'] = {\n\t      id: _util.OPS.setFlatness,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['gs'] = {\n\t      id: _util.OPS.setGState,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['q'] = {\n\t      id: _util.OPS.save,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Q'] = {\n\t      id: _util.OPS.restore,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['cm'] = {\n\t      id: _util.OPS.transform,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['m'] = {\n\t      id: _util.OPS.moveTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['l'] = {\n\t      id: _util.OPS.lineTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['c'] = {\n\t      id: _util.OPS.curveTo,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['v'] = {\n\t      id: _util.OPS.curveTo2,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['y'] = {\n\t      id: _util.OPS.curveTo3,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['h'] = {\n\t      id: _util.OPS.closePath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['re'] = {\n\t      id: _util.OPS.rectangle,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['S'] = {\n\t      id: _util.OPS.stroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['s'] = {\n\t      id: _util.OPS.closeStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['f'] = {\n\t      id: _util.OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['F'] = {\n\t      id: _util.OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['f*'] = {\n\t      id: _util.OPS.eoFill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['B'] = {\n\t      id: _util.OPS.fillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['B*'] = {\n\t      id: _util.OPS.eoFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['b'] = {\n\t      id: _util.OPS.closeFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['b*'] = {\n\t      id: _util.OPS.closeEOFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['n'] = {\n\t      id: _util.OPS.endPath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['W'] = {\n\t      id: _util.OPS.clip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['W*'] = {\n\t      id: _util.OPS.eoClip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BT'] = {\n\t      id: _util.OPS.beginText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['ET'] = {\n\t      id: _util.OPS.endText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Tc'] = {\n\t      id: _util.OPS.setCharSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tw'] = {\n\t      id: _util.OPS.setWordSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tz'] = {\n\t      id: _util.OPS.setHScale,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['TL'] = {\n\t      id: _util.OPS.setLeading,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tf'] = {\n\t      id: _util.OPS.setFont,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['Tr'] = {\n\t      id: _util.OPS.setTextRenderingMode,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Ts'] = {\n\t      id: _util.OPS.setTextRise,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Td'] = {\n\t      id: _util.OPS.moveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['TD'] = {\n\t      id: _util.OPS.setLeadingMoveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['Tm'] = {\n\t      id: _util.OPS.setTextMatrix,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['T*'] = {\n\t      id: _util.OPS.nextLine,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Tj'] = {\n\t      id: _util.OPS.showText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['TJ'] = {\n\t      id: _util.OPS.showSpacedText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['\\''] = {\n\t      id: _util.OPS.nextLineShowText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['\"'] = {\n\t      id: _util.OPS.nextLineSetSpacingShowText,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['d0'] = {\n\t      id: _util.OPS.setCharWidth,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['d1'] = {\n\t      id: _util.OPS.setCharWidthAndBounds,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['CS'] = {\n\t      id: _util.OPS.setStrokeColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['cs'] = {\n\t      id: _util.OPS.setFillColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['SC'] = {\n\t      id: _util.OPS.setStrokeColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t    };\n\t    t['SCN'] = {\n\t      id: _util.OPS.setStrokeColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t    };\n\t    t['sc'] = {\n\t      id: _util.OPS.setFillColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t    };\n\t    t['scn'] = {\n\t      id: _util.OPS.setFillColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t    };\n\t    t['G'] = {\n\t      id: _util.OPS.setStrokeGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['g'] = {\n\t      id: _util.OPS.setFillGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['RG'] = {\n\t      id: _util.OPS.setStrokeRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['rg'] = {\n\t      id: _util.OPS.setFillRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['K'] = {\n\t      id: _util.OPS.setStrokeCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['k'] = {\n\t      id: _util.OPS.setFillCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['sh'] = {\n\t      id: _util.OPS.shadingFill,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['BI'] = {\n\t      id: _util.OPS.beginInlineImage,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['ID'] = {\n\t      id: _util.OPS.beginImageData,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['EI'] = {\n\t      id: _util.OPS.endInlineImage,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Do'] = {\n\t      id: _util.OPS.paintXObject,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['MP'] = {\n\t      id: _util.OPS.markPoint,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['DP'] = {\n\t      id: _util.OPS.markPointProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['BMC'] = {\n\t      id: _util.OPS.beginMarkedContent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['BDC'] = {\n\t      id: _util.OPS.beginMarkedContentProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['EMC'] = {\n\t      id: _util.OPS.endMarkedContent,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BX'] = {\n\t      id: _util.OPS.beginCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['EX'] = {\n\t      id: _util.OPS.endCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BM'] = null;\n\t    t['BD'] = null;\n\t    t['true'] = null;\n\t    t['fa'] = null;\n\t    t['fal'] = null;\n\t    t['fals'] = null;\n\t    t['false'] = null;\n\t    t['nu'] = null;\n\t    t['nul'] = null;\n\t    t['null'] = null;\n\t  });\n\t  function EvaluatorPreprocessor(stream, xref, stateManager) {\n\t    this.opMap = getOPMap();\n\t    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n\t    this.stateManager = stateManager;\n\t    this.nonProcessedArgs = [];\n\t  }\n\t  EvaluatorPreprocessor.prototype = {\n\t    get savedStatesDepth() {\n\t      return this.stateManager.stateStack.length;\n\t    },\n\t    read: function EvaluatorPreprocessor_read(operation) {\n\t      var args = operation.args;\n\t      while (true) {\n\t        var obj = this.parser.getObj();\n\t        if ((0, _primitives.isCmd)(obj)) {\n\t          var cmd = obj.cmd;\n\t          var opSpec = this.opMap[cmd];\n\t          if (!opSpec) {\n\t            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n\t            continue;\n\t          }\n\t          var fn = opSpec.id;\n\t          var numArgs = opSpec.numArgs;\n\t          var argsLength = args !== null ? args.length : 0;\n\t          if (!opSpec.variableArgs) {\n\t            if (argsLength !== numArgs) {\n\t              var nonProcessedArgs = this.nonProcessedArgs;\n\t              while (argsLength > numArgs) {\n\t                nonProcessedArgs.push(args.shift());\n\t                argsLength--;\n\t              }\n\t              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n\t                if (args === null) {\n\t                  args = [];\n\t                }\n\t                args.unshift(nonProcessedArgs.pop());\n\t                argsLength++;\n\t              }\n\t            }\n\t            if (argsLength < numArgs) {\n\t              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n\t              if (args !== null) {\n\t                args.length = 0;\n\t              }\n\t              continue;\n\t            }\n\t          } else if (argsLength > numArgs) {\n\t            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n\t          }\n\t          this.preprocessCommand(fn, args);\n\t          operation.fn = fn;\n\t          operation.args = args;\n\t          return true;\n\t        }\n\t        if ((0, _primitives.isEOF)(obj)) {\n\t          return false;\n\t        }\n\t        if (obj !== null) {\n\t          if (args === null) {\n\t            args = [];\n\t          }\n\t          args.push(obj);\n\t          if (args.length > 33) {\n\t            throw new _util.FormatError('Too many arguments');\n\t          }\n\t        }\n\t      }\n\t    },\n\t    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n\t      switch (fn | 0) {\n\t        case _util.OPS.save:\n\t          this.stateManager.save();\n\t          break;\n\t        case _util.OPS.restore:\n\t          this.stateManager.restore();\n\t          break;\n\t        case _util.OPS.transform:\n\t          this.stateManager.transform(args);\n\t          break;\n\t      }\n\t    }\n\t  };\n\t  return EvaluatorPreprocessor;\n\t}();\n\texports.PartialEvaluator = PartialEvaluator;\n\n/***/ },\n\n/***/ 691:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FontRendererFactory = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _cff_parser = __webpack_require__(403);\n\t\n\tvar _glyphlist = __webpack_require__(179);\n\t\n\tvar _encodings = __webpack_require__(98);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar FontRendererFactory = function FontRendererFactoryClosure() {\n\t  function getLong(data, offset) {\n\t    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t  }\n\t  function getUshort(data, offset) {\n\t    return data[offset] << 8 | data[offset + 1];\n\t  }\n\t  function parseCmap(data, start, end) {\n\t    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n\t    var format = getUshort(data, start + offset);\n\t    var ranges, p, i;\n\t    if (format === 4) {\n\t      getUshort(data, start + offset + 2);\n\t      var segCount = getUshort(data, start + offset + 6) >> 1;\n\t      p = start + offset + 14;\n\t      ranges = [];\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i] = { end: getUshort(data, p) };\n\t      }\n\t      p += 2;\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i].start = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i].idDelta = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        var idOffset = getUshort(data, p);\n\t        if (idOffset === 0) {\n\t          continue;\n\t        }\n\t        ranges[i].ids = [];\n\t        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n\t          ranges[i].ids[j] = getUshort(data, p + idOffset);\n\t          idOffset += 2;\n\t        }\n\t      }\n\t      return ranges;\n\t    } else if (format === 12) {\n\t      getLong(data, start + offset + 4);\n\t      var groups = getLong(data, start + offset + 12);\n\t      p = start + offset + 16;\n\t      ranges = [];\n\t      for (i = 0; i < groups; i++) {\n\t        ranges.push({\n\t          start: getLong(data, p),\n\t          end: getLong(data, p + 4),\n\t          idDelta: getLong(data, p + 8) - getLong(data, p)\n\t        });\n\t        p += 12;\n\t      }\n\t      return ranges;\n\t    }\n\t    throw new _util.FormatError('unsupported cmap: ' + format);\n\t  }\n\t  function parseCff(data, start, end, seacAnalysisEnabled) {\n\t    var properties = {};\n\t    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n\t    var cff = parser.parse();\n\t    return {\n\t      glyphs: cff.charStrings.objects,\n\t      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n\t      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n\t    };\n\t  }\n\t  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n\t    var itemSize, itemDecode;\n\t    if (isGlyphLocationsLong) {\n\t      itemSize = 4;\n\t      itemDecode = function fontItemDecodeLong(data, offset) {\n\t        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t      };\n\t    } else {\n\t      itemSize = 2;\n\t      itemDecode = function fontItemDecode(data, offset) {\n\t        return data[offset] << 9 | data[offset + 1] << 1;\n\t      };\n\t    }\n\t    var glyphs = [];\n\t    var startOffset = itemDecode(loca, 0);\n\t    for (var j = itemSize; j < loca.length; j += itemSize) {\n\t      var endOffset = itemDecode(loca, j);\n\t      glyphs.push(glyf.subarray(startOffset, endOffset));\n\t      startOffset = endOffset;\n\t    }\n\t    return glyphs;\n\t  }\n\t  function lookupCmap(ranges, unicode) {\n\t    var code = unicode.charCodeAt(0),\n\t        gid = 0;\n\t    var l = 0,\n\t        r = ranges.length - 1;\n\t    while (l < r) {\n\t      var c = l + r + 1 >> 1;\n\t      if (code < ranges[c].start) {\n\t        r = c - 1;\n\t      } else {\n\t        l = c;\n\t      }\n\t    }\n\t    if (ranges[l].start <= code && code <= ranges[l].end) {\n\t      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n\t    }\n\t    return {\n\t      charCode: code,\n\t      glyphId: gid\n\t    };\n\t  }\n\t  function compileGlyf(code, cmds, font) {\n\t    function moveTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'moveTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function lineTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'lineTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function quadraticCurveTo(xa, ya, x, y) {\n\t      cmds.push({\n\t        cmd: 'quadraticCurveTo',\n\t        args: [xa, ya, x, y]\n\t      });\n\t    }\n\t    var i = 0;\n\t    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t    var flags;\n\t    var x = 0,\n\t        y = 0;\n\t    i += 10;\n\t    if (numberOfContours < 0) {\n\t      do {\n\t        flags = code[i] << 8 | code[i + 1];\n\t        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n\t        i += 4;\n\t        var arg1, arg2;\n\t        if (flags & 0x01) {\n\t          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n\t          i += 4;\n\t        } else {\n\t          arg1 = code[i++];\n\t          arg2 = code[i++];\n\t        }\n\t        if (flags & 0x02) {\n\t          x = arg1;\n\t          y = arg2;\n\t        } else {\n\t          x = 0;\n\t          y = 0;\n\t        }\n\t        var scaleX = 1,\n\t            scaleY = 1,\n\t            scale01 = 0,\n\t            scale10 = 0;\n\t        if (flags & 0x08) {\n\t          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          i += 2;\n\t        } else if (flags & 0x40) {\n\t          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t          i += 4;\n\t        } else if (flags & 0x80) {\n\t          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n\t          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n\t          i += 8;\n\t        }\n\t        var subglyph = font.glyphs[glyphIndex];\n\t        if (subglyph) {\n\t          cmds.push({ cmd: 'save' });\n\t          cmds.push({\n\t            cmd: 'transform',\n\t            args: [scaleX, scale01, scale10, scaleY, x, y]\n\t          });\n\t          compileGlyf(subglyph, cmds, font);\n\t          cmds.push({ cmd: 'restore' });\n\t        }\n\t      } while (flags & 0x20);\n\t    } else {\n\t      var endPtsOfContours = [];\n\t      var j, jj;\n\t      for (j = 0; j < numberOfContours; j++) {\n\t        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n\t        i += 2;\n\t      }\n\t      var instructionLength = code[i] << 8 | code[i + 1];\n\t      i += 2 + instructionLength;\n\t      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\t      var points = [];\n\t      while (points.length < numberOfPoints) {\n\t        flags = code[i++];\n\t        var repeat = 1;\n\t        if (flags & 0x08) {\n\t          repeat += code[i++];\n\t        }\n\t        while (repeat-- > 0) {\n\t          points.push({ flags: flags });\n\t        }\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t        switch (points[j].flags & 0x12) {\n\t          case 0x00:\n\t            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t            i += 2;\n\t            break;\n\t          case 0x02:\n\t            x -= code[i++];\n\t            break;\n\t          case 0x12:\n\t            x += code[i++];\n\t            break;\n\t        }\n\t        points[j].x = x;\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t        switch (points[j].flags & 0x24) {\n\t          case 0x00:\n\t            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t            i += 2;\n\t            break;\n\t          case 0x04:\n\t            y -= code[i++];\n\t            break;\n\t          case 0x24:\n\t            y += code[i++];\n\t            break;\n\t        }\n\t        points[j].y = y;\n\t      }\n\t      var startPoint = 0;\n\t      for (i = 0; i < numberOfContours; i++) {\n\t        var endPoint = endPtsOfContours[i];\n\t        var contour = points.slice(startPoint, endPoint + 1);\n\t        if (contour[0].flags & 1) {\n\t          contour.push(contour[0]);\n\t        } else if (contour[contour.length - 1].flags & 1) {\n\t          contour.unshift(contour[contour.length - 1]);\n\t        } else {\n\t          var p = {\n\t            flags: 1,\n\t            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n\t            y: (contour[0].y + contour[contour.length - 1].y) / 2\n\t          };\n\t          contour.unshift(p);\n\t          contour.push(p);\n\t        }\n\t        moveTo(contour[0].x, contour[0].y);\n\t        for (j = 1, jj = contour.length; j < jj; j++) {\n\t          if (contour[j].flags & 1) {\n\t            lineTo(contour[j].x, contour[j].y);\n\t          } else if (contour[j + 1].flags & 1) {\n\t            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n\t            j++;\n\t          } else {\n\t            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n\t          }\n\t        }\n\t        startPoint = endPoint + 1;\n\t      }\n\t    }\n\t  }\n\t  function compileCharString(code, cmds, font) {\n\t    var stack = [];\n\t    var x = 0,\n\t        y = 0;\n\t    var stems = 0;\n\t    function moveTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'moveTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function lineTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'lineTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      cmds.push({\n\t        cmd: 'bezierCurveTo',\n\t        args: [x1, y1, x2, y2, x, y]\n\t      });\n\t    }\n\t    function parse(code) {\n\t      var i = 0;\n\t      while (i < code.length) {\n\t        var stackClean = false;\n\t        var v = code[i++];\n\t        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n\t        switch (v) {\n\t          case 1:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 3:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 4:\n\t            y += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 5:\n\t            while (stack.length > 0) {\n\t              x += stack.shift();\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 6:\n\t            while (stack.length > 0) {\n\t              x += stack.shift();\n\t              lineTo(x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 7:\n\t            while (stack.length > 0) {\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              x += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 8:\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 10:\n\t            n = stack.pop() + font.subrsBias;\n\t            subrCode = font.subrs[n];\n\t            if (subrCode) {\n\t              parse(subrCode);\n\t            }\n\t            break;\n\t          case 11:\n\t            return;\n\t          case 12:\n\t            v = code[i++];\n\t            switch (v) {\n\t              case 34:\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y1 = y + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y, xb, y1, x, y1);\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y1, xb, y, x, y);\n\t                break;\n\t              case 35:\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                stack.pop();\n\t                break;\n\t              case 36:\n\t                xa = x + stack.shift();\n\t                y1 = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y2 = y1 + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y1, xb, y2, x, y2);\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y3 = y2 + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y2, xb, y3, x, y);\n\t                break;\n\t              case 37:\n\t                var x0 = x,\n\t                    y0 = y;\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb;\n\t                y = yb;\n\t                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n\t                  x += stack.shift();\n\t                } else {\n\t                  y += stack.shift();\n\t                }\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                break;\n\t              default:\n\t                throw new _util.FormatError('unknown operator: 12 ' + v);\n\t            }\n\t            break;\n\t          case 14:\n\t            if (stack.length >= 4) {\n\t              var achar = stack.pop();\n\t              var bchar = stack.pop();\n\t              y = stack.pop();\n\t              x = stack.pop();\n\t              cmds.push({ cmd: 'save' });\n\t              cmds.push({\n\t                cmd: 'translate',\n\t                args: [x, y]\n\t              });\n\t              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n\t              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t              cmds.push({ cmd: 'restore' });\n\t              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n\t              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t            }\n\t            return;\n\t          case 18:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 19:\n\t            stems += stack.length >> 1;\n\t            i += stems + 7 >> 3;\n\t            stackClean = true;\n\t            break;\n\t          case 20:\n\t            stems += stack.length >> 1;\n\t            i += stems + 7 >> 3;\n\t            stackClean = true;\n\t            break;\n\t          case 21:\n\t            y += stack.pop();\n\t            x += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 22:\n\t            x += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 23:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 24:\n\t            while (stack.length > 2) {\n\t              xa = x + stack.shift();\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            x += stack.shift();\n\t            y += stack.shift();\n\t            lineTo(x, y);\n\t            break;\n\t          case 25:\n\t            while (stack.length > 6) {\n\t              x += stack.shift();\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            xa = x + stack.shift();\n\t            ya = y + stack.shift();\n\t            xb = xa + stack.shift();\n\t            yb = ya + stack.shift();\n\t            x = xb + stack.shift();\n\t            y = yb + stack.shift();\n\t            bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            break;\n\t          case 26:\n\t            if (stack.length % 2) {\n\t              x += stack.shift();\n\t            }\n\t            while (stack.length > 0) {\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb;\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 27:\n\t            if (stack.length % 2) {\n\t              y += stack.shift();\n\t            }\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb;\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 28:\n\t            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n\t            i += 2;\n\t            break;\n\t          case 29:\n\t            n = stack.pop() + font.gsubrsBias;\n\t            subrCode = font.gsubrs[n];\n\t            if (subrCode) {\n\t              parse(subrCode);\n\t            }\n\t            break;\n\t          case 30:\n\t            while (stack.length > 0) {\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              y = yb + stack.shift();\n\t              x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 31:\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              y = yb + stack.shift();\n\t              x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          default:\n\t            if (v < 32) {\n\t              throw new _util.FormatError('unknown operator: ' + v);\n\t            }\n\t            if (v < 247) {\n\t              stack.push(v - 139);\n\t            } else if (v < 251) {\n\t              stack.push((v - 247) * 256 + code[i++] + 108);\n\t            } else if (v < 255) {\n\t              stack.push(-(v - 251) * 256 - code[i++] - 108);\n\t            } else {\n\t              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n\t              i += 4;\n\t            }\n\t            break;\n\t        }\n\t        if (stackClean) {\n\t          stack.length = 0;\n\t        }\n\t      }\n\t    }\n\t    parse(code);\n\t  }\n\t  var noop = '';\n\t  function CompiledFont(fontMatrix) {\n\t    this.compiledGlyphs = Object.create(null);\n\t    this.compiledCharCodeToGlyphId = Object.create(null);\n\t    this.fontMatrix = fontMatrix;\n\t  }\n\t  CompiledFont.prototype = {\n\t    getPathJs: function getPathJs(unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      var fn = this.compiledGlyphs[cmap.glyphId];\n\t      if (!fn) {\n\t        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n\t        this.compiledGlyphs[cmap.glyphId] = fn;\n\t      }\n\t      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n\t        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n\t      }\n\t      return fn;\n\t    },\n\t    compileGlyph: function compileGlyph(code) {\n\t      if (!code || code.length === 0 || code[0] === 14) {\n\t        return noop;\n\t      }\n\t      var cmds = [];\n\t      cmds.push({ cmd: 'save' });\n\t      cmds.push({\n\t        cmd: 'transform',\n\t        args: this.fontMatrix.slice()\n\t      });\n\t      cmds.push({\n\t        cmd: 'scale',\n\t        args: ['size', '-size']\n\t      });\n\t      this.compileGlyphImpl(code, cmds);\n\t      cmds.push({ cmd: 'restore' });\n\t      return cmds;\n\t    },\n\t    compileGlyphImpl: function compileGlyphImpl() {\n\t      (0, _util.unreachable)('Children classes should implement this.');\n\t    },\n\t    hasBuiltPath: function hasBuiltPath(unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n\t    }\n\t  };\n\t  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n\t    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n\t    CompiledFont.call(this, fontMatrix);\n\t    this.glyphs = glyphs;\n\t    this.cmap = cmap;\n\t  }\n\t  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n\t    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n\t      compileGlyf(code, cmds, this);\n\t    }\n\t  });\n\t  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n\t    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n\t    CompiledFont.call(this, fontMatrix);\n\t    this.glyphs = cffInfo.glyphs;\n\t    this.gsubrs = cffInfo.gsubrs || [];\n\t    this.subrs = cffInfo.subrs || [];\n\t    this.cmap = cmap;\n\t    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n\t    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n\t    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n\t  }\n\t  _util.Util.inherit(Type2Compiled, CompiledFont, {\n\t    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n\t      compileCharString(code, cmds, this);\n\t    }\n\t  });\n\t  return {\n\t    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n\t      var data = new Uint8Array(font.data);\n\t      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n\t      var numTables = getUshort(data, 4);\n\t      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n\t        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n\t        var offset = getLong(data, p + 8);\n\t        var length = getLong(data, p + 12);\n\t        switch (tag) {\n\t          case 'cmap':\n\t            cmap = parseCmap(data, offset, offset + length);\n\t            break;\n\t          case 'glyf':\n\t            glyf = data.subarray(offset, offset + length);\n\t            break;\n\t          case 'loca':\n\t            loca = data.subarray(offset, offset + length);\n\t            break;\n\t          case 'head':\n\t            unitsPerEm = getUshort(data, offset + 18);\n\t            indexToLocFormat = getUshort(data, offset + 50);\n\t            break;\n\t          case 'CFF ':\n\t            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n\t            break;\n\t        }\n\t      }\n\t      if (glyf) {\n\t        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n\t        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n\t      }\n\t      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n\t    }\n\t  };\n\t}();\n\texports.FontRendererFactory = FontRendererFactory;\n\n/***/ },\n\n/***/ 692:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _cff_parser = __webpack_require__(403);\n\t\n\tvar _glyphlist = __webpack_require__(179);\n\t\n\tvar _encodings = __webpack_require__(98);\n\t\n\tvar _standard_fonts = __webpack_require__(409);\n\t\n\tvar _unicode = __webpack_require__(410);\n\t\n\tvar _font_renderer = __webpack_require__(691);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _type1_parser = __webpack_require__(703);\n\t\n\tvar PRIVATE_USE_OFFSET_START = 0xE000;\n\tvar PRIVATE_USE_OFFSET_END = 0xF8FF;\n\tvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n\tvar PDF_GLYPH_SPACE_UNITS = 1000;\n\tvar SEAC_ANALYSIS_ENABLED = false;\n\tvar FontFlags = {\n\t  FixedPitch: 1,\n\t  Serif: 2,\n\t  Symbolic: 4,\n\t  Script: 8,\n\t  Nonsymbolic: 32,\n\t  Italic: 64,\n\t  AllCap: 65536,\n\t  SmallCap: 131072,\n\t  ForceBold: 262144\n\t};\n\tvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\tfunction adjustWidths(properties) {\n\t  if (!properties.fontMatrix) {\n\t    return;\n\t  }\n\t  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n\t    return;\n\t  }\n\t  var scale = 0.001 / properties.fontMatrix[0];\n\t  var glyphsWidths = properties.widths;\n\t  for (var glyph in glyphsWidths) {\n\t    glyphsWidths[glyph] *= scale;\n\t  }\n\t  properties.defaultWidth *= scale;\n\t}\n\tfunction adjustToUnicode(properties, builtInEncoding) {\n\t  if (properties.hasIncludedToUnicodeMap) {\n\t    return;\n\t  }\n\t  if (properties.hasEncoding) {\n\t    return;\n\t  }\n\t  if (builtInEncoding === properties.defaultEncoding) {\n\t    return;\n\t  }\n\t  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n\t    return;\n\t  }\n\t  var toUnicode = [],\n\t      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t  for (var charCode in builtInEncoding) {\n\t    var glyphName = builtInEncoding[charCode];\n\t    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t    if (unicode !== -1) {\n\t      toUnicode[charCode] = String.fromCharCode(unicode);\n\t    }\n\t  }\n\t  properties.toUnicode.amend(toUnicode);\n\t}\n\tfunction getFontType(type, subtype) {\n\t  switch (type) {\n\t    case 'Type1':\n\t      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n\t    case 'CIDFontType0':\n\t      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n\t    case 'OpenType':\n\t      return _util.FontType.OPENTYPE;\n\t    case 'TrueType':\n\t      return _util.FontType.TRUETYPE;\n\t    case 'CIDFontType2':\n\t      return _util.FontType.CIDFONTTYPE2;\n\t    case 'MMType1':\n\t      return _util.FontType.MMTYPE1;\n\t    case 'Type0':\n\t      return _util.FontType.TYPE0;\n\t    default:\n\t      return _util.FontType.UNKNOWN;\n\t  }\n\t}\n\tfunction recoverGlyphName(name, glyphsUnicodeMap) {\n\t  if (glyphsUnicodeMap[name] !== undefined) {\n\t    return name;\n\t  }\n\t  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n\t  if (unicode !== -1) {\n\t    for (var key in glyphsUnicodeMap) {\n\t      if (glyphsUnicodeMap[key] === unicode) {\n\t        return key;\n\t      }\n\t    }\n\t  }\n\t  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n\t  return name;\n\t}\n\tvar Glyph = function GlyphClosure() {\n\t  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t    this.fontChar = fontChar;\n\t    this.unicode = unicode;\n\t    this.accent = accent;\n\t    this.width = width;\n\t    this.vmetric = vmetric;\n\t    this.operatorListId = operatorListId;\n\t    this.isSpace = isSpace;\n\t    this.isInFont = isInFont;\n\t  }\n\t  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n\t  };\n\t  return Glyph;\n\t}();\n\tvar ToUnicodeMap = function ToUnicodeMapClosure() {\n\t  function ToUnicodeMap() {\n\t    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t\n\t    this._map = cmap;\n\t  }\n\t  ToUnicodeMap.prototype = {\n\t    get length() {\n\t      return this._map.length;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var charCode in this._map) {\n\t        callback(charCode, this._map[charCode].charCodeAt(0));\n\t      }\n\t    },\n\t    has: function has(i) {\n\t      return this._map[i] !== undefined;\n\t    },\n\t    get: function get(i) {\n\t      return this._map[i];\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      var map = this._map;\n\t      if (map.length <= 0x10000) {\n\t        return map.indexOf(value);\n\t      }\n\t      for (var charCode in map) {\n\t        if (map[charCode] === value) {\n\t          return charCode | 0;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t    amend: function amend(map) {\n\t      for (var charCode in map) {\n\t        this._map[charCode] = map[charCode];\n\t      }\n\t    }\n\t  };\n\t  return ToUnicodeMap;\n\t}();\n\tvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n\t  function IdentityToUnicodeMap(firstChar, lastChar) {\n\t    this.firstChar = firstChar;\n\t    this.lastChar = lastChar;\n\t  }\n\t  IdentityToUnicodeMap.prototype = {\n\t    get length() {\n\t      return this.lastChar + 1 - this.firstChar;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n\t        callback(i, i);\n\t      }\n\t    },\n\t    has: function has(i) {\n\t      return this.firstChar <= i && i <= this.lastChar;\n\t    },\n\t    get: function get(i) {\n\t      if (this.firstChar <= i && i <= this.lastChar) {\n\t        return String.fromCharCode(i);\n\t      }\n\t      return undefined;\n\t    },\n\t    charCodeOf: function charCodeOf(v) {\n\t      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n\t    },\n\t    amend: function amend(map) {\n\t      (0, _util.unreachable)('Should not call amend()');\n\t    }\n\t  };\n\t  return IdentityToUnicodeMap;\n\t}();\n\tvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n\t  function writeInt16(dest, offset, num) {\n\t    dest[offset] = num >> 8 & 0xFF;\n\t    dest[offset + 1] = num & 0xFF;\n\t  }\n\t  function writeInt32(dest, offset, num) {\n\t    dest[offset] = num >> 24 & 0xFF;\n\t    dest[offset + 1] = num >> 16 & 0xFF;\n\t    dest[offset + 2] = num >> 8 & 0xFF;\n\t    dest[offset + 3] = num & 0xFF;\n\t  }\n\t  function writeData(dest, offset, data) {\n\t    var i, ii;\n\t    if (data instanceof Uint8Array) {\n\t      dest.set(data, offset);\n\t    } else if (typeof data === 'string') {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t        dest[offset++] = data.charCodeAt(i) & 0xFF;\n\t      }\n\t    } else {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t        dest[offset++] = data[i] & 0xFF;\n\t      }\n\t    }\n\t  }\n\t  function OpenTypeFileBuilder(sfnt) {\n\t    this.sfnt = sfnt;\n\t    this.tables = Object.create(null);\n\t  }\n\t  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n\t    var maxPower2 = 1,\n\t        log2 = 0;\n\t    while ((maxPower2 ^ entriesCount) > maxPower2) {\n\t      maxPower2 <<= 1;\n\t      log2++;\n\t    }\n\t    var searchRange = maxPower2 * entrySize;\n\t    return {\n\t      range: searchRange,\n\t      entry: log2,\n\t      rangeShift: entrySize * entriesCount - searchRange\n\t    };\n\t  };\n\t  var OTF_HEADER_SIZE = 12;\n\t  var OTF_TABLE_ENTRY_SIZE = 16;\n\t  OpenTypeFileBuilder.prototype = {\n\t    toArray: function OpenTypeFileBuilder_toArray() {\n\t      var sfnt = this.sfnt;\n\t      var tables = this.tables;\n\t      var tablesNames = Object.keys(tables);\n\t      tablesNames.sort();\n\t      var numTables = tablesNames.length;\n\t      var i, j, jj, table, tableName;\n\t      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n\t      var tableOffsets = [offset];\n\t      for (i = 0; i < numTables; i++) {\n\t        table = tables[tablesNames[i]];\n\t        var paddedLength = (table.length + 3 & ~3) >>> 0;\n\t        offset += paddedLength;\n\t        tableOffsets.push(offset);\n\t      }\n\t      var file = new Uint8Array(offset);\n\t      for (i = 0; i < numTables; i++) {\n\t        table = tables[tablesNames[i]];\n\t        writeData(file, tableOffsets[i], table);\n\t      }\n\t      if (sfnt === 'true') {\n\t        sfnt = (0, _util.string32)(0x00010000);\n\t      }\n\t      file[0] = sfnt.charCodeAt(0) & 0xFF;\n\t      file[1] = sfnt.charCodeAt(1) & 0xFF;\n\t      file[2] = sfnt.charCodeAt(2) & 0xFF;\n\t      file[3] = sfnt.charCodeAt(3) & 0xFF;\n\t      writeInt16(file, 4, numTables);\n\t      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n\t      writeInt16(file, 6, searchParams.range);\n\t      writeInt16(file, 8, searchParams.entry);\n\t      writeInt16(file, 10, searchParams.rangeShift);\n\t      offset = OTF_HEADER_SIZE;\n\t      for (i = 0; i < numTables; i++) {\n\t        tableName = tablesNames[i];\n\t        file[offset] = tableName.charCodeAt(0) & 0xFF;\n\t        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n\t        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n\t        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n\t        var checksum = 0;\n\t        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n\t          var quad = (0, _util.readUint32)(file, j);\n\t          checksum = checksum + quad >>> 0;\n\t        }\n\t        writeInt32(file, offset + 4, checksum);\n\t        writeInt32(file, offset + 8, tableOffsets[i]);\n\t        writeInt32(file, offset + 12, tables[tableName].length);\n\t        offset += OTF_TABLE_ENTRY_SIZE;\n\t      }\n\t      return file;\n\t    },\n\t    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n\t      if (tag in this.tables) {\n\t        throw new Error('Table ' + tag + ' already exists');\n\t      }\n\t      this.tables[tag] = data;\n\t    }\n\t  };\n\t  return OpenTypeFileBuilder;\n\t}();\n\tvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\n\tvar Font = function FontClosure() {\n\t  function Font(name, file, properties) {\n\t    var charCode;\n\t    this.name = name;\n\t    this.loadedName = properties.loadedName;\n\t    this.isType3Font = properties.isType3Font;\n\t    this.sizes = [];\n\t    this.missingFile = false;\n\t    this.glyphCache = Object.create(null);\n\t    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n\t    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n\t    var type = properties.type;\n\t    var subtype = properties.subtype;\n\t    this.type = type;\n\t    this.subtype = subtype;\n\t    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n\t    this.differences = properties.differences;\n\t    this.widths = properties.widths;\n\t    this.defaultWidth = properties.defaultWidth;\n\t    this.composite = properties.composite;\n\t    this.wideChars = properties.wideChars;\n\t    this.cMap = properties.cMap;\n\t    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n\t    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n\t    this.fontMatrix = properties.fontMatrix;\n\t    this.bbox = properties.bbox;\n\t    this.defaultEncoding = properties.defaultEncoding;\n\t    this.toUnicode = properties.toUnicode;\n\t    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n\t    this.toFontChar = [];\n\t    if (properties.type === 'Type3') {\n\t      for (charCode = 0; charCode < 256; charCode++) {\n\t        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n\t      }\n\t      this.fontType = _util.FontType.TYPE3;\n\t      return;\n\t    }\n\t    this.cidEncoding = properties.cidEncoding;\n\t    this.vertical = properties.vertical;\n\t    if (this.vertical) {\n\t      this.vmetrics = properties.vmetrics;\n\t      this.defaultVMetrics = properties.defaultVMetrics;\n\t    }\n\t    if (!file || file.isEmpty) {\n\t      if (file) {\n\t        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n\t      }\n\t      this.fallbackToSystemFont();\n\t      return;\n\t    }\n\t    if (subtype === 'Type1C') {\n\t      if (type !== 'Type1' && type !== 'MMType1') {\n\t        if (isTrueTypeFile(file)) {\n\t          subtype = 'TrueType';\n\t        } else {\n\t          type = 'Type1';\n\t        }\n\t      } else if (isOpenTypeFile(file)) {\n\t        subtype = 'OpenType';\n\t      }\n\t    }\n\t    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n\t      type = 'CIDFontType0';\n\t    }\n\t    if (type === 'CIDFontType0') {\n\t      if (isType1File(file)) {\n\t        subtype = 'CIDFontType0';\n\t      } else if (isOpenTypeFile(file)) {\n\t        subtype = 'OpenType';\n\t      } else {\n\t        subtype = 'CIDFontType0C';\n\t      }\n\t    }\n\t    if (subtype === 'OpenType' && type !== 'OpenType') {\n\t      type = 'OpenType';\n\t    }\n\t    try {\n\t      var data;\n\t      switch (type) {\n\t        case 'MMType1':\n\t          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n\t        case 'Type1':\n\t        case 'CIDFontType0':\n\t          this.mimetype = 'font/opentype';\n\t          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n\t          adjustWidths(properties);\n\t          data = this.convert(name, cff, properties);\n\t          break;\n\t        case 'OpenType':\n\t        case 'TrueType':\n\t        case 'CIDFontType2':\n\t          this.mimetype = 'font/opentype';\n\t          data = this.checkAndRepair(name, file, properties);\n\t          if (this.isOpenType) {\n\t            adjustWidths(properties);\n\t            type = 'OpenType';\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('Font ' + type + ' is not supported');\n\t      }\n\t    } catch (e) {\n\t      if (!(e instanceof _util.FormatError)) {\n\t        throw e;\n\t      }\n\t      (0, _util.warn)(e);\n\t      this.fallbackToSystemFont();\n\t      return;\n\t    }\n\t    this.data = data;\n\t    this.fontType = getFontType(type, subtype);\n\t    this.fontMatrix = properties.fontMatrix;\n\t    this.widths = properties.widths;\n\t    this.defaultWidth = properties.defaultWidth;\n\t    this.toUnicode = properties.toUnicode;\n\t    this.encoding = properties.baseEncoding;\n\t    this.seacMap = properties.seacMap;\n\t    this.loading = true;\n\t  }\n\t  Font.getFontID = function () {\n\t    var ID = 1;\n\t    return function Font_getFontID() {\n\t      return String(ID++);\n\t    };\n\t  }();\n\t  function int16(b0, b1) {\n\t    return (b0 << 8) + b1;\n\t  }\n\t  function writeSignedInt16(bytes, index, value) {\n\t    bytes[index + 1] = value;\n\t    bytes[index] = value >>> 8;\n\t  }\n\t  function signedInt16(b0, b1) {\n\t    var value = (b0 << 8) + b1;\n\t    return value & 1 << 15 ? value - 0x10000 : value;\n\t  }\n\t  function int32(b0, b1, b2, b3) {\n\t    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t  }\n\t  function string16(value) {\n\t    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t  }\n\t  function safeString16(value) {\n\t    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n\t    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t  }\n\t  function isTrueTypeFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.readUint32)(header, 0) === 0x00010000;\n\t  }\n\t  function isTrueTypeCollectionFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.bytesToString)(header) === 'ttcf';\n\t  }\n\t  function isOpenTypeFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.bytesToString)(header) === 'OTTO';\n\t  }\n\t  function isType1File(file) {\n\t    var header = file.peekBytes(2);\n\t    if (header[0] === 0x25 && header[1] === 0x21) {\n\t      return true;\n\t    }\n\t    if (header[0] === 0x80 && header[1] === 0x01) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n\t    var toFontChar = [],\n\t        unicode;\n\t    for (var i = 0, ii = encoding.length; i < ii; i++) {\n\t      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t        toFontChar[i] = unicode;\n\t      }\n\t    }\n\t    for (var charCode in differences) {\n\t      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t        toFontChar[+charCode] = unicode;\n\t      }\n\t    }\n\t    return toFontChar;\n\t  }\n\t  function isProblematicUnicodeLocation(code) {\n\t    var i = 0,\n\t        j = ProblematicCharRanges.length - 1;\n\t    while (i < j) {\n\t      var c = i + j + 1 >> 1;\n\t      if (code < ProblematicCharRanges[c]) {\n\t        j = c - 1;\n\t      } else {\n\t        i = c;\n\t      }\n\t    }\n\t    return !(i & 1);\n\t  }\n\t  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n\t    var toUnicode = properties.toUnicode;\n\t    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n\t    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n\t    var newMap = Object.create(null);\n\t    var toFontChar = [];\n\t    var usedFontCharCodes = [];\n\t    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n\t    for (var originalCharCode in charCodeToGlyphId) {\n\t      originalCharCode |= 0;\n\t      var glyphId = charCodeToGlyphId[originalCharCode];\n\t      if (missingGlyphs[glyphId]) {\n\t        continue;\n\t      }\n\t      var fontCharCode = originalCharCode;\n\t      var hasUnicodeValue = false;\n\t      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n\t        hasUnicodeValue = true;\n\t        var unicode = toUnicode.get(fontCharCode);\n\t        if (unicode.length === 1) {\n\t          fontCharCode = unicode.charCodeAt(0);\n\t        }\n\t      }\n\t      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n\t        do {\n\t          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n\t            (0, _util.warn)('Ran out of space in font private use area.');\n\t            break;\n\t          }\n\t          fontCharCode = nextAvailableFontCharCode++;\n\t          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n\t            fontCharCode = 0xF020;\n\t            nextAvailableFontCharCode = fontCharCode + 1;\n\t          }\n\t        } while (usedFontCharCodes[fontCharCode] !== undefined);\n\t      }\n\t      newMap[fontCharCode] = glyphId;\n\t      toFontChar[originalCharCode] = fontCharCode;\n\t      usedFontCharCodes[fontCharCode] = true;\n\t    }\n\t    return {\n\t      toFontChar: toFontChar,\n\t      charCodeToGlyphId: newMap,\n\t      nextAvailableFontCharCode: nextAvailableFontCharCode\n\t    };\n\t  }\n\t  function getRanges(glyphs, numGlyphs) {\n\t    var codes = [];\n\t    for (var charCode in glyphs) {\n\t      if (glyphs[charCode] >= numGlyphs) {\n\t        continue;\n\t      }\n\t      codes.push({\n\t        fontCharCode: charCode | 0,\n\t        glyphId: glyphs[charCode]\n\t      });\n\t    }\n\t    if (codes.length === 0) {\n\t      codes.push({\n\t        fontCharCode: 0,\n\t        glyphId: 0\n\t      });\n\t    }\n\t    codes.sort(function fontGetRangesSort(a, b) {\n\t      return a.fontCharCode - b.fontCharCode;\n\t    });\n\t    var ranges = [];\n\t    var length = codes.length;\n\t    for (var n = 0; n < length;) {\n\t      var start = codes[n].fontCharCode;\n\t      var codeIndices = [codes[n].glyphId];\n\t      ++n;\n\t      var end = start;\n\t      while (n < length && end + 1 === codes[n].fontCharCode) {\n\t        codeIndices.push(codes[n].glyphId);\n\t        ++end;\n\t        ++n;\n\t        if (end === 0xFFFF) {\n\t          break;\n\t        }\n\t      }\n\t      ranges.push([start, end, codeIndices]);\n\t    }\n\t    return ranges;\n\t  }\n\t  function createCmapTable(glyphs, numGlyphs) {\n\t    var ranges = getRanges(glyphs, numGlyphs);\n\t    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n\t    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n\t    var i, ii, j, jj;\n\t    for (i = ranges.length - 1; i >= 0; --i) {\n\t      if (ranges[i][0] <= 0xFFFF) {\n\t        break;\n\t      }\n\t    }\n\t    var bmpLength = i + 1;\n\t    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n\t      ranges[i][1] = 0xFFFE;\n\t    }\n\t    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n\t    var segCount = bmpLength + trailingRangesCount;\n\t    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n\t    var startCount = '';\n\t    var endCount = '';\n\t    var idDeltas = '';\n\t    var idRangeOffsets = '';\n\t    var glyphsIds = '';\n\t    var bias = 0;\n\t    var range, start, end, codes;\n\t    for (i = 0, ii = bmpLength; i < ii; i++) {\n\t      range = ranges[i];\n\t      start = range[0];\n\t      end = range[1];\n\t      startCount += string16(start);\n\t      endCount += string16(end);\n\t      codes = range[2];\n\t      var contiguous = true;\n\t      for (j = 1, jj = codes.length; j < jj; ++j) {\n\t        if (codes[j] !== codes[j - 1] + 1) {\n\t          contiguous = false;\n\t          break;\n\t        }\n\t      }\n\t      if (!contiguous) {\n\t        var offset = (segCount - i) * 2 + bias * 2;\n\t        bias += end - start + 1;\n\t        idDeltas += string16(0);\n\t        idRangeOffsets += string16(offset);\n\t        for (j = 0, jj = codes.length; j < jj; ++j) {\n\t          glyphsIds += string16(codes[j]);\n\t        }\n\t      } else {\n\t        var startCode = codes[0];\n\t        idDeltas += string16(startCode - start & 0xFFFF);\n\t        idRangeOffsets += string16(0);\n\t      }\n\t    }\n\t    if (trailingRangesCount > 0) {\n\t      endCount += '\\xFF\\xFF';\n\t      startCount += '\\xFF\\xFF';\n\t      idDeltas += '\\x00\\x01';\n\t      idRangeOffsets += '\\x00\\x00';\n\t    }\n\t    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n\t    var format31012 = '';\n\t    var header31012 = '';\n\t    if (numTables > 1) {\n\t      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n\t      format31012 = '';\n\t      for (i = 0, ii = ranges.length; i < ii; i++) {\n\t        range = ranges[i];\n\t        start = range[0];\n\t        codes = range[2];\n\t        var code = codes[0];\n\t        for (j = 1, jj = codes.length; j < jj; ++j) {\n\t          if (codes[j] !== codes[j - 1] + 1) {\n\t            end = range[0] + j - 1;\n\t            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n\t            start = end + 1;\n\t            code = codes[j];\n\t          }\n\t        }\n\t        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n\t      }\n\t      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n\t    }\n\t    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n\t  }\n\t  function validateOS2Table(os2) {\n\t    var stream = new _stream.Stream(os2.data);\n\t    var version = stream.getUint16();\n\t    stream.getBytes(60);\n\t    var selection = stream.getUint16();\n\t    if (version < 4 && selection & 0x0300) {\n\t      return false;\n\t    }\n\t    var firstChar = stream.getUint16();\n\t    var lastChar = stream.getUint16();\n\t    if (firstChar > lastChar) {\n\t      return false;\n\t    }\n\t    stream.getBytes(6);\n\t    var usWinAscent = stream.getUint16();\n\t    if (usWinAscent === 0) {\n\t      return false;\n\t    }\n\t    os2.data[8] = os2.data[9] = 0;\n\t    return true;\n\t  }\n\t  function createOS2Table(properties, charstrings, override) {\n\t    override = override || {\n\t      unitsPerEm: 0,\n\t      yMax: 0,\n\t      yMin: 0,\n\t      ascent: 0,\n\t      descent: 0\n\t    };\n\t    var ulUnicodeRange1 = 0;\n\t    var ulUnicodeRange2 = 0;\n\t    var ulUnicodeRange3 = 0;\n\t    var ulUnicodeRange4 = 0;\n\t    var firstCharIndex = null;\n\t    var lastCharIndex = 0;\n\t    if (charstrings) {\n\t      for (var code in charstrings) {\n\t        code |= 0;\n\t        if (firstCharIndex > code || !firstCharIndex) {\n\t          firstCharIndex = code;\n\t        }\n\t        if (lastCharIndex < code) {\n\t          lastCharIndex = code;\n\t        }\n\t        var position = (0, _unicode.getUnicodeRangeFor)(code);\n\t        if (position < 32) {\n\t          ulUnicodeRange1 |= 1 << position;\n\t        } else if (position < 64) {\n\t          ulUnicodeRange2 |= 1 << position - 32;\n\t        } else if (position < 96) {\n\t          ulUnicodeRange3 |= 1 << position - 64;\n\t        } else if (position < 123) {\n\t          ulUnicodeRange4 |= 1 << position - 96;\n\t        } else {\n\t          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n\t        }\n\t      }\n\t    } else {\n\t      firstCharIndex = 0;\n\t      lastCharIndex = 255;\n\t    }\n\t    var bbox = properties.bbox || [0, 0, 0, 0];\n\t    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n\t    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n\t    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n\t    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n\t    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n\t      typoDescent = -typoDescent;\n\t    }\n\t    var winAscent = override.yMax || typoAscent;\n\t    var winDescent = -override.yMin || -typoDescent;\n\t    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n\t  }\n\t  function createPostTable(properties) {\n\t    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n\t    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n\t  }\n\t  function createNameTable(name, proto) {\n\t    if (!proto) {\n\t      proto = [[], []];\n\t    }\n\t    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n\t    var stringsUnicode = [];\n\t    var i, ii, j, jj, str;\n\t    for (i = 0, ii = strings.length; i < ii; i++) {\n\t      str = proto[1][i] || strings[i];\n\t      var strBufUnicode = [];\n\t      for (j = 0, jj = str.length; j < jj; j++) {\n\t        strBufUnicode.push(string16(str.charCodeAt(j)));\n\t      }\n\t      stringsUnicode.push(strBufUnicode.join(''));\n\t    }\n\t    var names = [strings, stringsUnicode];\n\t    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n\t    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n\t    var languages = ['\\x00\\x00', '\\x04\\x09'];\n\t    var namesRecordCount = strings.length * platforms.length;\n\t    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n\t    var strOffset = 0;\n\t    for (i = 0, ii = platforms.length; i < ii; i++) {\n\t      var strs = names[i];\n\t      for (j = 0, jj = strs.length; j < jj; j++) {\n\t        str = strs[j];\n\t        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n\t        nameTable += nameRecord;\n\t        strOffset += str.length;\n\t      }\n\t    }\n\t    nameTable += strings.join('') + stringsUnicode.join('');\n\t    return nameTable;\n\t  }\n\t  Font.prototype = {\n\t    name: null,\n\t    font: null,\n\t    mimetype: null,\n\t    encoding: null,\n\t    get renderer() {\n\t      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n\t      return (0, _util.shadow)(this, 'renderer', renderer);\n\t    },\n\t    exportData: function Font_exportData() {\n\t      var data = {};\n\t      for (var i in this) {\n\t        if (this.hasOwnProperty(i)) {\n\t          data[i] = this[i];\n\t        }\n\t      }\n\t      return data;\n\t    },\n\t    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n\t      var _this = this;\n\t\n\t      this.missingFile = true;\n\t      var charCode, unicode;\n\t      var name = this.name;\n\t      var type = this.type;\n\t      var subtype = this.subtype;\n\t      var fontName = name.replace(/[,_]/g, '-');\n\t      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n\t          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n\t      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n\t      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n\t      this.bold = fontName.search(/bold/gi) !== -1;\n\t      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n\t      this.black = name.search(/Black/g) !== -1;\n\t      this.remeasure = Object.keys(this.widths).length > 0;\n\t      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n\t        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n\t        var map = [];\n\t        for (charCode in GlyphMapForStandardFonts) {\n\t          map[+charCode] = GlyphMapForStandardFonts[charCode];\n\t        }\n\t        if (/Arial-?Black/i.test(name)) {\n\t          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n\t          for (charCode in SupplementalGlyphMapForArialBlack) {\n\t            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n\t          }\n\t        } else if (/Calibri/i.test(name)) {\n\t          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n\t          for (charCode in SupplementalGlyphMapForCalibri) {\n\t            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n\t          }\n\t        }\n\t        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n\t        if (!isIdentityUnicode) {\n\t          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t            map[+charCode] = unicodeCharCode;\n\t          });\n\t        }\n\t        this.toFontChar = map;\n\t        this.toUnicode = new ToUnicodeMap(map);\n\t      } else if (/Symbol/i.test(fontName)) {\n\t        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n\t      } else if (/Dingbats/i.test(fontName)) {\n\t        if (/Wingdings/i.test(name)) {\n\t          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n\t        }\n\t        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n\t      } else if (isStandardFont) {\n\t        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n\t      } else {\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t          if (!_this.composite) {\n\t            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n\t            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t            if (unicode !== -1) {\n\t              unicodeCharCode = unicode;\n\t            }\n\t          }\n\t          _this.toFontChar[charCode] = unicodeCharCode;\n\t        });\n\t      }\n\t      this.loadedName = fontName.split('-')[0];\n\t      this.loading = false;\n\t      this.fontType = getFontType(type, subtype);\n\t    },\n\t    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n\t      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n\t      function readTables(file, numTables) {\n\t        var tables = Object.create(null);\n\t        tables['OS/2'] = null;\n\t        tables['cmap'] = null;\n\t        tables['head'] = null;\n\t        tables['hhea'] = null;\n\t        tables['hmtx'] = null;\n\t        tables['maxp'] = null;\n\t        tables['name'] = null;\n\t        tables['post'] = null;\n\t        for (var i = 0; i < numTables; i++) {\n\t          var table = readTableEntry(font);\n\t          if (VALID_TABLES.indexOf(table.tag) < 0) {\n\t            continue;\n\t          }\n\t          if (table.length === 0) {\n\t            continue;\n\t          }\n\t          tables[table.tag] = table;\n\t        }\n\t        return tables;\n\t      }\n\t      function readTableEntry(file) {\n\t        var tag = (0, _util.bytesToString)(file.getBytes(4));\n\t        var checksum = file.getInt32() >>> 0;\n\t        var offset = file.getInt32() >>> 0;\n\t        var length = file.getInt32() >>> 0;\n\t        var previousPosition = file.pos;\n\t        file.pos = file.start ? file.start : 0;\n\t        file.skip(offset);\n\t        var data = file.getBytes(length);\n\t        file.pos = previousPosition;\n\t        if (tag === 'head') {\n\t          data[8] = data[9] = data[10] = data[11] = 0;\n\t          data[17] |= 0x20;\n\t        }\n\t        return {\n\t          tag: tag,\n\t          checksum: checksum,\n\t          length: length,\n\t          offset: offset,\n\t          data: data\n\t        };\n\t      }\n\t      function readOpenTypeHeader(ttf) {\n\t        return {\n\t          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n\t          numTables: ttf.getUint16(),\n\t          searchRange: ttf.getUint16(),\n\t          entrySelector: ttf.getUint16(),\n\t          rangeShift: ttf.getUint16()\n\t        };\n\t      }\n\t      function readTrueTypeCollectionHeader(ttc) {\n\t        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n\t        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n\t        var majorVersion = ttc.getUint16();\n\t        var minorVersion = ttc.getUint16();\n\t        var numFonts = ttc.getInt32() >>> 0;\n\t        var offsetTable = [];\n\t        for (var i = 0; i < numFonts; i++) {\n\t          offsetTable.push(ttc.getInt32() >>> 0);\n\t        }\n\t        var header = {\n\t          ttcTag: ttcTag,\n\t          majorVersion: majorVersion,\n\t          minorVersion: minorVersion,\n\t          numFonts: numFonts,\n\t          offsetTable: offsetTable\n\t        };\n\t        switch (majorVersion) {\n\t          case 1:\n\t            return header;\n\t          case 2:\n\t            header.dsigTag = ttc.getInt32() >>> 0;\n\t            header.dsigLength = ttc.getInt32() >>> 0;\n\t            header.dsigOffset = ttc.getInt32() >>> 0;\n\t            return header;\n\t        }\n\t        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n\t      }\n\t      function readTrueTypeCollectionData(ttc, fontName) {\n\t        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n\t            numFonts = _readTrueTypeCollecti.numFonts,\n\t            offsetTable = _readTrueTypeCollecti.offsetTable;\n\t\n\t        for (var i = 0; i < numFonts; i++) {\n\t          ttc.pos = (ttc.start || 0) + offsetTable[i];\n\t          var potentialHeader = readOpenTypeHeader(ttc);\n\t          var potentialTables = readTables(ttc, potentialHeader.numTables);\n\t          if (!potentialTables['name']) {\n\t            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n\t          }\n\t          var nameTable = readNameTable(potentialTables['name']);\n\t          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n\t            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n\t              var nameEntry = nameTable[j][k];\n\t              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n\t                return {\n\t                  header: potentialHeader,\n\t                  tables: potentialTables\n\t                };\n\t              }\n\t            }\n\t          }\n\t        }\n\t        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n\t      }\n\t      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n\t        if (!cmap) {\n\t          (0, _util.warn)('No cmap table available.');\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        var segment;\n\t        var start = (font.start ? font.start : 0) + cmap.offset;\n\t        font.pos = start;\n\t        font.getUint16();\n\t        var numTables = font.getUint16();\n\t        var potentialTable;\n\t        var canBreak = false;\n\t        for (var i = 0; i < numTables; i++) {\n\t          var platformId = font.getUint16();\n\t          var encodingId = font.getUint16();\n\t          var offset = font.getInt32() >>> 0;\n\t          var useTable = false;\n\t          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n\t            continue;\n\t          }\n\t          if (platformId === 0 && encodingId === 0) {\n\t            useTable = true;\n\t          } else if (platformId === 1 && encodingId === 0) {\n\t            useTable = true;\n\t          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n\t            useTable = true;\n\t            if (!isSymbolicFont) {\n\t              canBreak = true;\n\t            }\n\t          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n\t            useTable = true;\n\t            canBreak = true;\n\t          }\n\t          if (useTable) {\n\t            potentialTable = {\n\t              platformId: platformId,\n\t              encodingId: encodingId,\n\t              offset: offset\n\t            };\n\t          }\n\t          if (canBreak) {\n\t            break;\n\t          }\n\t        }\n\t        if (potentialTable) {\n\t          font.pos = start + potentialTable.offset;\n\t        }\n\t        if (!potentialTable || font.peekByte() === -1) {\n\t          (0, _util.warn)('Could not find a preferred cmap table.');\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        var format = font.getUint16();\n\t        font.getUint16();\n\t        font.getUint16();\n\t        var hasShortCmap = false;\n\t        var mappings = [];\n\t        var j, glyphId;\n\t        if (format === 0) {\n\t          for (j = 0; j < 256; j++) {\n\t            var index = font.getByte();\n\t            if (!index) {\n\t              continue;\n\t            }\n\t            mappings.push({\n\t              charCode: j,\n\t              glyphId: index\n\t            });\n\t          }\n\t          hasShortCmap = true;\n\t        } else if (format === 4) {\n\t          var segCount = font.getUint16() >> 1;\n\t          font.getBytes(6);\n\t          var segIndex,\n\t              segments = [];\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments.push({ end: font.getUint16() });\n\t          }\n\t          font.getUint16();\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments[segIndex].start = font.getUint16();\n\t          }\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments[segIndex].delta = font.getUint16();\n\t          }\n\t          var offsetsCount = 0;\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segment = segments[segIndex];\n\t            var rangeOffset = font.getUint16();\n\t            if (!rangeOffset) {\n\t              segment.offsetIndex = -1;\n\t              continue;\n\t            }\n\t            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n\t            segment.offsetIndex = offsetIndex;\n\t            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n\t          }\n\t          var offsets = [];\n\t          for (j = 0; j < offsetsCount; j++) {\n\t            offsets.push(font.getUint16());\n\t          }\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segment = segments[segIndex];\n\t            start = segment.start;\n\t            var end = segment.end;\n\t            var delta = segment.delta;\n\t            offsetIndex = segment.offsetIndex;\n\t            for (j = start; j <= end; j++) {\n\t              if (j === 0xFFFF) {\n\t                continue;\n\t              }\n\t              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n\t              glyphId = glyphId + delta & 0xFFFF;\n\t              mappings.push({\n\t                charCode: j,\n\t                glyphId: glyphId\n\t              });\n\t            }\n\t          }\n\t        } else if (format === 6) {\n\t          var firstCode = font.getUint16();\n\t          var entryCount = font.getUint16();\n\t          for (j = 0; j < entryCount; j++) {\n\t            glyphId = font.getUint16();\n\t            var charCode = firstCode + j;\n\t            mappings.push({\n\t              charCode: charCode,\n\t              glyphId: glyphId\n\t            });\n\t          }\n\t        } else {\n\t          (0, _util.warn)('cmap table has unsupported format: ' + format);\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        mappings.sort(function (a, b) {\n\t          return a.charCode - b.charCode;\n\t        });\n\t        for (i = 1; i < mappings.length; i++) {\n\t          if (mappings[i - 1].charCode === mappings[i].charCode) {\n\t            mappings.splice(i, 1);\n\t            i--;\n\t          }\n\t        }\n\t        return {\n\t          platformId: potentialTable.platformId,\n\t          encodingId: potentialTable.encodingId,\n\t          mappings: mappings,\n\t          hasShortCmap: hasShortCmap\n\t        };\n\t      }\n\t      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n\t        if (!header) {\n\t          if (metrics) {\n\t            metrics.data = null;\n\t          }\n\t          return;\n\t        }\n\t        font.pos = (font.start ? font.start : 0) + header.offset;\n\t        font.pos += header.length - 2;\n\t        var numOfMetrics = font.getUint16();\n\t        if (numOfMetrics > numGlyphs) {\n\t          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n\t          numOfMetrics = numGlyphs;\n\t          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n\t          header.data[35] = numOfMetrics & 0x00ff;\n\t        }\n\t        var numOfSidebearings = numGlyphs - numOfMetrics;\n\t        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n\t        if (numMissing > 0) {\n\t          var entries = new Uint8Array(metrics.length + numMissing * 2);\n\t          entries.set(metrics.data);\n\t          metrics.data = entries;\n\t        }\n\t      }\n\t      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n\t        var glyphProfile = {\n\t          length: 0,\n\t          sizeOfInstructions: 0\n\t        };\n\t        if (sourceEnd - sourceStart <= 12) {\n\t          return glyphProfile;\n\t        }\n\t        var glyf = source.subarray(sourceStart, sourceEnd);\n\t        var contoursCount = signedInt16(glyf[0], glyf[1]);\n\t        if (contoursCount < 0) {\n\t          contoursCount = -1;\n\t          writeSignedInt16(glyf, 0, contoursCount);\n\t          dest.set(glyf, destStart);\n\t          glyphProfile.length = glyf.length;\n\t          return glyphProfile;\n\t        }\n\t        var i,\n\t            j = 10,\n\t            flagsCount = 0;\n\t        for (i = 0; i < contoursCount; i++) {\n\t          var endPoint = glyf[j] << 8 | glyf[j + 1];\n\t          flagsCount = endPoint + 1;\n\t          j += 2;\n\t        }\n\t        var instructionsStart = j;\n\t        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n\t        glyphProfile.sizeOfInstructions = instructionsLength;\n\t        j += 2 + instructionsLength;\n\t        var instructionsEnd = j;\n\t        var coordinatesLength = 0;\n\t        for (i = 0; i < flagsCount; i++) {\n\t          var flag = glyf[j++];\n\t          if (flag & 0xC0) {\n\t            glyf[j - 1] = flag & 0x3F;\n\t          }\n\t          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n\t          coordinatesLength += xyLength;\n\t          if (flag & 8) {\n\t            var repeat = glyf[j++];\n\t            i += repeat;\n\t            coordinatesLength += repeat * xyLength;\n\t          }\n\t        }\n\t        if (coordinatesLength === 0) {\n\t          return glyphProfile;\n\t        }\n\t        var glyphDataLength = j + coordinatesLength;\n\t        if (glyphDataLength > glyf.length) {\n\t          return glyphProfile;\n\t        }\n\t        if (!hintsValid && instructionsLength > 0) {\n\t          dest.set(glyf.subarray(0, instructionsStart), destStart);\n\t          dest.set([0, 0], destStart + instructionsStart);\n\t          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n\t          glyphDataLength -= instructionsLength;\n\t          if (glyf.length - glyphDataLength > 3) {\n\t            glyphDataLength = glyphDataLength + 3 & ~3;\n\t          }\n\t          glyphProfile.length = glyphDataLength;\n\t          return glyphProfile;\n\t        }\n\t        if (glyf.length - glyphDataLength > 3) {\n\t          glyphDataLength = glyphDataLength + 3 & ~3;\n\t          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n\t          glyphProfile.length = glyphDataLength;\n\t          return glyphProfile;\n\t        }\n\t        dest.set(glyf, destStart);\n\t        glyphProfile.length = glyf.length;\n\t        return glyphProfile;\n\t      }\n\t      function sanitizeHead(head, numGlyphs, locaLength) {\n\t        var data = head.data;\n\t        var version = int32(data[0], data[1], data[2], data[3]);\n\t        if (version >> 16 !== 1) {\n\t          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n\t          data[0] = 0;\n\t          data[1] = 1;\n\t          data[2] = 0;\n\t          data[3] = 0;\n\t        }\n\t        var indexToLocFormat = int16(data[50], data[51]);\n\t        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n\t          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n\t          var numGlyphsPlusOne = numGlyphs + 1;\n\t          if (locaLength === numGlyphsPlusOne << 1) {\n\t            data[50] = 0;\n\t            data[51] = 0;\n\t          } else if (locaLength === numGlyphsPlusOne << 2) {\n\t            data[50] = 0;\n\t            data[51] = 1;\n\t          } else {\n\t            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n\t          }\n\t        }\n\t      }\n\t      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n\t        var itemSize, itemDecode, itemEncode;\n\t        if (isGlyphLocationsLong) {\n\t          itemSize = 4;\n\t          itemDecode = function fontItemDecodeLong(data, offset) {\n\t            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t          };\n\t          itemEncode = function fontItemEncodeLong(data, offset, value) {\n\t            data[offset] = value >>> 24 & 0xFF;\n\t            data[offset + 1] = value >> 16 & 0xFF;\n\t            data[offset + 2] = value >> 8 & 0xFF;\n\t            data[offset + 3] = value & 0xFF;\n\t          };\n\t        } else {\n\t          itemSize = 2;\n\t          itemDecode = function fontItemDecode(data, offset) {\n\t            return data[offset] << 9 | data[offset + 1] << 1;\n\t          };\n\t          itemEncode = function fontItemEncode(data, offset, value) {\n\t            data[offset] = value >> 9 & 0xFF;\n\t            data[offset + 1] = value >> 1 & 0xFF;\n\t          };\n\t        }\n\t        var locaData = loca.data;\n\t        var locaDataSize = itemSize * (1 + numGlyphs);\n\t        if (locaData.length !== locaDataSize) {\n\t          locaData = new Uint8Array(locaDataSize);\n\t          locaData.set(loca.data.subarray(0, locaDataSize));\n\t          loca.data = locaData;\n\t        }\n\t        var oldGlyfData = glyf.data;\n\t        var oldGlyfDataLength = oldGlyfData.length;\n\t        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n\t        var startOffset = itemDecode(locaData, 0);\n\t        var writeOffset = 0;\n\t        var missingGlyphs = Object.create(null);\n\t        itemEncode(locaData, 0, writeOffset);\n\t        var i, j;\n\t        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n\t        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n\t          var endOffset = itemDecode(locaData, j);\n\t          if (endOffset === 0) {\n\t            endOffset = startOffset;\n\t          }\n\t          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n\t            endOffset = oldGlyfDataLength;\n\t          }\n\t          if (endOffset > oldGlyfDataLength) {\n\t            startOffset = endOffset;\n\t          }\n\t          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n\t          var newLength = glyphProfile.length;\n\t          if (newLength === 0) {\n\t            missingGlyphs[i] = true;\n\t          }\n\t          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n\t            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n\t          }\n\t          writeOffset += newLength;\n\t          itemEncode(locaData, j, writeOffset);\n\t          startOffset = endOffset;\n\t        }\n\t        if (writeOffset === 0) {\n\t          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n\t          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t            itemEncode(locaData, j, simpleGlyph.length);\n\t          }\n\t          glyf.data = simpleGlyph;\n\t        } else if (dupFirstEntry) {\n\t          var firstEntryLength = itemDecode(locaData, itemSize);\n\t          if (newGlyfData.length > firstEntryLength + writeOffset) {\n\t            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n\t          } else {\n\t            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n\t            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n\t          }\n\t          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n\t          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n\t        } else {\n\t          glyf.data = newGlyfData.subarray(0, writeOffset);\n\t        }\n\t        return {\n\t          missingGlyphs: missingGlyphs,\n\t          maxSizeOfInstructions: maxSizeOfInstructions\n\t        };\n\t      }\n\t      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n\t        var start = (font.start ? font.start : 0) + post.offset;\n\t        font.pos = start;\n\t        var length = post.length,\n\t            end = start + length;\n\t        var version = font.getInt32();\n\t        font.getBytes(28);\n\t        var glyphNames;\n\t        var valid = true;\n\t        var i;\n\t        switch (version) {\n\t          case 0x00010000:\n\t            glyphNames = MacStandardGlyphOrdering;\n\t            break;\n\t          case 0x00020000:\n\t            var numGlyphs = font.getUint16();\n\t            if (numGlyphs !== maxpNumGlyphs) {\n\t              valid = false;\n\t              break;\n\t            }\n\t            var glyphNameIndexes = [];\n\t            for (i = 0; i < numGlyphs; ++i) {\n\t              var index = font.getUint16();\n\t              if (index >= 32768) {\n\t                valid = false;\n\t                break;\n\t              }\n\t              glyphNameIndexes.push(index);\n\t            }\n\t            if (!valid) {\n\t              break;\n\t            }\n\t            var customNames = [];\n\t            var strBuf = [];\n\t            while (font.pos < end) {\n\t              var stringLength = font.getByte();\n\t              strBuf.length = stringLength;\n\t              for (i = 0; i < stringLength; ++i) {\n\t                strBuf[i] = String.fromCharCode(font.getByte());\n\t              }\n\t              customNames.push(strBuf.join(''));\n\t            }\n\t            glyphNames = [];\n\t            for (i = 0; i < numGlyphs; ++i) {\n\t              var j = glyphNameIndexes[i];\n\t              if (j < 258) {\n\t                glyphNames.push(MacStandardGlyphOrdering[j]);\n\t                continue;\n\t              }\n\t              glyphNames.push(customNames[j - 258]);\n\t            }\n\t            break;\n\t          case 0x00030000:\n\t            break;\n\t          default:\n\t            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n\t            valid = false;\n\t            if (properties.defaultEncoding) {\n\t              glyphNames = properties.defaultEncoding;\n\t            }\n\t            break;\n\t        }\n\t        properties.glyphNames = glyphNames;\n\t        return valid;\n\t      }\n\t      function readNameTable(nameTable) {\n\t        var start = (font.start ? font.start : 0) + nameTable.offset;\n\t        font.pos = start;\n\t        var names = [[], []];\n\t        var length = nameTable.length,\n\t            end = start + length;\n\t        var format = font.getUint16();\n\t        var FORMAT_0_HEADER_LENGTH = 6;\n\t        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n\t          return names;\n\t        }\n\t        var numRecords = font.getUint16();\n\t        var stringsStart = font.getUint16();\n\t        var records = [];\n\t        var NAME_RECORD_LENGTH = 12;\n\t        var i, ii;\n\t        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n\t          var r = {\n\t            platform: font.getUint16(),\n\t            encoding: font.getUint16(),\n\t            language: font.getUint16(),\n\t            name: font.getUint16(),\n\t            length: font.getUint16(),\n\t            offset: font.getUint16()\n\t          };\n\t          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n\t            records.push(r);\n\t          }\n\t        }\n\t        for (i = 0, ii = records.length; i < ii; i++) {\n\t          var record = records[i];\n\t          if (record.length <= 0) {\n\t            continue;\n\t          }\n\t          var pos = start + stringsStart + record.offset;\n\t          if (pos + record.length > end) {\n\t            continue;\n\t          }\n\t          font.pos = pos;\n\t          var nameIndex = record.name;\n\t          if (record.encoding) {\n\t            var str = '';\n\t            for (var j = 0, jj = record.length; j < jj; j += 2) {\n\t              str += String.fromCharCode(font.getUint16());\n\t            }\n\t            names[1][nameIndex] = str;\n\t          } else {\n\t            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n\t          }\n\t        }\n\t        return names;\n\t      }\n\t      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n\t      function sanitizeTTProgram(table, ttContext) {\n\t        var data = table.data;\n\t        var i = 0,\n\t            j,\n\t            n,\n\t            b,\n\t            funcId,\n\t            pc,\n\t            lastEndf = 0,\n\t            lastDeff = 0;\n\t        var stack = [];\n\t        var callstack = [];\n\t        var functionsCalled = [];\n\t        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n\t        var inFDEF = false,\n\t            ifLevel = 0,\n\t            inELSE = 0;\n\t        for (var ii = data.length; i < ii;) {\n\t          var op = data[i++];\n\t          if (op === 0x40) {\n\t            n = data[i++];\n\t            if (inFDEF || inELSE) {\n\t              i += n;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                stack.push(data[i++]);\n\t              }\n\t            }\n\t          } else if (op === 0x41) {\n\t            n = data[i++];\n\t            if (inFDEF || inELSE) {\n\t              i += n * 2;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                b = data[i++];\n\t                stack.push(b << 8 | data[i++]);\n\t              }\n\t            }\n\t          } else if ((op & 0xF8) === 0xB0) {\n\t            n = op - 0xB0 + 1;\n\t            if (inFDEF || inELSE) {\n\t              i += n;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                stack.push(data[i++]);\n\t              }\n\t            }\n\t          } else if ((op & 0xF8) === 0xB8) {\n\t            n = op - 0xB8 + 1;\n\t            if (inFDEF || inELSE) {\n\t              i += n * 2;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                b = data[i++];\n\t                stack.push(b << 8 | data[i++]);\n\t              }\n\t            }\n\t          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n\t            if (!inFDEF && !inELSE) {\n\t              funcId = stack[stack.length - 1];\n\t              ttContext.functionsUsed[funcId] = true;\n\t              if (funcId in ttContext.functionsStackDeltas) {\n\t                stack.length += ttContext.functionsStackDeltas[funcId];\n\t              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n\t                callstack.push({\n\t                  data: data,\n\t                  i: i,\n\t                  stackTop: stack.length - 1\n\t                });\n\t                functionsCalled.push(funcId);\n\t                pc = ttContext.functionsDefined[funcId];\n\t                if (!pc) {\n\t                  (0, _util.warn)('TT: CALL non-existent function');\n\t                  ttContext.hintsValid = false;\n\t                  return;\n\t                }\n\t                data = pc.data;\n\t                i = pc.i;\n\t              }\n\t            }\n\t          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n\t            if (inFDEF || inELSE) {\n\t              (0, _util.warn)('TT: nested FDEFs not allowed');\n\t              tooComplexToFollowFunctions = true;\n\t            }\n\t            inFDEF = true;\n\t            lastDeff = i;\n\t            funcId = stack.pop();\n\t            ttContext.functionsDefined[funcId] = {\n\t              data: data,\n\t              i: i\n\t            };\n\t          } else if (op === 0x2D) {\n\t            if (inFDEF) {\n\t              inFDEF = false;\n\t              lastEndf = i;\n\t            } else {\n\t              pc = callstack.pop();\n\t              if (!pc) {\n\t                (0, _util.warn)('TT: ENDF bad stack');\n\t                ttContext.hintsValid = false;\n\t                return;\n\t              }\n\t              funcId = functionsCalled.pop();\n\t              data = pc.data;\n\t              i = pc.i;\n\t              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n\t            }\n\t          } else if (op === 0x89) {\n\t            if (inFDEF || inELSE) {\n\t              (0, _util.warn)('TT: nested IDEFs not allowed');\n\t              tooComplexToFollowFunctions = true;\n\t            }\n\t            inFDEF = true;\n\t            lastDeff = i;\n\t          } else if (op === 0x58) {\n\t            ++ifLevel;\n\t          } else if (op === 0x1B) {\n\t            inELSE = ifLevel;\n\t          } else if (op === 0x59) {\n\t            if (inELSE === ifLevel) {\n\t              inELSE = 0;\n\t            }\n\t            --ifLevel;\n\t          } else if (op === 0x1C) {\n\t            if (!inFDEF && !inELSE) {\n\t              var offset = stack[stack.length - 1];\n\t              if (offset > 0) {\n\t                i += offset - 1;\n\t              }\n\t            }\n\t          }\n\t          if (!inFDEF && !inELSE) {\n\t            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n\t            if (op >= 0x71 && op <= 0x75) {\n\t              n = stack.pop();\n\t              if (!isNaN(n)) {\n\t                stackDelta = -n * 2;\n\t              }\n\t            }\n\t            while (stackDelta < 0 && stack.length > 0) {\n\t              stack.pop();\n\t              stackDelta++;\n\t            }\n\t            while (stackDelta > 0) {\n\t              stack.push(NaN);\n\t              stackDelta--;\n\t            }\n\t          }\n\t        }\n\t        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n\t        var content = [data];\n\t        if (i > data.length) {\n\t          content.push(new Uint8Array(i - data.length));\n\t        }\n\t        if (lastDeff > lastEndf) {\n\t          (0, _util.warn)('TT: complementing a missing function tail');\n\t          content.push(new Uint8Array([0x22, 0x2D]));\n\t        }\n\t        foldTTTable(table, content);\n\t      }\n\t      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n\t        if (ttContext.tooComplexToFollowFunctions) {\n\t          return;\n\t        }\n\t        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n\t          (0, _util.warn)('TT: more functions defined than expected');\n\t          ttContext.hintsValid = false;\n\t          return;\n\t        }\n\t        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n\t          if (j > maxFunctionDefs) {\n\t            (0, _util.warn)('TT: invalid function id: ' + j);\n\t            ttContext.hintsValid = false;\n\t            return;\n\t          }\n\t          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n\t            (0, _util.warn)('TT: undefined function: ' + j);\n\t            ttContext.hintsValid = false;\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      function foldTTTable(table, content) {\n\t        if (content.length > 1) {\n\t          var newLength = 0;\n\t          var j, jj;\n\t          for (j = 0, jj = content.length; j < jj; j++) {\n\t            newLength += content[j].length;\n\t          }\n\t          newLength = newLength + 3 & ~3;\n\t          var result = new Uint8Array(newLength);\n\t          var pos = 0;\n\t          for (j = 0, jj = content.length; j < jj; j++) {\n\t            result.set(content[j], pos);\n\t            pos += content[j].length;\n\t          }\n\t          table.data = result;\n\t          table.length = newLength;\n\t        }\n\t      }\n\t      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n\t        var ttContext = {\n\t          functionsDefined: [],\n\t          functionsUsed: [],\n\t          functionsStackDeltas: [],\n\t          tooComplexToFollowFunctions: false,\n\t          hintsValid: true\n\t        };\n\t        if (fpgm) {\n\t          sanitizeTTProgram(fpgm, ttContext);\n\t        }\n\t        if (prep) {\n\t          sanitizeTTProgram(prep, ttContext);\n\t        }\n\t        if (fpgm) {\n\t          checkInvalidFunctions(ttContext, maxFunctionDefs);\n\t        }\n\t        if (cvt && cvt.length & 1) {\n\t          var cvtData = new Uint8Array(cvt.length + 1);\n\t          cvtData.set(cvt.data);\n\t          cvt.data = cvtData;\n\t        }\n\t        return ttContext.hintsValid;\n\t      }\n\t      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n\t      var header = void 0,\n\t          tables = void 0;\n\t      if (isTrueTypeCollectionFile(font)) {\n\t        var ttcData = readTrueTypeCollectionData(font, this.name);\n\t        header = ttcData.header;\n\t        tables = ttcData.tables;\n\t      } else {\n\t        header = readOpenTypeHeader(font);\n\t        tables = readTables(font, header.numTables);\n\t      }\n\t      var cff = void 0,\n\t          cffFile = void 0;\n\t      var isTrueType = !tables['CFF '];\n\t      if (!isTrueType) {\n\t        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n\t          cffFile = new _stream.Stream(tables['CFF '].data);\n\t          cff = new CFFFont(cffFile, properties);\n\t          adjustWidths(properties);\n\t          return this.convert(name, cff, properties);\n\t        }\n\t        delete tables['glyf'];\n\t        delete tables['loca'];\n\t        delete tables['fpgm'];\n\t        delete tables['prep'];\n\t        delete tables['cvt '];\n\t        this.isOpenType = true;\n\t      } else {\n\t        if (!tables['loca']) {\n\t          throw new _util.FormatError('Required \"loca\" table is not found');\n\t        }\n\t        if (!tables['glyf']) {\n\t          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n\t          tables['glyf'] = {\n\t            tag: 'glyf',\n\t            data: new Uint8Array(0)\n\t          };\n\t        }\n\t        this.isOpenType = false;\n\t      }\n\t      if (!tables['maxp']) {\n\t        throw new _util.FormatError('Required \"maxp\" table is not found');\n\t      }\n\t      font.pos = (font.start || 0) + tables['maxp'].offset;\n\t      var version = font.getInt32();\n\t      var numGlyphs = font.getUint16();\n\t      var maxFunctionDefs = 0;\n\t      var maxSizeOfInstructions = 0;\n\t      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t        font.pos += 8;\n\t        var maxZones = font.getUint16();\n\t        if (maxZones > 2) {\n\t          tables['maxp'].data[14] = 0;\n\t          tables['maxp'].data[15] = 2;\n\t        }\n\t        font.pos += 4;\n\t        maxFunctionDefs = font.getUint16();\n\t        font.pos += 6;\n\t        maxSizeOfInstructions = font.getUint16();\n\t      }\n\t      var dupFirstEntry = false;\n\t      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n\t        dupFirstEntry = true;\n\t        numGlyphs++;\n\t        tables['maxp'].data[4] = numGlyphs >> 8;\n\t        tables['maxp'].data[5] = numGlyphs & 255;\n\t      }\n\t      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n\t      if (!hintsValid) {\n\t        delete tables['fpgm'];\n\t        delete tables['prep'];\n\t        delete tables['cvt '];\n\t      }\n\t      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n\t      if (!tables['head']) {\n\t        throw new _util.FormatError('Required \"head\" table is not found');\n\t      }\n\t      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n\t      var missingGlyphs = Object.create(null);\n\t      if (isTrueType) {\n\t        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n\t        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n\t        missingGlyphs = glyphsInfo.missingGlyphs;\n\t        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n\t          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n\t        }\n\t      }\n\t      if (!tables['hhea']) {\n\t        throw new _util.FormatError('Required \"hhea\" table is not found');\n\t      }\n\t      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n\t        tables['hhea'].data[10] = 0xFF;\n\t        tables['hhea'].data[11] = 0xFF;\n\t      }\n\t      var metricsOverride = {\n\t        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n\t        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n\t        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n\t        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n\t        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n\t      };\n\t      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n\t      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n\t      if (tables['post']) {\n\t        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n\t        if (!valid) {\n\t          tables['post'] = null;\n\t        }\n\t      }\n\t      var charCodeToGlyphId = [],\n\t          charCode;\n\t      function hasGlyph(glyphId) {\n\t        return !missingGlyphs[glyphId];\n\t      }\n\t      if (properties.composite) {\n\t        var cidToGidMap = properties.cidToGidMap || [];\n\t        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n\t        properties.cMap.forEach(function (charCode, cid) {\n\t          if (cid > 0xffff) {\n\t            throw new _util.FormatError('Max size of CID is 65,535');\n\t          }\n\t          var glyphId = -1;\n\t          if (isCidToGidMapEmpty) {\n\t            glyphId = cid;\n\t          } else if (cidToGidMap[cid] !== undefined) {\n\t            glyphId = cidToGidMap[cid];\n\t          }\n\t          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n\t            charCodeToGlyphId[charCode] = glyphId;\n\t          }\n\t        });\n\t        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n\t          charCodeToGlyphId[0] = numGlyphs - 1;\n\t        }\n\t      } else {\n\t        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n\t        var cmapPlatformId = cmapTable.platformId;\n\t        var cmapEncodingId = cmapTable.encodingId;\n\t        var cmapMappings = cmapTable.mappings;\n\t        var cmapMappingsLength = cmapMappings.length;\n\t        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n\t          var baseEncoding = [];\n\t          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n\t            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\t          }\n\t          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t          for (charCode = 0; charCode < 256; charCode++) {\n\t            var glyphName, standardGlyphName;\n\t            if (this.differences && charCode in this.differences) {\n\t              glyphName = this.differences[charCode];\n\t            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n\t              glyphName = baseEncoding[charCode];\n\t            } else {\n\t              glyphName = _encodings.StandardEncoding[charCode];\n\t            }\n\t            if (!glyphName) {\n\t              continue;\n\t            }\n\t            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t            var unicodeOrCharCode;\n\t            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n\t              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n\t            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n\t              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n\t            }\n\t            var found = false;\n\t            for (var i = 0; i < cmapMappingsLength; ++i) {\n\t              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n\t                continue;\n\t              }\n\t              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t              found = true;\n\t              break;\n\t            }\n\t            if (!found && properties.glyphNames) {\n\t              var glyphId = properties.glyphNames.indexOf(glyphName);\n\t              if (glyphId === -1 && standardGlyphName !== glyphName) {\n\t                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n\t              }\n\t              if (glyphId > 0 && hasGlyph(glyphId)) {\n\t                charCodeToGlyphId[charCode] = glyphId;\n\t              }\n\t            }\n\t          }\n\t        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n\t          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n\t            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n\t          }\n\t        } else {\n\t          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n\t            charCode = cmapMappings[_i2].charCode;\n\t            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n\t              charCode &= 0xFF;\n\t            }\n\t            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n\t          }\n\t        }\n\t      }\n\t      if (charCodeToGlyphId.length === 0) {\n\t        charCodeToGlyphId[0] = 0;\n\t      }\n\t      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n\t      this.toFontChar = newMapping.toFontChar;\n\t      tables['cmap'] = {\n\t        tag: 'cmap',\n\t        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n\t      };\n\t      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n\t        tables['OS/2'] = {\n\t          tag: 'OS/2',\n\t          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n\t        };\n\t      }\n\t      if (!tables['post']) {\n\t        tables['post'] = {\n\t          tag: 'post',\n\t          data: createPostTable(properties)\n\t        };\n\t      }\n\t      if (!isTrueType) {\n\t        try {\n\t          cffFile = new _stream.Stream(tables['CFF '].data);\n\t          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n\t          cff = parser.parse();\n\t          var compiler = new _cff_parser.CFFCompiler(cff);\n\t          tables['CFF '].data = compiler.compile();\n\t        } catch (e) {\n\t          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n\t        }\n\t      }\n\t      if (!tables['name']) {\n\t        tables['name'] = {\n\t          tag: 'name',\n\t          data: createNameTable(this.name)\n\t        };\n\t      } else {\n\t        var namePrototype = readNameTable(tables['name']);\n\t        tables['name'].data = createNameTable(name, namePrototype);\n\t      }\n\t      var builder = new OpenTypeFileBuilder(header.version);\n\t      for (var tableTag in tables) {\n\t        builder.addTable(tableTag, tables[tableTag].data);\n\t      }\n\t      return builder.toArray();\n\t    },\n\t    convert: function Font_convert(fontName, font, properties) {\n\t      properties.fixedPitch = false;\n\t      if (properties.builtInEncoding) {\n\t        adjustToUnicode(properties, properties.builtInEncoding);\n\t      }\n\t      var mapping = font.getGlyphMapping(properties);\n\t      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n\t      this.toFontChar = newMapping.toFontChar;\n\t      var numGlyphs = font.numGlyphs;\n\t      function getCharCodes(charCodeToGlyphId, glyphId) {\n\t        var charCodes = null;\n\t        for (var charCode in charCodeToGlyphId) {\n\t          if (glyphId === charCodeToGlyphId[charCode]) {\n\t            if (!charCodes) {\n\t              charCodes = [];\n\t            }\n\t            charCodes.push(charCode | 0);\n\t          }\n\t        }\n\t        return charCodes;\n\t      }\n\t      function createCharCode(charCodeToGlyphId, glyphId) {\n\t        for (var charCode in charCodeToGlyphId) {\n\t          if (glyphId === charCodeToGlyphId[charCode]) {\n\t            return charCode | 0;\n\t          }\n\t        }\n\t        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n\t        return newMapping.nextAvailableFontCharCode++;\n\t      }\n\t      var seacs = font.seacs;\n\t      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n\t        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\t        var charset = font.getCharset();\n\t        var seacMap = Object.create(null);\n\t        for (var glyphId in seacs) {\n\t          glyphId |= 0;\n\t          var seac = seacs[glyphId];\n\t          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n\t          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n\t          var baseGlyphId = charset.indexOf(baseGlyphName);\n\t          var accentGlyphId = charset.indexOf(accentGlyphName);\n\t          if (baseGlyphId < 0 || accentGlyphId < 0) {\n\t            continue;\n\t          }\n\t          var accentOffset = {\n\t            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n\t            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n\t          };\n\t          var charCodes = getCharCodes(mapping, glyphId);\n\t          if (!charCodes) {\n\t            continue;\n\t          }\n\t          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n\t            var charCode = charCodes[i];\n\t            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n\t            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n\t            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n\t            seacMap[charCode] = {\n\t              baseFontCharCode: baseFontCharCode,\n\t              accentFontCharCode: accentFontCharCode,\n\t              accentOffset: accentOffset\n\t            };\n\t          }\n\t        }\n\t        properties.seacMap = seacMap;\n\t      }\n\t      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n\t      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n\t      builder.addTable('CFF ', font.data);\n\t      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n\t      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n\t      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n\t      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n\t      builder.addTable('hmtx', function fontFieldsHmtx() {\n\t        var charstrings = font.charstrings;\n\t        var cffWidths = font.cff ? font.cff.widths : null;\n\t        var hmtx = '\\x00\\x00\\x00\\x00';\n\t        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n\t          var width = 0;\n\t          if (charstrings) {\n\t            var charstring = charstrings[i - 1];\n\t            width = 'width' in charstring ? charstring.width : 0;\n\t          } else if (cffWidths) {\n\t            width = Math.ceil(cffWidths[i] || 0);\n\t          }\n\t          hmtx += string16(width) + string16(0);\n\t        }\n\t        return hmtx;\n\t      }());\n\t      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n\t      builder.addTable('name', createNameTable(fontName));\n\t      builder.addTable('post', createPostTable(properties));\n\t      return builder.toArray();\n\t    },\n\t    get spaceWidth() {\n\t      if ('_shadowWidth' in this) {\n\t        return this._shadowWidth;\n\t      }\n\t      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n\t      var width;\n\t      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n\t        var glyphName = possibleSpaceReplacements[i];\n\t        if (glyphName in this.widths) {\n\t          width = this.widths[glyphName];\n\t          break;\n\t        }\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        var glyphUnicode = glyphsUnicodeMap[glyphName];\n\t        var charcode = 0;\n\t        if (this.composite) {\n\t          if (this.cMap.contains(glyphUnicode)) {\n\t            charcode = this.cMap.lookup(glyphUnicode);\n\t          }\n\t        }\n\t        if (!charcode && this.toUnicode) {\n\t          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n\t        }\n\t        if (charcode <= 0) {\n\t          charcode = glyphUnicode;\n\t        }\n\t        width = this.widths[charcode];\n\t        if (width) {\n\t          break;\n\t        }\n\t      }\n\t      width = width || this.defaultWidth;\n\t      this._shadowWidth = width;\n\t      return width;\n\t    },\n\t    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n\t      var fontCharCode, width, operatorListId;\n\t      var widthCode = charcode;\n\t      if (this.cMap && this.cMap.contains(charcode)) {\n\t        widthCode = this.cMap.lookup(charcode);\n\t      }\n\t      width = this.widths[widthCode];\n\t      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n\t      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n\t      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n\t      if (typeof unicode === 'number') {\n\t        unicode = String.fromCharCode(unicode);\n\t      }\n\t      var isInFont = charcode in this.toFontChar;\n\t      fontCharCode = this.toFontChar[charcode] || charcode;\n\t      if (this.missingFile) {\n\t        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n\t      }\n\t      if (this.isType3Font) {\n\t        operatorListId = fontCharCode;\n\t      }\n\t      var accent = null;\n\t      if (this.seacMap && this.seacMap[charcode]) {\n\t        isInFont = true;\n\t        var seac = this.seacMap[charcode];\n\t        fontCharCode = seac.baseFontCharCode;\n\t        accent = {\n\t          fontChar: String.fromCharCode(seac.accentFontCharCode),\n\t          offset: seac.accentOffset\n\t        };\n\t      }\n\t      var fontChar = String.fromCharCode(fontCharCode);\n\t      var glyph = this.glyphCache[charcode];\n\t      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n\t        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n\t        this.glyphCache[charcode] = glyph;\n\t      }\n\t      return glyph;\n\t    },\n\t    charsToGlyphs: function Font_charsToGlyphs(chars) {\n\t      var charsCache = this.charsCache;\n\t      var glyphs, glyph, charcode;\n\t      if (charsCache) {\n\t        glyphs = charsCache[chars];\n\t        if (glyphs) {\n\t          return glyphs;\n\t        }\n\t      }\n\t      if (!charsCache) {\n\t        charsCache = this.charsCache = Object.create(null);\n\t      }\n\t      glyphs = [];\n\t      var charsCacheKey = chars;\n\t      var i = 0,\n\t          ii;\n\t      if (this.cMap) {\n\t        var c = Object.create(null);\n\t        while (i < chars.length) {\n\t          this.cMap.readCharCode(chars, i, c);\n\t          charcode = c.charcode;\n\t          var length = c.length;\n\t          i += length;\n\t          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n\t          glyph = this.charToGlyph(charcode, isSpace);\n\t          glyphs.push(glyph);\n\t        }\n\t      } else {\n\t        for (i = 0, ii = chars.length; i < ii; ++i) {\n\t          charcode = chars.charCodeAt(i);\n\t          glyph = this.charToGlyph(charcode, charcode === 0x20);\n\t          glyphs.push(glyph);\n\t        }\n\t      }\n\t      return charsCache[charsCacheKey] = glyphs;\n\t    }\n\t  };\n\t  return Font;\n\t}();\n\tvar ErrorFont = function ErrorFontClosure() {\n\t  function ErrorFont(error) {\n\t    this.error = error;\n\t    this.loadedName = 'g_font_error';\n\t    this.loading = false;\n\t  }\n\t  ErrorFont.prototype = {\n\t    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n\t      return [];\n\t    },\n\t    exportData: function ErrorFont_exportData() {\n\t      return { error: this.error };\n\t    }\n\t  };\n\t  return ErrorFont;\n\t}();\n\tfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n\t  var charCodeToGlyphId = Object.create(null);\n\t  var glyphId, charCode, baseEncoding;\n\t  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t  if (properties.baseEncodingName) {\n\t    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\t    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  } else if (isSymbolicFont) {\n\t    for (charCode in builtInEncoding) {\n\t      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n\t    }\n\t  } else {\n\t    baseEncoding = _encodings.StandardEncoding;\n\t    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  }\n\t  var differences = properties.differences,\n\t      glyphsUnicodeMap;\n\t  if (differences) {\n\t    for (charCode in differences) {\n\t      var glyphName = differences[charCode];\n\t      glyphId = glyphNames.indexOf(glyphName);\n\t      if (glyphId === -1) {\n\t        if (!glyphsUnicodeMap) {\n\t          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        }\n\t        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t        if (standardGlyphName !== glyphName) {\n\t          glyphId = glyphNames.indexOf(standardGlyphName);\n\t        }\n\t      }\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  }\n\t  return charCodeToGlyphId;\n\t}\n\tvar Type1Font = function Type1FontClosure() {\n\t  function findBlock(streamBytes, signature, startIndex) {\n\t    var streamBytesLength = streamBytes.length;\n\t    var signatureLength = signature.length;\n\t    var scanLength = streamBytesLength - signatureLength;\n\t    var i = startIndex,\n\t        j,\n\t        found = false;\n\t    while (i < scanLength) {\n\t      j = 0;\n\t      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n\t        j++;\n\t      }\n\t      if (j >= signatureLength) {\n\t        i += j;\n\t        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n\t          i++;\n\t        }\n\t        found = true;\n\t        break;\n\t      }\n\t      i++;\n\t    }\n\t    return {\n\t      found: found,\n\t      length: i\n\t    };\n\t  }\n\t  function getHeaderBlock(stream, suggestedLength) {\n\t    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n\t    var streamStartPos = stream.pos;\n\t    var headerBytes, headerBytesLength, block;\n\t    try {\n\t      headerBytes = stream.getBytes(suggestedLength);\n\t      headerBytesLength = headerBytes.length;\n\t    } catch (ex) {\n\t      if (ex instanceof _util.MissingDataException) {\n\t        throw ex;\n\t      }\n\t    }\n\t    if (headerBytesLength === suggestedLength) {\n\t      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n\t      if (block.found && block.length === suggestedLength) {\n\t        return {\n\t          stream: new _stream.Stream(headerBytes),\n\t          length: suggestedLength\n\t        };\n\t      }\n\t    }\n\t    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n\t    stream.pos = streamStartPos;\n\t    var SCAN_BLOCK_LENGTH = 2048;\n\t    var actualLength;\n\t    while (true) {\n\t      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n\t      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n\t      if (block.length === 0) {\n\t        break;\n\t      }\n\t      stream.pos += block.length;\n\t      if (block.found) {\n\t        actualLength = stream.pos - streamStartPos;\n\t        break;\n\t      }\n\t    }\n\t    stream.pos = streamStartPos;\n\t    if (actualLength) {\n\t      return {\n\t        stream: new _stream.Stream(stream.getBytes(actualLength)),\n\t        length: actualLength\n\t      };\n\t    }\n\t    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n\t    return {\n\t      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n\t      length: suggestedLength\n\t    };\n\t  }\n\t  function getEexecBlock(stream, suggestedLength) {\n\t    var eexecBytes = stream.getBytes();\n\t    return {\n\t      stream: new _stream.Stream(eexecBytes),\n\t      length: eexecBytes.length\n\t    };\n\t  }\n\t  function Type1Font(name, file, properties) {\n\t    var PFB_HEADER_SIZE = 6;\n\t    var headerBlockLength = properties.length1;\n\t    var eexecBlockLength = properties.length2;\n\t    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n\t    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n\t    if (pfbHeaderPresent) {\n\t      file.skip(PFB_HEADER_SIZE);\n\t      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t    }\n\t    var headerBlock = getHeaderBlock(file, headerBlockLength);\n\t    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n\t    headerBlockParser.extractFontHeader(properties);\n\t    if (pfbHeaderPresent) {\n\t      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n\t      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t    }\n\t    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n\t    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n\t    var data = eexecBlockParser.extractFontProgram();\n\t    for (var info in data.properties) {\n\t      properties[info] = data.properties[info];\n\t    }\n\t    var charstrings = data.charstrings;\n\t    var type2Charstrings = this.getType2Charstrings(charstrings);\n\t    var subrs = this.getType2Subrs(data.subrs);\n\t    this.charstrings = charstrings;\n\t    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n\t    this.seacs = this.getSeacs(data.charstrings);\n\t  }\n\t  Type1Font.prototype = {\n\t    get numGlyphs() {\n\t      return this.charstrings.length + 1;\n\t    },\n\t    getCharset: function Type1Font_getCharset() {\n\t      var charset = ['.notdef'];\n\t      var charstrings = this.charstrings;\n\t      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t        charset.push(charstrings[glyphId].glyphName);\n\t      }\n\t      return charset;\n\t    },\n\t    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n\t      var charstrings = this.charstrings;\n\t      var glyphNames = ['.notdef'],\n\t          glyphId;\n\t      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t        glyphNames.push(charstrings[glyphId].glyphName);\n\t      }\n\t      var encoding = properties.builtInEncoding;\n\t      if (encoding) {\n\t        var builtInEncoding = Object.create(null);\n\t        for (var charCode in encoding) {\n\t          glyphId = glyphNames.indexOf(encoding[charCode]);\n\t          if (glyphId >= 0) {\n\t            builtInEncoding[charCode] = glyphId;\n\t          }\n\t        }\n\t      }\n\t      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n\t    },\n\t    getSeacs: function Type1Font_getSeacs(charstrings) {\n\t      var i, ii;\n\t      var seacMap = [];\n\t      for (i = 0, ii = charstrings.length; i < ii; i++) {\n\t        var charstring = charstrings[i];\n\t        if (charstring.seac) {\n\t          seacMap[i + 1] = charstring.seac;\n\t        }\n\t      }\n\t      return seacMap;\n\t    },\n\t    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n\t      var type2Charstrings = [];\n\t      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n\t        type2Charstrings.push(type1Charstrings[i].charstring);\n\t      }\n\t      return type2Charstrings;\n\t    },\n\t    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n\t      var bias = 0;\n\t      var count = type1Subrs.length;\n\t      if (count < 1133) {\n\t        bias = 107;\n\t      } else if (count < 33769) {\n\t        bias = 1131;\n\t      } else {\n\t        bias = 32768;\n\t      }\n\t      var type2Subrs = [];\n\t      var i;\n\t      for (i = 0; i < bias; i++) {\n\t        type2Subrs.push([0x0B]);\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t        type2Subrs.push(type1Subrs[i]);\n\t      }\n\t      return type2Subrs;\n\t    },\n\t    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n\t      var cff = new _cff_parser.CFF();\n\t      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n\t      cff.names = [name];\n\t      var topDict = new _cff_parser.CFFTopDict();\n\t      topDict.setByName('version', 391);\n\t      topDict.setByName('Notice', 392);\n\t      topDict.setByName('FullName', 393);\n\t      topDict.setByName('FamilyName', 394);\n\t      topDict.setByName('Weight', 395);\n\t      topDict.setByName('Encoding', null);\n\t      topDict.setByName('FontMatrix', properties.fontMatrix);\n\t      topDict.setByName('FontBBox', properties.bbox);\n\t      topDict.setByName('charset', null);\n\t      topDict.setByName('CharStrings', null);\n\t      topDict.setByName('Private', null);\n\t      cff.topDict = topDict;\n\t      var strings = new _cff_parser.CFFStrings();\n\t      strings.add('Version 0.11');\n\t      strings.add('See original notice');\n\t      strings.add(name);\n\t      strings.add(name);\n\t      strings.add('Medium');\n\t      cff.strings = strings;\n\t      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n\t      var count = glyphs.length;\n\t      var charsetArray = [0];\n\t      var i, ii;\n\t      for (i = 0; i < count; i++) {\n\t        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n\t        if (index === -1) {\n\t          index = 0;\n\t        }\n\t        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n\t      }\n\t      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n\t      var charStringsIndex = new _cff_parser.CFFIndex();\n\t      charStringsIndex.add([0x8B, 0x0E]);\n\t      for (i = 0; i < count; i++) {\n\t        var glyph = glyphs[i];\n\t        if (glyph.length === 0) {\n\t          charStringsIndex.add([0x8B, 0x0E]);\n\t          continue;\n\t        }\n\t        charStringsIndex.add(glyph);\n\t      }\n\t      cff.charStrings = charStringsIndex;\n\t      var privateDict = new _cff_parser.CFFPrivateDict();\n\t      privateDict.setByName('Subrs', null);\n\t      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n\t      for (i = 0, ii = fields.length; i < ii; i++) {\n\t        var field = fields[i];\n\t        if (!(field in properties.privateData)) {\n\t          continue;\n\t        }\n\t        var value = properties.privateData[field];\n\t        if (Array.isArray(value)) {\n\t          for (var j = value.length - 1; j > 0; j--) {\n\t            value[j] -= value[j - 1];\n\t          }\n\t        }\n\t        privateDict.setByName(field, value);\n\t      }\n\t      cff.topDict.privateDict = privateDict;\n\t      var subrIndex = new _cff_parser.CFFIndex();\n\t      for (i = 0, ii = subrs.length; i < ii; i++) {\n\t        subrIndex.add(subrs[i]);\n\t      }\n\t      privateDict.subrsIndex = subrIndex;\n\t      var compiler = new _cff_parser.CFFCompiler(cff);\n\t      return compiler.compile();\n\t    }\n\t  };\n\t  return Type1Font;\n\t}();\n\tvar CFFFont = function CFFFontClosure() {\n\t  function CFFFont(file, properties) {\n\t    this.properties = properties;\n\t    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n\t    this.cff = parser.parse();\n\t    var compiler = new _cff_parser.CFFCompiler(this.cff);\n\t    this.seacs = this.cff.seacs;\n\t    try {\n\t      this.data = compiler.compile();\n\t    } catch (e) {\n\t      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n\t      this.data = file;\n\t    }\n\t  }\n\t  CFFFont.prototype = {\n\t    get numGlyphs() {\n\t      return this.cff.charStrings.count;\n\t    },\n\t    getCharset: function CFFFont_getCharset() {\n\t      return this.cff.charset.charset;\n\t    },\n\t    getGlyphMapping: function CFFFont_getGlyphMapping() {\n\t      var cff = this.cff;\n\t      var properties = this.properties;\n\t      var charsets = cff.charset.charset;\n\t      var charCodeToGlyphId;\n\t      var glyphId;\n\t      if (properties.composite) {\n\t        charCodeToGlyphId = Object.create(null);\n\t        if (cff.isCIDFont) {\n\t          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n\t            var cid = charsets[glyphId];\n\t            var charCode = properties.cMap.charCodeOf(cid);\n\t            charCodeToGlyphId[charCode] = glyphId;\n\t          }\n\t        } else {\n\t          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n\t            charCodeToGlyphId[glyphId] = glyphId;\n\t          }\n\t        }\n\t        return charCodeToGlyphId;\n\t      }\n\t      var encoding = cff.encoding ? cff.encoding.encoding : null;\n\t      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n\t      return charCodeToGlyphId;\n\t    }\n\t  };\n\t  return CFFFont;\n\t}();\n\t(function checkSeacSupport() {\n\t  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n\t    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n\t  }\n\t})();\n\t(function checkChromeWindows() {\n\t  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n\t    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n\t  }\n\t})();\n\texports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\n\texports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\n\texports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\n\texports.ErrorFont = ErrorFont;\n\texports.Font = Font;\n\texports.FontFlags = FontFlags;\n\texports.ToUnicodeMap = ToUnicodeMap;\n\texports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n\texports.ProblematicCharRanges = ProblematicCharRanges;\n\texports.getFontType = getFontType;\n\n/***/ },\n\n/***/ 693:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PDFImage = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _colorspace = __webpack_require__(97);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _jpeg_stream = __webpack_require__(180);\n\t\n\tvar _jpx = __webpack_require__(407);\n\t\n\tvar PDFImage = function PDFImageClosure() {\n\t  function handleImageData(image, nativeDecoder) {\n\t    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n\t      return nativeDecoder.decode(image);\n\t    }\n\t    return Promise.resolve(image);\n\t  }\n\t  function decodeAndClamp(value, addend, coefficient, max) {\n\t    value = addend + value * coefficient;\n\t    return value < 0 ? 0 : value > max ? max : value;\n\t  }\n\t  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n\t    var length = w2 * h2;\n\t    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t    var xRatio = w1 / w2;\n\t    var yRatio = h1 / h2;\n\t    var i,\n\t        j,\n\t        py,\n\t        newIndex = 0,\n\t        oldIndex;\n\t    var xScaled = new Uint16Array(w2);\n\t    var w1Scanline = w1;\n\t    for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio);\n\t    }\n\t    for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t        oldIndex = py + xScaled[j];\n\t        dest[newIndex++] = src[oldIndex];\n\t      }\n\t    }\n\t    return dest;\n\t  }\n\t  function PDFImage(_ref) {\n\t    var xref = _ref.xref,\n\t        res = _ref.res,\n\t        image = _ref.image,\n\t        _ref$isInline = _ref.isInline,\n\t        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n\t        _ref$smask = _ref.smask,\n\t        smask = _ref$smask === undefined ? null : _ref$smask,\n\t        _ref$mask = _ref.mask,\n\t        mask = _ref$mask === undefined ? null : _ref$mask,\n\t        _ref$isMask = _ref.isMask,\n\t        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.image = image;\n\t    var dict = image.dict;\n\t    if (dict.has('Filter')) {\n\t      var filter = dict.get('Filter').name;\n\t      if (filter === 'JPXDecode') {\n\t        var jpxImage = new _jpx.JpxImage();\n\t        jpxImage.parseImageProperties(image.stream);\n\t        image.stream.reset();\n\t        image.bitsPerComponent = jpxImage.bitsPerComponent;\n\t        image.numComps = jpxImage.componentsCount;\n\t      } else if (filter === 'JBIG2Decode') {\n\t        image.bitsPerComponent = 1;\n\t        image.numComps = 1;\n\t      }\n\t    }\n\t    this.width = dict.get('Width', 'W');\n\t    this.height = dict.get('Height', 'H');\n\t    if (this.width < 1 || this.height < 1) {\n\t      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n\t    }\n\t    this.interpolate = dict.get('Interpolate', 'I') || false;\n\t    this.imageMask = dict.get('ImageMask', 'IM') || false;\n\t    this.matte = dict.get('Matte') || false;\n\t    var bitsPerComponent = image.bitsPerComponent;\n\t    if (!bitsPerComponent) {\n\t      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n\t      if (!bitsPerComponent) {\n\t        if (this.imageMask) {\n\t          bitsPerComponent = 1;\n\t        } else {\n\t          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n\t        }\n\t      }\n\t    }\n\t    this.bpc = bitsPerComponent;\n\t    if (!this.imageMask) {\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      if (!colorSpace) {\n\t        (0, _util.info)('JPX images (which do not require color spaces)');\n\t        switch (image.numComps) {\n\t          case 1:\n\t            colorSpace = _primitives.Name.get('DeviceGray');\n\t            break;\n\t          case 3:\n\t            colorSpace = _primitives.Name.get('DeviceRGB');\n\t            break;\n\t          case 4:\n\t            colorSpace = _primitives.Name.get('DeviceCMYK');\n\t            break;\n\t          default:\n\t            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n\t        }\n\t      }\n\t      var resources = isInline ? res : null;\n\t      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n\t      this.numComps = this.colorSpace.numComps;\n\t    }\n\t    this.decode = dict.getArray('Decode', 'D');\n\t    this.needsDecode = false;\n\t    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n\t      this.needsDecode = true;\n\t      var max = (1 << bitsPerComponent) - 1;\n\t      this.decodeCoefficients = [];\n\t      this.decodeAddends = [];\n\t      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n\t        var dmin = this.decode[i];\n\t        var dmax = this.decode[i + 1];\n\t        this.decodeCoefficients[j] = dmax - dmin;\n\t        this.decodeAddends[j] = max * dmin;\n\t      }\n\t    }\n\t    if (smask) {\n\t      this.smask = new PDFImage({\n\t        xref: xref,\n\t        res: res,\n\t        image: smask,\n\t        isInline: isInline,\n\t        pdfFunctionFactory: pdfFunctionFactory\n\t      });\n\t    } else if (mask) {\n\t      if ((0, _primitives.isStream)(mask)) {\n\t        var maskDict = mask.dict,\n\t            imageMask = maskDict.get('ImageMask', 'IM');\n\t        if (!imageMask) {\n\t          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n\t        } else {\n\t          this.mask = new PDFImage({\n\t            xref: xref,\n\t            res: res,\n\t            image: mask,\n\t            isInline: isInline,\n\t            isMask: true,\n\t            pdfFunctionFactory: pdfFunctionFactory\n\t          });\n\t        }\n\t      } else {\n\t        this.mask = mask;\n\t      }\n\t    }\n\t  }\n\t  PDFImage.buildImage = function (_ref2) {\n\t    var handler = _ref2.handler,\n\t        xref = _ref2.xref,\n\t        res = _ref2.res,\n\t        image = _ref2.image,\n\t        _ref2$isInline = _ref2.isInline,\n\t        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n\t        _ref2$nativeDecoder = _ref2.nativeDecoder,\n\t        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n\t        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\t\n\t    var imagePromise = handleImageData(image, nativeDecoder);\n\t    var smaskPromise;\n\t    var maskPromise;\n\t    var smask = image.dict.get('SMask');\n\t    var mask = image.dict.get('Mask');\n\t    if (smask) {\n\t      smaskPromise = handleImageData(smask, nativeDecoder);\n\t      maskPromise = Promise.resolve(null);\n\t    } else {\n\t      smaskPromise = Promise.resolve(null);\n\t      if (mask) {\n\t        if ((0, _primitives.isStream)(mask)) {\n\t          maskPromise = handleImageData(mask, nativeDecoder);\n\t        } else if (Array.isArray(mask)) {\n\t          maskPromise = Promise.resolve(mask);\n\t        } else {\n\t          (0, _util.warn)('Unsupported mask format.');\n\t          maskPromise = Promise.resolve(null);\n\t        }\n\t      } else {\n\t        maskPromise = Promise.resolve(null);\n\t      }\n\t    }\n\t    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n\t      var _ref4 = _slicedToArray(_ref3, 3),\n\t          imageData = _ref4[0],\n\t          smaskData = _ref4[1],\n\t          maskData = _ref4[2];\n\t\n\t      return new PDFImage({\n\t        xref: xref,\n\t        res: res,\n\t        image: imageData,\n\t        isInline: isInline,\n\t        smask: smaskData,\n\t        mask: maskData,\n\t        pdfFunctionFactory: pdfFunctionFactory\n\t      });\n\t    });\n\t  };\n\t  PDFImage.createMask = function (_ref5) {\n\t    var imgArray = _ref5.imgArray,\n\t        width = _ref5.width,\n\t        height = _ref5.height,\n\t        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n\t        inverseDecode = _ref5.inverseDecode;\n\t\n\t    var computedLength = (width + 7 >> 3) * height;\n\t    var actualLength = imgArray.byteLength;\n\t    var haveFullData = computedLength === actualLength;\n\t    var data, i;\n\t    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n\t      data = imgArray;\n\t    } else if (!inverseDecode) {\n\t      data = new Uint8Array(actualLength);\n\t      data.set(imgArray);\n\t    } else {\n\t      data = new Uint8Array(computedLength);\n\t      data.set(imgArray);\n\t      for (i = actualLength; i < computedLength; i++) {\n\t        data[i] = 0xff;\n\t      }\n\t    }\n\t    if (inverseDecode) {\n\t      for (i = 0; i < actualLength; i++) {\n\t        data[i] ^= 0xFF;\n\t      }\n\t    }\n\t    return {\n\t      data: data,\n\t      width: width,\n\t      height: height\n\t    };\n\t  };\n\t  PDFImage.prototype = {\n\t    get drawWidth() {\n\t      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n\t    },\n\t    get drawHeight() {\n\t      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n\t    },\n\t    decodeBuffer: function decodeBuffer(buffer) {\n\t      var bpc = this.bpc;\n\t      var numComps = this.numComps;\n\t      var decodeAddends = this.decodeAddends;\n\t      var decodeCoefficients = this.decodeCoefficients;\n\t      var max = (1 << bpc) - 1;\n\t      var i, ii;\n\t      if (bpc === 1) {\n\t        for (i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] = +!buffer[i];\n\t        }\n\t        return;\n\t      }\n\t      var index = 0;\n\t      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n\t        for (var j = 0; j < numComps; j++) {\n\t          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n\t          index++;\n\t        }\n\t      }\n\t    },\n\t    getComponents: function getComponents(buffer) {\n\t      var bpc = this.bpc;\n\t      if (bpc === 8) {\n\t        return buffer;\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var numComps = this.numComps;\n\t      var length = width * height * numComps;\n\t      var bufferPos = 0;\n\t      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t      var rowComps = width * numComps;\n\t      var max = (1 << bpc) - 1;\n\t      var i = 0,\n\t          ii,\n\t          buf;\n\t      if (bpc === 1) {\n\t        var mask, loop1End, loop2End;\n\t        for (var j = 0; j < height; j++) {\n\t          loop1End = i + (rowComps & ~7);\n\t          loop2End = i + rowComps;\n\t          while (i < loop1End) {\n\t            buf = buffer[bufferPos++];\n\t            output[i] = buf >> 7 & 1;\n\t            output[i + 1] = buf >> 6 & 1;\n\t            output[i + 2] = buf >> 5 & 1;\n\t            output[i + 3] = buf >> 4 & 1;\n\t            output[i + 4] = buf >> 3 & 1;\n\t            output[i + 5] = buf >> 2 & 1;\n\t            output[i + 6] = buf >> 1 & 1;\n\t            output[i + 7] = buf & 1;\n\t            i += 8;\n\t          }\n\t          if (i < loop2End) {\n\t            buf = buffer[bufferPos++];\n\t            mask = 128;\n\t            while (i < loop2End) {\n\t              output[i++] = +!!(buf & mask);\n\t              mask >>= 1;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        var bits = 0;\n\t        buf = 0;\n\t        for (i = 0, ii = length; i < ii; ++i) {\n\t          if (i % rowComps === 0) {\n\t            buf = 0;\n\t            bits = 0;\n\t          }\n\t          while (bits < bpc) {\n\t            buf = buf << 8 | buffer[bufferPos++];\n\t            bits += 8;\n\t          }\n\t          var remainingBits = bits - bpc;\n\t          var value = buf >> remainingBits;\n\t          output[i] = value < 0 ? 0 : value > max ? max : value;\n\t          buf = buf & (1 << remainingBits) - 1;\n\t          bits = remainingBits;\n\t        }\n\t      }\n\t      return output;\n\t    },\n\t    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n\t      var smask = this.smask;\n\t      var mask = this.mask;\n\t      var alphaBuf, sw, sh, i, ii, j;\n\t      if (smask) {\n\t        sw = smask.width;\n\t        sh = smask.height;\n\t        alphaBuf = new Uint8Array(sw * sh);\n\t        smask.fillGrayBuffer(alphaBuf);\n\t        if (sw !== width || sh !== height) {\n\t          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n\t        }\n\t      } else if (mask) {\n\t        if (mask instanceof PDFImage) {\n\t          sw = mask.width;\n\t          sh = mask.height;\n\t          alphaBuf = new Uint8Array(sw * sh);\n\t          mask.numComps = 1;\n\t          mask.fillGrayBuffer(alphaBuf);\n\t          for (i = 0, ii = sw * sh; i < ii; ++i) {\n\t            alphaBuf[i] = 255 - alphaBuf[i];\n\t          }\n\t          if (sw !== width || sh !== height) {\n\t            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n\t          }\n\t        } else if (Array.isArray(mask)) {\n\t          alphaBuf = new Uint8Array(width * height);\n\t          var numComps = this.numComps;\n\t          for (i = 0, ii = width * height; i < ii; ++i) {\n\t            var opacity = 0;\n\t            var imageOffset = i * numComps;\n\t            for (j = 0; j < numComps; ++j) {\n\t              var color = image[imageOffset + j];\n\t              var maskOffset = j * 2;\n\t              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n\t                opacity = 255;\n\t                break;\n\t              }\n\t            }\n\t            alphaBuf[i] = opacity;\n\t          }\n\t        } else {\n\t          throw new _util.FormatError('Unknown mask format.');\n\t        }\n\t      }\n\t      if (alphaBuf) {\n\t        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t          rgbaBuf[j] = alphaBuf[i];\n\t        }\n\t      } else {\n\t        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t          rgbaBuf[j] = 255;\n\t        }\n\t      }\n\t    },\n\t    undoPreblend: function undoPreblend(buffer, width, height) {\n\t      var matte = this.smask && this.smask.matte;\n\t      if (!matte) {\n\t        return;\n\t      }\n\t      var matteRgb = this.colorSpace.getRgb(matte, 0);\n\t      var matteR = matteRgb[0];\n\t      var matteG = matteRgb[1];\n\t      var matteB = matteRgb[2];\n\t      var length = width * height * 4;\n\t      var r, g, b;\n\t      for (var i = 0; i < length; i += 4) {\n\t        var alpha = buffer[i + 3];\n\t        if (alpha === 0) {\n\t          buffer[i] = 255;\n\t          buffer[i + 1] = 255;\n\t          buffer[i + 2] = 255;\n\t          continue;\n\t        }\n\t        var k = 255 / alpha;\n\t        r = (buffer[i] - matteR) * k + matteR;\n\t        g = (buffer[i + 1] - matteG) * k + matteG;\n\t        b = (buffer[i + 2] - matteB) * k + matteB;\n\t        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n\t        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n\t        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n\t      }\n\t    },\n\t    createImageData: function createImageData() {\n\t      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t      var drawWidth = this.drawWidth;\n\t      var drawHeight = this.drawHeight;\n\t      var imgData = {\n\t        width: drawWidth,\n\t        height: drawHeight\n\t      };\n\t      var numComps = this.numComps;\n\t      var originalWidth = this.width;\n\t      var originalHeight = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n\t      var imgArray;\n\t      if (!forceRGBA) {\n\t        var kind;\n\t        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n\t          kind = _util.ImageKind.GRAYSCALE_1BPP;\n\t        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n\t          kind = _util.ImageKind.RGB_24BPP;\n\t        }\n\t        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n\t          imgData.kind = kind;\n\t          imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t          if (this.image instanceof _stream.DecodeStream) {\n\t            imgData.data = imgArray;\n\t          } else {\n\t            var newArray = new Uint8Array(imgArray.length);\n\t            newArray.set(imgArray);\n\t            imgData.data = newArray;\n\t          }\n\t          if (this.needsDecode) {\n\t            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n\t            var buffer = imgData.data;\n\t            for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t              buffer[i] ^= 0xff;\n\t            }\n\t          }\n\t          return imgData;\n\t        }\n\t        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n\t          var imageLength = originalHeight * rowBytes;\n\t          switch (this.colorSpace.name) {\n\t            case 'DeviceGray':\n\t              imageLength *= 3;\n\t            case 'DeviceRGB':\n\t            case 'DeviceCMYK':\n\t              imgData.kind = _util.ImageKind.RGB_24BPP;\n\t              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n\t              return imgData;\n\t          }\n\t        }\n\t      }\n\t      imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n\t      var comps = this.getComponents(imgArray);\n\t      var alpha01, maybeUndoPreblend;\n\t      if (!forceRGBA && !this.smask && !this.mask) {\n\t        imgData.kind = _util.ImageKind.RGB_24BPP;\n\t        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n\t        alpha01 = 0;\n\t        maybeUndoPreblend = false;\n\t      } else {\n\t        imgData.kind = _util.ImageKind.RGBA_32BPP;\n\t        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n\t        alpha01 = 1;\n\t        maybeUndoPreblend = true;\n\t        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n\t      }\n\t      if (this.needsDecode) {\n\t        this.decodeBuffer(comps);\n\t      }\n\t      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n\t      if (maybeUndoPreblend) {\n\t        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n\t      }\n\t      return imgData;\n\t    },\n\t    fillGrayBuffer: function fillGrayBuffer(buffer) {\n\t      var numComps = this.numComps;\n\t      if (numComps !== 1) {\n\t        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = width * numComps * bpc + 7 >> 3;\n\t      var imgArray = this.getImageBytes(height * rowBytes);\n\t      var comps = this.getComponents(imgArray);\n\t      var i, length;\n\t      if (bpc === 1) {\n\t        length = width * height;\n\t        if (this.needsDecode) {\n\t          for (i = 0; i < length; ++i) {\n\t            buffer[i] = comps[i] - 1 & 255;\n\t          }\n\t        } else {\n\t          for (i = 0; i < length; ++i) {\n\t            buffer[i] = -comps[i] & 255;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      if (this.needsDecode) {\n\t        this.decodeBuffer(comps);\n\t      }\n\t      length = width * height;\n\t      var scale = 255 / ((1 << bpc) - 1);\n\t      for (i = 0; i < length; ++i) {\n\t        buffer[i] = scale * comps[i] | 0;\n\t      }\n\t    },\n\t    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n\t      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t\n\t      this.image.reset();\n\t      this.image.drawWidth = drawWidth || this.width;\n\t      this.image.drawHeight = drawHeight || this.height;\n\t      this.image.forceRGB = !!forceRGB;\n\t      return this.image.getBytes(length);\n\t    }\n\t  };\n\t  return PDFImage;\n\t}();\n\texports.PDFImage = PDFImage;\n\n/***/ },\n\n/***/ 694:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Jbig2Image = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _arithmetic_decoder = __webpack_require__(401);\n\t\n\tvar _ccitt = __webpack_require__(402);\n\t\n\tvar Jbig2Error = function Jbig2ErrorClosure() {\n\t  function Jbig2Error(msg) {\n\t    this.message = 'JBIG2 error: ' + msg;\n\t  }\n\t  Jbig2Error.prototype = new Error();\n\t  Jbig2Error.prototype.name = 'Jbig2Error';\n\t  Jbig2Error.constructor = Jbig2Error;\n\t  return Jbig2Error;\n\t}();\n\tvar Jbig2Image = function Jbig2ImageClosure() {\n\t  function ContextCache() {}\n\t  ContextCache.prototype = {\n\t    getContexts: function getContexts(id) {\n\t      if (id in this) {\n\t        return this[id];\n\t      }\n\t      return this[id] = new Int8Array(1 << 16);\n\t    }\n\t  };\n\t  function DecodingContext(data, start, end) {\n\t    this.data = data;\n\t    this.start = start;\n\t    this.end = end;\n\t  }\n\t  DecodingContext.prototype = {\n\t    get decoder() {\n\t      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n\t      return (0, _util.shadow)(this, 'decoder', decoder);\n\t    },\n\t    get contextCache() {\n\t      var cache = new ContextCache();\n\t      return (0, _util.shadow)(this, 'contextCache', cache);\n\t    }\n\t  };\n\t  function decodeInteger(contextCache, procedure, decoder) {\n\t    var contexts = contextCache.getContexts(procedure);\n\t    var prev = 1;\n\t    function readBits(length) {\n\t      var v = 0;\n\t      for (var i = 0; i < length; i++) {\n\t        var bit = decoder.readBit(contexts, prev);\n\t        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n\t        v = v << 1 | bit;\n\t      }\n\t      return v >>> 0;\n\t    }\n\t    var sign = readBits(1);\n\t    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n\t    return sign === 0 ? value : value > 0 ? -value : null;\n\t  }\n\t  function decodeIAID(contextCache, decoder, codeLength) {\n\t    var contexts = contextCache.getContexts('IAID');\n\t    var prev = 1;\n\t    for (var i = 0; i < codeLength; i++) {\n\t      var bit = decoder.readBit(contexts, prev);\n\t      prev = prev << 1 | bit;\n\t    }\n\t    if (codeLength < 31) {\n\t      return prev & (1 << codeLength) - 1;\n\t    }\n\t    return prev & 0x7FFFFFFF;\n\t  }\n\t  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n\t  var CodingTemplates = [[{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: 2,\n\t    y: -1\n\t  }, {\n\t    x: -4,\n\t    y: 0\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: 2,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: 2,\n\t    y: -1\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -3,\n\t    y: -1\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: -4,\n\t    y: 0\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }]];\n\t  var RefinementTemplates = [{\n\t    coding: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }],\n\t    reference: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 0\n\t    }, {\n\t      x: 1,\n\t      y: 0\n\t    }, {\n\t      x: -1,\n\t      y: 1\n\t    }, {\n\t      x: 0,\n\t      y: 1\n\t    }, {\n\t      x: 1,\n\t      y: 1\n\t    }]\n\t  }, {\n\t    coding: [{\n\t      x: -1,\n\t      y: -1\n\t    }, {\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }],\n\t    reference: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 0\n\t    }, {\n\t      x: 1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 1\n\t    }, {\n\t      x: 1,\n\t      y: 1\n\t    }]\n\t  }];\n\t  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n\t  var RefinementReusedContexts = [0x0020, 0x0008];\n\t  function decodeBitmapTemplate0(width, height, decodingContext) {\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GB');\n\t    var contextLabel,\n\t        i,\n\t        j,\n\t        pixel,\n\t        row,\n\t        row1,\n\t        row2,\n\t        bitmap = [];\n\t    var OLD_PIXEL_MASK = 0x7BF7;\n\t    for (i = 0; i < height; i++) {\n\t      row = bitmap[i] = new Uint8Array(width);\n\t      row1 = i < 1 ? row : bitmap[i - 1];\n\t      row2 = i < 2 ? row : bitmap[i - 2];\n\t      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n\t      for (j = 0; j < width; j++) {\n\t        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\t        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n\t    if (mmr) {\n\t      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n\t      return decodeMMRBitmap(input, width, height, false);\n\t    }\n\t    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n\t      return decodeBitmapTemplate0(width, height, decodingContext);\n\t    }\n\t    var useskip = !!skip;\n\t    var template = CodingTemplates[templateIndex].concat(at);\n\t    template.sort(function (a, b) {\n\t      return a.y - b.y || a.x - b.x;\n\t    });\n\t    var templateLength = template.length;\n\t    var templateX = new Int8Array(templateLength);\n\t    var templateY = new Int8Array(templateLength);\n\t    var changingTemplateEntries = [];\n\t    var reuseMask = 0,\n\t        minX = 0,\n\t        maxX = 0,\n\t        minY = 0;\n\t    var c, k;\n\t    for (k = 0; k < templateLength; k++) {\n\t      templateX[k] = template[k].x;\n\t      templateY[k] = template[k].y;\n\t      minX = Math.min(minX, template[k].x);\n\t      maxX = Math.max(maxX, template[k].x);\n\t      minY = Math.min(minY, template[k].y);\n\t      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n\t        reuseMask |= 1 << templateLength - 1 - k;\n\t      } else {\n\t        changingTemplateEntries.push(k);\n\t      }\n\t    }\n\t    var changingEntriesLength = changingTemplateEntries.length;\n\t    var changingTemplateX = new Int8Array(changingEntriesLength);\n\t    var changingTemplateY = new Int8Array(changingEntriesLength);\n\t    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n\t    for (c = 0; c < changingEntriesLength; c++) {\n\t      k = changingTemplateEntries[c];\n\t      changingTemplateX[c] = template[k].x;\n\t      changingTemplateY[c] = template[k].y;\n\t      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n\t    }\n\t    var sbb_left = -minX;\n\t    var sbb_top = -minY;\n\t    var sbb_right = width - maxX;\n\t    var pseudoPixelContext = ReusedContexts[templateIndex];\n\t    var row = new Uint8Array(width);\n\t    var bitmap = [];\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GB');\n\t    var ltp = 0,\n\t        j,\n\t        i0,\n\t        j0,\n\t        contextLabel = 0,\n\t        bit,\n\t        shift;\n\t    for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t        ltp ^= sltp;\n\t        if (ltp) {\n\t          bitmap.push(row);\n\t          continue;\n\t        }\n\t      }\n\t      row = new Uint8Array(row);\n\t      bitmap.push(row);\n\t      for (j = 0; j < width; j++) {\n\t        if (useskip && skip[i][j]) {\n\t          row[j] = 0;\n\t          continue;\n\t        }\n\t        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n\t          contextLabel = contextLabel << 1 & reuseMask;\n\t          for (k = 0; k < changingEntriesLength; k++) {\n\t            i0 = i + changingTemplateY[k];\n\t            j0 = j + changingTemplateX[k];\n\t            bit = bitmap[i0][j0];\n\t            if (bit) {\n\t              bit = changingTemplateBit[k];\n\t              contextLabel |= bit;\n\t            }\n\t          }\n\t        } else {\n\t          contextLabel = 0;\n\t          shift = templateLength - 1;\n\t          for (k = 0; k < templateLength; k++, shift--) {\n\t            j0 = j + templateX[k];\n\t            if (j0 >= 0 && j0 < width) {\n\t              i0 = i + templateY[k];\n\t              if (i0 >= 0) {\n\t                bit = bitmap[i0][j0];\n\t                if (bit) {\n\t                  contextLabel |= bit << shift;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        var pixel = decoder.readBit(contexts, contextLabel);\n\t        row[j] = pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n\t    var codingTemplate = RefinementTemplates[templateIndex].coding;\n\t    if (templateIndex === 0) {\n\t      codingTemplate = codingTemplate.concat([at[0]]);\n\t    }\n\t    var codingTemplateLength = codingTemplate.length;\n\t    var codingTemplateX = new Int32Array(codingTemplateLength);\n\t    var codingTemplateY = new Int32Array(codingTemplateLength);\n\t    var k;\n\t    for (k = 0; k < codingTemplateLength; k++) {\n\t      codingTemplateX[k] = codingTemplate[k].x;\n\t      codingTemplateY[k] = codingTemplate[k].y;\n\t    }\n\t    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n\t    if (templateIndex === 0) {\n\t      referenceTemplate = referenceTemplate.concat([at[1]]);\n\t    }\n\t    var referenceTemplateLength = referenceTemplate.length;\n\t    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n\t    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n\t    for (k = 0; k < referenceTemplateLength; k++) {\n\t      referenceTemplateX[k] = referenceTemplate[k].x;\n\t      referenceTemplateY[k] = referenceTemplate[k].y;\n\t    }\n\t    var referenceWidth = referenceBitmap[0].length;\n\t    var referenceHeight = referenceBitmap.length;\n\t    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n\t    var bitmap = [];\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GR');\n\t    var ltp = 0;\n\t    for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t        ltp ^= sltp;\n\t        if (ltp) {\n\t          throw new Jbig2Error('prediction is not supported');\n\t        }\n\t      }\n\t      var row = new Uint8Array(width);\n\t      bitmap.push(row);\n\t      for (var j = 0; j < width; j++) {\n\t        var i0, j0;\n\t        var contextLabel = 0;\n\t        for (k = 0; k < codingTemplateLength; k++) {\n\t          i0 = i + codingTemplateY[k];\n\t          j0 = j + codingTemplateX[k];\n\t          if (i0 < 0 || j0 < 0 || j0 >= width) {\n\t            contextLabel <<= 1;\n\t          } else {\n\t            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n\t          }\n\t        }\n\t        for (k = 0; k < referenceTemplateLength; k++) {\n\t          i0 = i + referenceTemplateY[k] - offsetY;\n\t          j0 = j + referenceTemplateX[k] - offsetX;\n\t          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n\t            contextLabel <<= 1;\n\t          } else {\n\t            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n\t          }\n\t        }\n\t        var pixel = decoder.readBit(contexts, contextLabel);\n\t        row[j] = pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n\t    if (huffman && refinement) {\n\t      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n\t    }\n\t    var newSymbols = [];\n\t    var currentHeight = 0;\n\t    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n\t    var decoder = decodingContext.decoder;\n\t    var contextCache = decodingContext.contextCache;\n\t    var tableB1 = void 0,\n\t        symbolWidths = void 0;\n\t    if (huffman) {\n\t      tableB1 = getStandardTable(1);\n\t      symbolWidths = [];\n\t      symbolCodeLength = Math.max(symbolCodeLength, 1);\n\t    }\n\t    while (newSymbols.length < numberOfNewSymbols) {\n\t      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n\t      currentHeight += deltaHeight;\n\t      var currentWidth = 0,\n\t          totalWidth = 0;\n\t      var firstSymbol = huffman ? symbolWidths.length : 0;\n\t      while (true) {\n\t        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n\t        if (deltaWidth === null) {\n\t          break;\n\t        }\n\t        currentWidth += deltaWidth;\n\t        totalWidth += currentWidth;\n\t        var bitmap;\n\t        if (refinement) {\n\t          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n\t          if (numberOfInstances > 1) {\n\t            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n\t          } else {\n\t            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n\t            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n\t          }\n\t          newSymbols.push(bitmap);\n\t        } else if (huffman) {\n\t          symbolWidths.push(currentWidth);\n\t        } else {\n\t          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n\t          newSymbols.push(bitmap);\n\t        }\n\t      }\n\t      if (huffman && !refinement) {\n\t        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n\t        huffmanInput.byteAlign();\n\t        var collectiveBitmap = void 0;\n\t        if (bitmapSize === 0) {\n\t          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n\t        } else {\n\t          var originalEnd = huffmanInput.end;\n\t          var bitmapEnd = huffmanInput.position + bitmapSize;\n\t          huffmanInput.end = bitmapEnd;\n\t          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n\t          huffmanInput.end = originalEnd;\n\t          huffmanInput.position = bitmapEnd;\n\t        }\n\t        var numberOfSymbolsDecoded = symbolWidths.length;\n\t        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n\t          newSymbols.push(collectiveBitmap);\n\t        } else {\n\t          var _i = void 0,\n\t              y = void 0,\n\t              xMin = 0,\n\t              xMax = void 0,\n\t              bitmapWidth = void 0,\n\t              symbolBitmap = void 0;\n\t          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n\t            bitmapWidth = symbolWidths[_i];\n\t            xMax = xMin + bitmapWidth;\n\t            symbolBitmap = [];\n\t            for (y = 0; y < currentHeight; y++) {\n\t              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n\t            }\n\t            newSymbols.push(symbolBitmap);\n\t            xMin = xMax;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var exportedSymbols = [];\n\t    var flags = [],\n\t        currentFlag = false;\n\t    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n\t    while (flags.length < totalSymbolsLength) {\n\t      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n\t      while (runLength--) {\n\t        flags.push(currentFlag);\n\t      }\n\t      currentFlag = !currentFlag;\n\t    }\n\t    for (var i = 0, ii = symbols.length; i < ii; i++) {\n\t      if (flags[i]) {\n\t        exportedSymbols.push(symbols[i]);\n\t      }\n\t    }\n\t    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n\t      if (flags[i]) {\n\t        exportedSymbols.push(newSymbols[j]);\n\t      }\n\t    }\n\t    return exportedSymbols;\n\t  }\n\t  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n\t    if (huffman && refinement) {\n\t      throw new Jbig2Error('refinement with Huffman is not supported');\n\t    }\n\t    var bitmap = [];\n\t    var i, row;\n\t    for (i = 0; i < height; i++) {\n\t      row = new Uint8Array(width);\n\t      if (defaultPixelValue) {\n\t        for (var j = 0; j < width; j++) {\n\t          row[j] = defaultPixelValue;\n\t        }\n\t      }\n\t      bitmap.push(row);\n\t    }\n\t    var decoder = decodingContext.decoder;\n\t    var contextCache = decodingContext.contextCache;\n\t    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n\t    var firstS = 0;\n\t    i = 0;\n\t    while (i < numberOfSymbolInstances) {\n\t      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n\t      stripT += deltaT;\n\t      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n\t      firstS += deltaFirstS;\n\t      var currentS = firstS;\n\t      do {\n\t        var currentT = 0;\n\t        if (stripSize > 1) {\n\t          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n\t        }\n\t        var t = stripSize * stripT + currentT;\n\t        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n\t        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n\t        var symbolBitmap = inputSymbols[symbolId];\n\t        var symbolWidth = symbolBitmap[0].length;\n\t        var symbolHeight = symbolBitmap.length;\n\t        if (applyRefinement) {\n\t          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n\t          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n\t          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t          symbolWidth += rdw;\n\t          symbolHeight += rdh;\n\t          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n\t        }\n\t        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n\t        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n\t        var s2, t2, symbolRow;\n\t        if (transposed) {\n\t          for (s2 = 0; s2 < symbolHeight; s2++) {\n\t            row = bitmap[offsetS + s2];\n\t            if (!row) {\n\t              continue;\n\t            }\n\t            symbolRow = symbolBitmap[s2];\n\t            var maxWidth = Math.min(width - offsetT, symbolWidth);\n\t            switch (combinationOperator) {\n\t              case 0:\n\t                for (t2 = 0; t2 < maxWidth; t2++) {\n\t                  row[offsetT + t2] |= symbolRow[t2];\n\t                }\n\t                break;\n\t              case 2:\n\t                for (t2 = 0; t2 < maxWidth; t2++) {\n\t                  row[offsetT + t2] ^= symbolRow[t2];\n\t                }\n\t                break;\n\t              default:\n\t                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t            }\n\t          }\n\t          currentS += symbolHeight - 1;\n\t        } else {\n\t          for (t2 = 0; t2 < symbolHeight; t2++) {\n\t            row = bitmap[offsetT + t2];\n\t            if (!row) {\n\t              continue;\n\t            }\n\t            symbolRow = symbolBitmap[t2];\n\t            switch (combinationOperator) {\n\t              case 0:\n\t                for (s2 = 0; s2 < symbolWidth; s2++) {\n\t                  row[offsetS + s2] |= symbolRow[s2];\n\t                }\n\t                break;\n\t              case 2:\n\t                for (s2 = 0; s2 < symbolWidth; s2++) {\n\t                  row[offsetS + s2] ^= symbolRow[s2];\n\t                }\n\t                break;\n\t              default:\n\t                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t            }\n\t          }\n\t          currentS += symbolWidth - 1;\n\t        }\n\t        i++;\n\t        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n\t        if (deltaS === null) {\n\t          break;\n\t        }\n\t        currentS += deltaS + dsOffset;\n\t      } while (true);\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n\t    var at = [];\n\t    if (!mmr) {\n\t      at.push({\n\t        x: -patternWidth,\n\t        y: 0\n\t      });\n\t      if (template === 0) {\n\t        at.push({\n\t          x: -3,\n\t          y: -1\n\t        });\n\t        at.push({\n\t          x: 2,\n\t          y: -2\n\t        });\n\t        at.push({\n\t          x: -2,\n\t          y: -2\n\t        });\n\t      }\n\t    }\n\t    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n\t    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n\t    var patterns = [],\n\t        i = 0,\n\t        patternBitmap = void 0,\n\t        xMin = void 0,\n\t        xMax = void 0,\n\t        y = void 0;\n\t    while (i <= maxPatternIndex) {\n\t      patternBitmap = [];\n\t      xMin = patternWidth * i;\n\t      xMax = xMin + patternWidth;\n\t      for (y = 0; y < patternHeight; y++) {\n\t        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n\t      }\n\t      patterns.push(patternBitmap);\n\t      i++;\n\t    }\n\t    return patterns;\n\t  }\n\t  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n\t    var skip = null;\n\t    if (enableSkip) {\n\t      throw new Jbig2Error('skip is not supported');\n\t    }\n\t    if (combinationOperator !== 0) {\n\t      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n\t    }\n\t    var regionBitmap = [];\n\t    var i = void 0,\n\t        j = void 0,\n\t        row = void 0;\n\t    for (i = 0; i < regionHeight; i++) {\n\t      row = new Uint8Array(regionWidth);\n\t      if (defaultPixelValue) {\n\t        for (j = 0; j < regionWidth; j++) {\n\t          row[j] = defaultPixelValue;\n\t        }\n\t      }\n\t      regionBitmap.push(row);\n\t    }\n\t    var numberOfPatterns = patterns.length;\n\t    var pattern0 = patterns[0];\n\t    var patternWidth = pattern0[0].length,\n\t        patternHeight = pattern0.length;\n\t    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n\t    var at = [];\n\t    if (!mmr) {\n\t      at.push({\n\t        x: template <= 1 ? 3 : 2,\n\t        y: -1\n\t      });\n\t      if (template === 0) {\n\t        at.push({\n\t          x: -3,\n\t          y: -1\n\t        });\n\t        at.push({\n\t          x: 2,\n\t          y: -2\n\t        });\n\t        at.push({\n\t          x: -2,\n\t          y: -2\n\t        });\n\t      }\n\t    }\n\t    var grayScaleBitPlanes = [],\n\t        mmrInput = void 0,\n\t        bitmap = void 0;\n\t    if (mmr) {\n\t      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n\t    }\n\t    for (i = bitsPerValue - 1; i >= 0; i--) {\n\t      if (mmr) {\n\t        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n\t      } else {\n\t        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n\t      }\n\t      grayScaleBitPlanes[i] = bitmap;\n\t    }\n\t    var mg = void 0,\n\t        ng = void 0,\n\t        bit = void 0,\n\t        patternIndex = void 0,\n\t        patternBitmap = void 0,\n\t        x = void 0,\n\t        y = void 0,\n\t        patternRow = void 0,\n\t        regionRow = void 0;\n\t    for (mg = 0; mg < gridHeight; mg++) {\n\t      for (ng = 0; ng < gridWidth; ng++) {\n\t        bit = 0;\n\t        patternIndex = 0;\n\t        for (j = bitsPerValue - 1; j >= 0; j--) {\n\t          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n\t          patternIndex |= bit << j;\n\t        }\n\t        patternBitmap = patterns[patternIndex];\n\t        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n\t        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n\t        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n\t          for (i = 0; i < patternHeight; i++) {\n\t            regionRow = regionBitmap[y + i];\n\t            patternRow = patternBitmap[i];\n\t            for (j = 0; j < patternWidth; j++) {\n\t              regionRow[x + j] |= patternRow[j];\n\t            }\n\t          }\n\t        } else {\n\t          var regionX = void 0,\n\t              regionY = void 0;\n\t          for (i = 0; i < patternHeight; i++) {\n\t            regionY = y + i;\n\t            if (regionY < 0 || regionY >= regionHeight) {\n\t              continue;\n\t            }\n\t            regionRow = regionBitmap[regionY];\n\t            patternRow = patternBitmap[i];\n\t            for (j = 0; j < patternWidth; j++) {\n\t              regionX = x + j;\n\t              if (regionX >= 0 && regionX < regionWidth) {\n\t                regionRow[regionX] |= patternRow[j];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return regionBitmap;\n\t  }\n\t  function readSegmentHeader(data, start) {\n\t    var segmentHeader = {};\n\t    segmentHeader.number = (0, _util.readUint32)(data, start);\n\t    var flags = data[start + 4];\n\t    var segmentType = flags & 0x3F;\n\t    if (!SegmentTypes[segmentType]) {\n\t      throw new Jbig2Error('invalid segment type: ' + segmentType);\n\t    }\n\t    segmentHeader.type = segmentType;\n\t    segmentHeader.typeName = SegmentTypes[segmentType];\n\t    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\t    var pageAssociationFieldSize = !!(flags & 0x40);\n\t    var referredFlags = data[start + 5];\n\t    var referredToCount = referredFlags >> 5 & 7;\n\t    var retainBits = [referredFlags & 31];\n\t    var position = start + 6;\n\t    if (referredFlags === 7) {\n\t      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n\t      position += 3;\n\t      var bytes = referredToCount + 7 >> 3;\n\t      retainBits[0] = data[position++];\n\t      while (--bytes > 0) {\n\t        retainBits.push(data[position++]);\n\t      }\n\t    } else if (referredFlags === 5 || referredFlags === 6) {\n\t      throw new Jbig2Error('invalid referred-to flags');\n\t    }\n\t    segmentHeader.retainBits = retainBits;\n\t    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n\t    var referredTo = [];\n\t    var i, ii;\n\t    for (i = 0; i < referredToCount; i++) {\n\t      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n\t      referredTo.push(number);\n\t      position += referredToSegmentNumberSize;\n\t    }\n\t    segmentHeader.referredTo = referredTo;\n\t    if (!pageAssociationFieldSize) {\n\t      segmentHeader.pageAssociation = data[position++];\n\t    } else {\n\t      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n\t      position += 4;\n\t    }\n\t    segmentHeader.length = (0, _util.readUint32)(data, position);\n\t    position += 4;\n\t    if (segmentHeader.length === 0xFFFFFFFF) {\n\t      if (segmentType === 38) {\n\t        var genericRegionInfo = readRegionSegmentInformation(data, position);\n\t        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n\t        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n\t        var searchPatternLength = 6;\n\t        var searchPattern = new Uint8Array(searchPatternLength);\n\t        if (!genericRegionMmr) {\n\t          searchPattern[0] = 0xFF;\n\t          searchPattern[1] = 0xAC;\n\t        }\n\t        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n\t        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n\t        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n\t        searchPattern[5] = genericRegionInfo.height & 0xFF;\n\t        for (i = position, ii = data.length; i < ii; i++) {\n\t          var j = 0;\n\t          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n\t            j++;\n\t          }\n\t          if (j === searchPatternLength) {\n\t            segmentHeader.length = i + searchPatternLength;\n\t            break;\n\t          }\n\t        }\n\t        if (segmentHeader.length === 0xFFFFFFFF) {\n\t          throw new Jbig2Error('segment end was not found');\n\t        }\n\t      } else {\n\t        throw new Jbig2Error('invalid unknown segment length');\n\t      }\n\t    }\n\t    segmentHeader.headerEnd = position;\n\t    return segmentHeader;\n\t  }\n\t  function readSegments(header, data, start, end) {\n\t    var segments = [];\n\t    var position = start;\n\t    while (position < end) {\n\t      var segmentHeader = readSegmentHeader(data, position);\n\t      position = segmentHeader.headerEnd;\n\t      var segment = {\n\t        header: segmentHeader,\n\t        data: data\n\t      };\n\t      if (!header.randomAccess) {\n\t        segment.start = position;\n\t        position += segmentHeader.length;\n\t        segment.end = position;\n\t      }\n\t      segments.push(segment);\n\t      if (segmentHeader.type === 51) {\n\t        break;\n\t      }\n\t    }\n\t    if (header.randomAccess) {\n\t      for (var i = 0, ii = segments.length; i < ii; i++) {\n\t        segments[i].start = position;\n\t        position += segments[i].header.length;\n\t        segments[i].end = position;\n\t      }\n\t    }\n\t    return segments;\n\t  }\n\t  function readRegionSegmentInformation(data, start) {\n\t    return {\n\t      width: (0, _util.readUint32)(data, start),\n\t      height: (0, _util.readUint32)(data, start + 4),\n\t      x: (0, _util.readUint32)(data, start + 8),\n\t      y: (0, _util.readUint32)(data, start + 12),\n\t      combinationOperator: data[start + 16] & 7\n\t    };\n\t  }\n\t  var RegionSegmentInformationFieldLength = 17;\n\t  function processSegment(segment, visitor) {\n\t    var header = segment.header;\n\t    var data = segment.data,\n\t        position = segment.start,\n\t        end = segment.end;\n\t    var args, at, i, atLength;\n\t    switch (header.type) {\n\t      case 0:\n\t        var dictionary = {};\n\t        var dictionaryFlags = (0, _util.readUint16)(data, position);\n\t        dictionary.huffman = !!(dictionaryFlags & 1);\n\t        dictionary.refinement = !!(dictionaryFlags & 2);\n\t        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n\t        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n\t        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n\t        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n\t        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n\t        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n\t        dictionary.template = dictionaryFlags >> 10 & 3;\n\t        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n\t        position += 2;\n\t        if (!dictionary.huffman) {\n\t          atLength = dictionary.template === 0 ? 4 : 1;\n\t          at = [];\n\t          for (i = 0; i < atLength; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          dictionary.at = at;\n\t        }\n\t        if (dictionary.refinement && !dictionary.refinementTemplate) {\n\t          at = [];\n\t          for (i = 0; i < 2; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          dictionary.refinementAt = at;\n\t        }\n\t        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [dictionary, header.number, header.referredTo, data, position, end];\n\t        break;\n\t      case 6:\n\t      case 7:\n\t        var textRegion = {};\n\t        textRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n\t        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n\t        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n\t        textRegion.stripSize = 1 << textRegion.logStripSize;\n\t        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n\t        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n\t        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n\t        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n\t        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n\t        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n\t        if (textRegion.huffman) {\n\t          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n\t          position += 2;\n\t          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n\t          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n\t          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n\t          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n\t          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n\t          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n\t          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n\t          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n\t        }\n\t        if (textRegion.refinement && !textRegion.refinementTemplate) {\n\t          at = [];\n\t          for (i = 0; i < 2; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          textRegion.refinementAt = at;\n\t        }\n\t        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [textRegion, header.referredTo, data, position, end];\n\t        break;\n\t      case 16:\n\t        var patternDictionary = {};\n\t        var patternDictionaryFlags = data[position++];\n\t        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n\t        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n\t        patternDictionary.patternWidth = data[position++];\n\t        patternDictionary.patternHeight = data[position++];\n\t        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [patternDictionary, header.number, data, position, end];\n\t        break;\n\t      case 22:\n\t      case 23:\n\t        var halftoneRegion = {};\n\t        halftoneRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var halftoneRegionFlags = data[position++];\n\t        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n\t        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n\t        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n\t        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n\t        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n\t        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n\t        position += 4;\n\t        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n\t        position += 4;\n\t        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        args = [halftoneRegion, header.referredTo, data, position, end];\n\t        break;\n\t      case 38:\n\t      case 39:\n\t        var genericRegion = {};\n\t        genericRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var genericRegionSegmentFlags = data[position++];\n\t        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n\t        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n\t        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n\t        if (!genericRegion.mmr) {\n\t          atLength = genericRegion.template === 0 ? 4 : 1;\n\t          at = [];\n\t          for (i = 0; i < atLength; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          genericRegion.at = at;\n\t        }\n\t        args = [genericRegion, data, position, end];\n\t        break;\n\t      case 48:\n\t        var pageInfo = {\n\t          width: (0, _util.readUint32)(data, position),\n\t          height: (0, _util.readUint32)(data, position + 4),\n\t          resolutionX: (0, _util.readUint32)(data, position + 8),\n\t          resolutionY: (0, _util.readUint32)(data, position + 12)\n\t        };\n\t        if (pageInfo.height === 0xFFFFFFFF) {\n\t          delete pageInfo.height;\n\t        }\n\t        var pageSegmentFlags = data[position + 16];\n\t        (0, _util.readUint16)(data, position + 17);\n\t        pageInfo.lossless = !!(pageSegmentFlags & 1);\n\t        pageInfo.refinement = !!(pageSegmentFlags & 2);\n\t        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n\t        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n\t        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n\t        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n\t        args = [pageInfo];\n\t        break;\n\t      case 49:\n\t        break;\n\t      case 50:\n\t        break;\n\t      case 51:\n\t        break;\n\t      case 53:\n\t        args = [header.number, data, position, end];\n\t        break;\n\t      case 62:\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n\t    }\n\t    var callbackName = 'on' + header.typeName;\n\t    if (callbackName in visitor) {\n\t      visitor[callbackName].apply(visitor, args);\n\t    }\n\t  }\n\t  function processSegments(segments, visitor) {\n\t    for (var i = 0, ii = segments.length; i < ii; i++) {\n\t      processSegment(segments[i], visitor);\n\t    }\n\t  }\n\t  function parseJbig2Chunks(chunks) {\n\t    var visitor = new SimpleSegmentVisitor();\n\t    for (var i = 0, ii = chunks.length; i < ii; i++) {\n\t      var chunk = chunks[i];\n\t      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n\t      processSegments(segments, visitor);\n\t    }\n\t    return visitor.buffer;\n\t  }\n\t  function SimpleSegmentVisitor() {}\n\t  SimpleSegmentVisitor.prototype = {\n\t    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n\t      this.currentPageInfo = info;\n\t      var rowSize = info.width + 7 >> 3;\n\t      var buffer = new Uint8ClampedArray(rowSize * info.height);\n\t      if (info.defaultPixelValue) {\n\t        for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] = 0xFF;\n\t        }\n\t      }\n\t      this.buffer = buffer;\n\t    },\n\t    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n\t      var pageInfo = this.currentPageInfo;\n\t      var width = regionInfo.width,\n\t          height = regionInfo.height;\n\t      var rowSize = pageInfo.width + 7 >> 3;\n\t      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n\t      var buffer = this.buffer;\n\t      var mask0 = 128 >> (regionInfo.x & 7);\n\t      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n\t      var i, j, mask, offset;\n\t      switch (combinationOperator) {\n\t        case 0:\n\t          for (i = 0; i < height; i++) {\n\t            mask = mask0;\n\t            offset = offset0;\n\t            for (j = 0; j < width; j++) {\n\t              if (bitmap[i][j]) {\n\t                buffer[offset] |= mask;\n\t              }\n\t              mask >>= 1;\n\t              if (!mask) {\n\t                mask = 128;\n\t                offset++;\n\t              }\n\t            }\n\t            offset0 += rowSize;\n\t          }\n\t          break;\n\t        case 2:\n\t          for (i = 0; i < height; i++) {\n\t            mask = mask0;\n\t            offset = offset0;\n\t            for (j = 0; j < width; j++) {\n\t              if (bitmap[i][j]) {\n\t                buffer[offset] ^= mask;\n\t              }\n\t              mask >>= 1;\n\t              if (!mask) {\n\t                mask = 128;\n\t                offset++;\n\t              }\n\t            }\n\t            offset0 += rowSize;\n\t          }\n\t          break;\n\t        default:\n\t          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t      }\n\t    },\n\t    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n\t      this.onImmediateGenericRegion.apply(this, arguments);\n\t    },\n\t    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n\t      var huffmanTables = void 0,\n\t          huffmanInput = void 0;\n\t      if (dictionary.huffman) {\n\t        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n\t        huffmanInput = new Reader(data, start, end);\n\t      }\n\t      var symbols = this.symbols;\n\t      if (!symbols) {\n\t        this.symbols = symbols = {};\n\t      }\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t        var referredSymbols = symbols[referredSegments[i]];\n\t        if (referredSymbols) {\n\t          inputSymbols = inputSymbols.concat(referredSymbols);\n\t        }\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n\t    },\n\t    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var huffmanTables = void 0,\n\t          huffmanInput = void 0;\n\t      var symbols = this.symbols;\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t        var referredSymbols = symbols[referredSegments[i]];\n\t        if (referredSymbols) {\n\t          inputSymbols = inputSymbols.concat(referredSymbols);\n\t        }\n\t      }\n\t      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n\t      if (region.huffman) {\n\t        huffmanInput = new Reader(data, start, end);\n\t        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n\t      this.onImmediateTextRegion.apply(this, arguments);\n\t    },\n\t    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n\t      var patterns = this.patterns;\n\t      if (!patterns) {\n\t        this.patterns = patterns = {};\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n\t    },\n\t    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n\t      var patterns = this.patterns[referredSegments[0]];\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n\t      this.onImmediateHalftoneRegion.apply(this, arguments);\n\t    },\n\t    onTables: function onTables(currentSegment, data, start, end) {\n\t      var customTables = this.customTables;\n\t      if (!customTables) {\n\t        this.customTables = customTables = {};\n\t      }\n\t      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n\t    }\n\t  };\n\t  function HuffmanLine(lineData) {\n\t    if (lineData.length === 2) {\n\t      this.isOOB = true;\n\t      this.rangeLow = 0;\n\t      this.prefixLength = lineData[0];\n\t      this.rangeLength = 0;\n\t      this.prefixCode = lineData[1];\n\t      this.isLowerRange = false;\n\t    } else {\n\t      this.isOOB = false;\n\t      this.rangeLow = lineData[0];\n\t      this.prefixLength = lineData[1];\n\t      this.rangeLength = lineData[2];\n\t      this.prefixCode = lineData[3];\n\t      this.isLowerRange = lineData[4] === 'lower';\n\t    }\n\t  }\n\t  function HuffmanTreeNode(line) {\n\t    this.children = [];\n\t    if (line) {\n\t      this.isLeaf = true;\n\t      this.rangeLength = line.rangeLength;\n\t      this.rangeLow = line.rangeLow;\n\t      this.isLowerRange = line.isLowerRange;\n\t      this.isOOB = line.isOOB;\n\t    } else {\n\t      this.isLeaf = false;\n\t    }\n\t  }\n\t  HuffmanTreeNode.prototype = {\n\t    buildTree: function buildTree(line, shift) {\n\t      var bit = line.prefixCode >> shift & 1;\n\t      if (shift <= 0) {\n\t        this.children[bit] = new HuffmanTreeNode(line);\n\t      } else {\n\t        var node = this.children[bit];\n\t        if (!node) {\n\t          this.children[bit] = node = new HuffmanTreeNode(null);\n\t        }\n\t        node.buildTree(line, shift - 1);\n\t      }\n\t    },\n\t    decodeNode: function decodeNode(reader) {\n\t      if (this.isLeaf) {\n\t        if (this.isOOB) {\n\t          return null;\n\t        }\n\t        var htOffset = reader.readBits(this.rangeLength);\n\t        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n\t      }\n\t      var node = this.children[reader.readBit()];\n\t      if (!node) {\n\t        throw new Jbig2Error('invalid Huffman data');\n\t      }\n\t      return node.decodeNode(reader);\n\t    }\n\t  };\n\t  function HuffmanTable(lines, prefixCodesDone) {\n\t    if (!prefixCodesDone) {\n\t      this.assignPrefixCodes(lines);\n\t    }\n\t    this.rootNode = new HuffmanTreeNode(null);\n\t    var i = void 0,\n\t        ii = lines.length,\n\t        line = void 0;\n\t    for (i = 0; i < ii; i++) {\n\t      line = lines[i];\n\t      if (line.prefixLength > 0) {\n\t        this.rootNode.buildTree(line, line.prefixLength - 1);\n\t      }\n\t    }\n\t  }\n\t  HuffmanTable.prototype = {\n\t    decode: function decode(reader) {\n\t      return this.rootNode.decodeNode(reader);\n\t    },\n\t    assignPrefixCodes: function assignPrefixCodes(lines) {\n\t      var linesLength = lines.length,\n\t          prefixLengthMax = 0,\n\t          i = void 0;\n\t      for (i = 0; i < linesLength; i++) {\n\t        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n\t      }\n\t      var histogram = new Uint32Array(prefixLengthMax + 1);\n\t      for (i = 0; i < linesLength; i++) {\n\t        histogram[lines[i].prefixLength]++;\n\t      }\n\t      var currentLength = 1,\n\t          firstCode = 0,\n\t          currentCode = void 0,\n\t          currentTemp = void 0,\n\t          line = void 0;\n\t      histogram[0] = 0;\n\t      while (currentLength <= prefixLengthMax) {\n\t        firstCode = firstCode + histogram[currentLength - 1] << 1;\n\t        currentCode = firstCode;\n\t        currentTemp = 0;\n\t        while (currentTemp < linesLength) {\n\t          line = lines[currentTemp];\n\t          if (line.prefixLength === currentLength) {\n\t            line.prefixCode = currentCode;\n\t            currentCode++;\n\t          }\n\t          currentTemp++;\n\t        }\n\t        currentLength++;\n\t      }\n\t    }\n\t  };\n\t  function decodeTablesSegment(data, start, end) {\n\t    var flags = data[start];\n\t    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n\t    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n\t    var reader = new Reader(data, start + 9, end);\n\t    var prefixSizeBits = (flags >> 1 & 7) + 1;\n\t    var rangeSizeBits = (flags >> 4 & 7) + 1;\n\t    var lines = [];\n\t    var prefixLength = void 0,\n\t        rangeLength = void 0,\n\t        currentRangeLow = lowestValue;\n\t    do {\n\t      prefixLength = reader.readBits(prefixSizeBits);\n\t      rangeLength = reader.readBits(rangeSizeBits);\n\t      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n\t      currentRangeLow += 1 << rangeLength;\n\t    } while (currentRangeLow < highestValue);\n\t    prefixLength = reader.readBits(prefixSizeBits);\n\t    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n\t    prefixLength = reader.readBits(prefixSizeBits);\n\t    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n\t    if (flags & 1) {\n\t      prefixLength = reader.readBits(prefixSizeBits);\n\t      lines.push(new HuffmanLine([prefixLength, 0]));\n\t    }\n\t    return new HuffmanTable(lines, false);\n\t  }\n\t  var standardTablesCache = {};\n\t  function getStandardTable(number) {\n\t    var table = standardTablesCache[number];\n\t    if (table) {\n\t      return table;\n\t    }\n\t    var lines = void 0;\n\t    switch (number) {\n\t      case 1:\n\t        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n\t        break;\n\t      case 2:\n\t        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n\t        break;\n\t      case 3:\n\t        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n\t        break;\n\t      case 4:\n\t        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n\t        break;\n\t      case 5:\n\t        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n\t        break;\n\t      case 6:\n\t        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n\t        break;\n\t      case 7:\n\t        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n\t        break;\n\t      case 8:\n\t        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n\t        break;\n\t      case 9:\n\t        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n\t        break;\n\t      case 10:\n\t        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n\t        break;\n\t      case 11:\n\t        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n\t        break;\n\t      case 12:\n\t        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n\t        break;\n\t      case 13:\n\t        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n\t        break;\n\t      case 14:\n\t        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n\t        break;\n\t      case 15:\n\t        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n\t    }\n\t    var length = lines.length,\n\t        i = void 0;\n\t    for (i = 0; i < length; i++) {\n\t      lines[i] = new HuffmanLine(lines[i]);\n\t    }\n\t    table = new HuffmanTable(lines, true);\n\t    standardTablesCache[number] = table;\n\t    return table;\n\t  }\n\t  function Reader(data, start, end) {\n\t    this.data = data;\n\t    this.start = start;\n\t    this.end = end;\n\t    this.position = start;\n\t    this.shift = -1;\n\t    this.currentByte = 0;\n\t  }\n\t  Reader.prototype = {\n\t    readBit: function readBit() {\n\t      if (this.shift < 0) {\n\t        if (this.position >= this.end) {\n\t          throw new Jbig2Error('end of data while reading bit');\n\t        }\n\t        this.currentByte = this.data[this.position++];\n\t        this.shift = 7;\n\t      }\n\t      var bit = this.currentByte >> this.shift & 1;\n\t      this.shift--;\n\t      return bit;\n\t    },\n\t    readBits: function readBits(numBits) {\n\t      var result = 0,\n\t          i = void 0;\n\t      for (i = numBits - 1; i >= 0; i--) {\n\t        result |= this.readBit() << i;\n\t      }\n\t      return result;\n\t    },\n\t    byteAlign: function byteAlign() {\n\t      this.shift = -1;\n\t    },\n\t    next: function next() {\n\t      if (this.position >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.data[this.position++];\n\t    }\n\t  };\n\t  function getCustomHuffmanTable(index, referredTo, customTables) {\n\t    var currentIndex = 0,\n\t        i = void 0,\n\t        ii = referredTo.length,\n\t        table = void 0;\n\t    for (i = 0; i < ii; i++) {\n\t      table = customTables[referredTo[i]];\n\t      if (table) {\n\t        if (index === currentIndex) {\n\t          return table;\n\t        }\n\t        currentIndex++;\n\t      }\n\t    }\n\t    throw new Jbig2Error('can\\'t find custom Huffman table');\n\t  }\n\t  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n\t    var codes = [],\n\t        i = void 0,\n\t        codeLength = void 0;\n\t    for (i = 0; i <= 34; i++) {\n\t      codeLength = reader.readBits(4);\n\t      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n\t    }\n\t    var runCodesTable = new HuffmanTable(codes, false);\n\t    codes.length = 0;\n\t    for (i = 0; i < numberOfSymbols;) {\n\t      codeLength = runCodesTable.decode(reader);\n\t      if (codeLength >= 32) {\n\t        var repeatedLength = void 0,\n\t            numberOfRepeats = void 0,\n\t            j = void 0;\n\t        switch (codeLength) {\n\t          case 32:\n\t            if (i === 0) {\n\t              throw new Jbig2Error('no previous value in symbol ID table');\n\t            }\n\t            numberOfRepeats = reader.readBits(2) + 3;\n\t            repeatedLength = codes[i - 1].prefixLength;\n\t            break;\n\t          case 33:\n\t            numberOfRepeats = reader.readBits(3) + 3;\n\t            repeatedLength = 0;\n\t            break;\n\t          case 34:\n\t            numberOfRepeats = reader.readBits(7) + 11;\n\t            repeatedLength = 0;\n\t            break;\n\t          default:\n\t            throw new Jbig2Error('invalid code length in symbol ID table');\n\t        }\n\t        for (j = 0; j < numberOfRepeats; j++) {\n\t          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n\t          i++;\n\t        }\n\t      } else {\n\t        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n\t        i++;\n\t      }\n\t    }\n\t    reader.byteAlign();\n\t    var symbolIDTable = new HuffmanTable(codes, false);\n\t    var customIndex = 0,\n\t        tableFirstS = void 0,\n\t        tableDeltaS = void 0,\n\t        tableDeltaT = void 0;\n\t    switch (textRegion.huffmanFS) {\n\t      case 0:\n\t      case 1:\n\t        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n\t        break;\n\t      case 3:\n\t        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t        customIndex++;\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('invalid Huffman FS selector');\n\t    }\n\t    switch (textRegion.huffmanDS) {\n\t      case 0:\n\t      case 1:\n\t      case 2:\n\t        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n\t        break;\n\t      case 3:\n\t        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t        customIndex++;\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('invalid Huffman DS selector');\n\t    }\n\t    switch (textRegion.huffmanDT) {\n\t      case 0:\n\t      case 1:\n\t      case 2:\n\t        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n\t        break;\n\t      case 3:\n\t        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t        customIndex++;\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('invalid Huffman DT selector');\n\t    }\n\t    if (textRegion.refinement) {\n\t      throw new Jbig2Error('refinement with Huffman is not supported');\n\t    }\n\t    return {\n\t      symbolIDTable: symbolIDTable,\n\t      tableFirstS: tableFirstS,\n\t      tableDeltaS: tableDeltaS,\n\t      tableDeltaT: tableDeltaT\n\t    };\n\t  }\n\t  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n\t    var customIndex = 0,\n\t        tableDeltaHeight = void 0,\n\t        tableDeltaWidth = void 0;\n\t    switch (dictionary.huffmanDHSelector) {\n\t      case 0:\n\t      case 1:\n\t        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n\t        break;\n\t      case 3:\n\t        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t        customIndex++;\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('invalid Huffman DH selector');\n\t    }\n\t    switch (dictionary.huffmanDWSelector) {\n\t      case 0:\n\t      case 1:\n\t        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n\t        break;\n\t      case 3:\n\t        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t        customIndex++;\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('invalid Huffman DW selector');\n\t    }\n\t    var tableBitmapSize = void 0,\n\t        tableAggregateInstances = void 0;\n\t    if (dictionary.bitmapSizeSelector) {\n\t      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t      customIndex++;\n\t    } else {\n\t      tableBitmapSize = getStandardTable(1);\n\t    }\n\t    if (dictionary.aggregationInstancesSelector) {\n\t      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n\t    } else {\n\t      tableAggregateInstances = getStandardTable(1);\n\t    }\n\t    return {\n\t      tableDeltaHeight: tableDeltaHeight,\n\t      tableDeltaWidth: tableDeltaWidth,\n\t      tableBitmapSize: tableBitmapSize,\n\t      tableAggregateInstances: tableAggregateInstances\n\t    };\n\t  }\n\t  function readUncompressedBitmap(reader, width, height) {\n\t    var bitmap = [],\n\t        x = void 0,\n\t        y = void 0,\n\t        row = void 0;\n\t    for (y = 0; y < height; y++) {\n\t      row = new Uint8Array(width);\n\t      bitmap.push(row);\n\t      for (x = 0; x < width; x++) {\n\t        row[x] = reader.readBit();\n\t      }\n\t      reader.byteAlign();\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeMMRBitmap(input, width, height, endOfBlock) {\n\t    var params = {\n\t      K: -1,\n\t      Columns: width,\n\t      Rows: height,\n\t      BlackIs1: true,\n\t      EndOfBlock: endOfBlock\n\t    };\n\t    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n\t    var bitmap = [],\n\t        x = void 0,\n\t        y = void 0,\n\t        row = void 0,\n\t        currentByte = void 0,\n\t        shift = void 0,\n\t        eof = false;\n\t    for (y = 0; y < height; y++) {\n\t      row = new Uint8Array(width);\n\t      bitmap.push(row);\n\t      shift = -1;\n\t      for (x = 0; x < width; x++) {\n\t        if (shift < 0) {\n\t          currentByte = decoder.readNextChar();\n\t          if (currentByte === -1) {\n\t            currentByte = 0;\n\t            eof = true;\n\t          }\n\t          shift = 7;\n\t        }\n\t        row[x] = currentByte >> shift & 1;\n\t        shift--;\n\t      }\n\t    }\n\t    if (endOfBlock && !eof) {\n\t      var lookForEOFLimit = 5;\n\t      for (var i = 0; i < lookForEOFLimit; i++) {\n\t        if (decoder.readNextChar() === -1) {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function Jbig2Image() {}\n\t  Jbig2Image.prototype = {\n\t    parseChunks: function Jbig2Image_parseChunks(chunks) {\n\t      return parseJbig2Chunks(chunks);\n\t    }\n\t  };\n\t  return Jbig2Image;\n\t}();\n\texports.Jbig2Image = Jbig2Image;\n\n/***/ },\n\n/***/ 695:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Jbig2Stream = undefined;\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _jbig = __webpack_require__(694);\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar Jbig2Stream = function Jbig2StreamClosure() {\n\t  function Jbig2Stream(stream, maybeLength, dict, params) {\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n\t    get: function get() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t\n\t    configurable: true\n\t  });\n\t  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n\t  Jbig2Stream.prototype.readBlock = function () {\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var jbig2Image = new _jbig.Jbig2Image();\n\t    var chunks = [];\n\t    if ((0, _primitives.isDict)(this.params)) {\n\t      var globalsStream = this.params.get('JBIG2Globals');\n\t      if ((0, _primitives.isStream)(globalsStream)) {\n\t        var globals = globalsStream.getBytes();\n\t        chunks.push({\n\t          data: globals,\n\t          start: 0,\n\t          end: globals.length\n\t        });\n\t      }\n\t    }\n\t    chunks.push({\n\t      data: this.bytes,\n\t      start: 0,\n\t      end: this.bytes.length\n\t    });\n\t    var data = jbig2Image.parseChunks(chunks);\n\t    var dataLength = data.length;\n\t    for (var i = 0; i < dataLength; i++) {\n\t      data[i] ^= 0xFF;\n\t    }\n\t    this.buffer = data;\n\t    this.bufferLength = dataLength;\n\t    this.eof = true;\n\t  };\n\t  return Jbig2Stream;\n\t}();\n\texports.Jbig2Stream = Jbig2Stream;\n\n/***/ },\n\n/***/ 696:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpegImage = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar JpegError = function JpegErrorClosure() {\n\t  function JpegError(msg) {\n\t    this.message = 'JPEG error: ' + msg;\n\t  }\n\t  JpegError.prototype = new Error();\n\t  JpegError.prototype.name = 'JpegError';\n\t  JpegError.constructor = JpegError;\n\t  return JpegError;\n\t}();\n\tvar JpegImage = function JpegImageClosure() {\n\t  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n\t  var dctCos1 = 4017;\n\t  var dctSin1 = 799;\n\t  var dctCos3 = 3406;\n\t  var dctSin3 = 2276;\n\t  var dctCos6 = 1567;\n\t  var dctSin6 = 3784;\n\t  var dctSqrt2 = 5793;\n\t  var dctSqrt1d2 = 2896;\n\t  function JpegImage() {\n\t    this.decodeTransform = null;\n\t    this.colorTransform = -1;\n\t  }\n\t  function buildHuffmanTable(codeLengths, values) {\n\t    var k = 0,\n\t        code = [],\n\t        i,\n\t        j,\n\t        length = 16;\n\t    while (length > 0 && !codeLengths[length - 1]) {\n\t      length--;\n\t    }\n\t    code.push({\n\t      children: [],\n\t      index: 0\n\t    });\n\t    var p = code[0],\n\t        q;\n\t    for (i = 0; i < length; i++) {\n\t      for (j = 0; j < codeLengths[i]; j++) {\n\t        p = code.pop();\n\t        p.children[p.index] = values[k];\n\t        while (p.index > 0) {\n\t          p = code.pop();\n\t        }\n\t        p.index++;\n\t        code.push(p);\n\t        while (code.length <= i) {\n\t          code.push(q = {\n\t            children: [],\n\t            index: 0\n\t          });\n\t          p.children[p.index] = q.children;\n\t          p = q;\n\t        }\n\t        k++;\n\t      }\n\t      if (i + 1 < length) {\n\t        code.push(q = {\n\t          children: [],\n\t          index: 0\n\t        });\n\t        p.children[p.index] = q.children;\n\t        p = q;\n\t      }\n\t    }\n\t    return code[0].children;\n\t  }\n\t  function getBlockBufferOffset(component, row, col) {\n\t    return 64 * ((component.blocksPerLine + 1) * row + col);\n\t  }\n\t  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n\t    var mcusPerLine = frame.mcusPerLine;\n\t    var progressive = frame.progressive;\n\t    var startOffset = offset,\n\t        bitsData = 0,\n\t        bitsCount = 0;\n\t    function readBit() {\n\t      if (bitsCount > 0) {\n\t        bitsCount--;\n\t        return bitsData >> bitsCount & 1;\n\t      }\n\t      bitsData = data[offset++];\n\t      if (bitsData === 0xFF) {\n\t        var nextByte = data[offset++];\n\t        if (nextByte) {\n\t          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n\t        }\n\t      }\n\t      bitsCount = 7;\n\t      return bitsData >>> 7;\n\t    }\n\t    function decodeHuffman(tree) {\n\t      var node = tree;\n\t      while (true) {\n\t        node = node[readBit()];\n\t        if (typeof node === 'number') {\n\t          return node;\n\t        }\n\t        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n\t          throw new JpegError('invalid huffman sequence');\n\t        }\n\t      }\n\t    }\n\t    function receive(length) {\n\t      var n = 0;\n\t      while (length > 0) {\n\t        n = n << 1 | readBit();\n\t        length--;\n\t      }\n\t      return n;\n\t    }\n\t    function receiveAndExtend(length) {\n\t      if (length === 1) {\n\t        return readBit() === 1 ? 1 : -1;\n\t      }\n\t      var n = receive(length);\n\t      if (n >= 1 << length - 1) {\n\t        return n;\n\t      }\n\t      return n + (-1 << length) + 1;\n\t    }\n\t    function decodeBaseline(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t);\n\t      component.blockData[offset] = component.pred += diff;\n\t      var k = 1;\n\t      while (k < 64) {\n\t        var rs = decodeHuffman(component.huffmanTableAC);\n\t        var s = rs & 15,\n\t            r = rs >> 4;\n\t        if (s === 0) {\n\t          if (r < 15) {\n\t            break;\n\t          }\n\t          k += 16;\n\t          continue;\n\t        }\n\t        k += r;\n\t        var z = dctZigZag[k];\n\t        component.blockData[offset + z] = receiveAndExtend(s);\n\t        k++;\n\t      }\n\t    }\n\t    function decodeDCFirst(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n\t      component.blockData[offset] = component.pred += diff;\n\t    }\n\t    function decodeDCSuccessive(component, offset) {\n\t      component.blockData[offset] |= readBit() << successive;\n\t    }\n\t    var eobrun = 0;\n\t    function decodeACFirst(component, offset) {\n\t      if (eobrun > 0) {\n\t        eobrun--;\n\t        return;\n\t      }\n\t      var k = spectralStart,\n\t          e = spectralEnd;\n\t      while (k <= e) {\n\t        var rs = decodeHuffman(component.huffmanTableAC);\n\t        var s = rs & 15,\n\t            r = rs >> 4;\n\t        if (s === 0) {\n\t          if (r < 15) {\n\t            eobrun = receive(r) + (1 << r) - 1;\n\t            break;\n\t          }\n\t          k += 16;\n\t          continue;\n\t        }\n\t        k += r;\n\t        var z = dctZigZag[k];\n\t        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n\t        k++;\n\t      }\n\t    }\n\t    var successiveACState = 0,\n\t        successiveACNextValue;\n\t    function decodeACSuccessive(component, offset) {\n\t      var k = spectralStart;\n\t      var e = spectralEnd;\n\t      var r = 0;\n\t      var s;\n\t      var rs;\n\t      while (k <= e) {\n\t        var offsetZ = offset + dctZigZag[k];\n\t        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n\t        switch (successiveACState) {\n\t          case 0:\n\t            rs = decodeHuffman(component.huffmanTableAC);\n\t            s = rs & 15;\n\t            r = rs >> 4;\n\t            if (s === 0) {\n\t              if (r < 15) {\n\t                eobrun = receive(r) + (1 << r);\n\t                successiveACState = 4;\n\t              } else {\n\t                r = 16;\n\t                successiveACState = 1;\n\t              }\n\t            } else {\n\t              if (s !== 1) {\n\t                throw new JpegError('invalid ACn encoding');\n\t              }\n\t              successiveACNextValue = receiveAndExtend(s);\n\t              successiveACState = r ? 2 : 3;\n\t            }\n\t            continue;\n\t          case 1:\n\t          case 2:\n\t            if (component.blockData[offsetZ]) {\n\t              component.blockData[offsetZ] += sign * (readBit() << successive);\n\t            } else {\n\t              r--;\n\t              if (r === 0) {\n\t                successiveACState = successiveACState === 2 ? 3 : 0;\n\t              }\n\t            }\n\t            break;\n\t          case 3:\n\t            if (component.blockData[offsetZ]) {\n\t              component.blockData[offsetZ] += sign * (readBit() << successive);\n\t            } else {\n\t              component.blockData[offsetZ] = successiveACNextValue << successive;\n\t              successiveACState = 0;\n\t            }\n\t            break;\n\t          case 4:\n\t            if (component.blockData[offsetZ]) {\n\t              component.blockData[offsetZ] += sign * (readBit() << successive);\n\t            }\n\t            break;\n\t        }\n\t        k++;\n\t      }\n\t      if (successiveACState === 4) {\n\t        eobrun--;\n\t        if (eobrun === 0) {\n\t          successiveACState = 0;\n\t        }\n\t      }\n\t    }\n\t    function decodeMcu(component, decode, mcu, row, col) {\n\t      var mcuRow = mcu / mcusPerLine | 0;\n\t      var mcuCol = mcu % mcusPerLine;\n\t      var blockRow = mcuRow * component.v + row;\n\t      var blockCol = mcuCol * component.h + col;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t    }\n\t    function decodeBlock(component, decode, mcu) {\n\t      var blockRow = mcu / component.blocksPerLine | 0;\n\t      var blockCol = mcu % component.blocksPerLine;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t    }\n\t    var componentsLength = components.length;\n\t    var component, i, j, k, n;\n\t    var decodeFn;\n\t    if (progressive) {\n\t      if (spectralStart === 0) {\n\t        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n\t      } else {\n\t        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n\t      }\n\t    } else {\n\t      decodeFn = decodeBaseline;\n\t    }\n\t    var mcu = 0,\n\t        fileMarker;\n\t    var mcuExpected;\n\t    if (componentsLength === 1) {\n\t      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n\t    } else {\n\t      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n\t    }\n\t    var h, v;\n\t    while (mcu < mcuExpected) {\n\t      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n\t      for (i = 0; i < componentsLength; i++) {\n\t        components[i].pred = 0;\n\t      }\n\t      eobrun = 0;\n\t      if (componentsLength === 1) {\n\t        component = components[0];\n\t        for (n = 0; n < mcuToRead; n++) {\n\t          decodeBlock(component, decodeFn, mcu);\n\t          mcu++;\n\t        }\n\t      } else {\n\t        for (n = 0; n < mcuToRead; n++) {\n\t          for (i = 0; i < componentsLength; i++) {\n\t            component = components[i];\n\t            h = component.h;\n\t            v = component.v;\n\t            for (j = 0; j < v; j++) {\n\t              for (k = 0; k < h; k++) {\n\t                decodeMcu(component, decodeFn, mcu, j, k);\n\t              }\n\t            }\n\t          }\n\t          mcu++;\n\t        }\n\t      }\n\t      bitsCount = 0;\n\t      fileMarker = findNextFileMarker(data, offset);\n\t      if (fileMarker && fileMarker.invalid) {\n\t        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n\t        offset = fileMarker.offset;\n\t      }\n\t      var marker = fileMarker && fileMarker.marker;\n\t      if (!marker || marker <= 0xFF00) {\n\t        throw new JpegError('marker was not found');\n\t      }\n\t      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n\t        offset += 2;\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    fileMarker = findNextFileMarker(data, offset);\n\t    if (fileMarker && fileMarker.invalid) {\n\t      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n\t      offset = fileMarker.offset;\n\t    }\n\t    return offset - startOffset;\n\t  }\n\t  function quantizeAndInverse(component, blockBufferOffset, p) {\n\t    var qt = component.quantizationTable,\n\t        blockData = component.blockData;\n\t    var v0, v1, v2, v3, v4, v5, v6, v7;\n\t    var p0, p1, p2, p3, p4, p5, p6, p7;\n\t    var t;\n\t    if (!qt) {\n\t      throw new JpegError('missing required Quantization Table.');\n\t    }\n\t    for (var row = 0; row < 64; row += 8) {\n\t      p0 = blockData[blockBufferOffset + row];\n\t      p1 = blockData[blockBufferOffset + row + 1];\n\t      p2 = blockData[blockBufferOffset + row + 2];\n\t      p3 = blockData[blockBufferOffset + row + 3];\n\t      p4 = blockData[blockBufferOffset + row + 4];\n\t      p5 = blockData[blockBufferOffset + row + 5];\n\t      p6 = blockData[blockBufferOffset + row + 6];\n\t      p7 = blockData[blockBufferOffset + row + 7];\n\t      p0 *= qt[row];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t        t = dctSqrt2 * p0 + 512 >> 10;\n\t        p[row] = t;\n\t        p[row + 1] = t;\n\t        p[row + 2] = t;\n\t        p[row + 3] = t;\n\t        p[row + 4] = t;\n\t        p[row + 5] = t;\n\t        p[row + 6] = t;\n\t        p[row + 7] = t;\n\t        continue;\n\t      }\n\t      p1 *= qt[row + 1];\n\t      p2 *= qt[row + 2];\n\t      p3 *= qt[row + 3];\n\t      p4 *= qt[row + 4];\n\t      p5 *= qt[row + 5];\n\t      p6 *= qt[row + 6];\n\t      p7 *= qt[row + 7];\n\t      v0 = dctSqrt2 * p0 + 128 >> 8;\n\t      v1 = dctSqrt2 * p4 + 128 >> 8;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n\t      v5 = p3 << 4;\n\t      v6 = p5 << 4;\n\t      v0 = v0 + v1 + 1 >> 1;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p[row] = v0 + v7;\n\t      p[row + 7] = v0 - v7;\n\t      p[row + 1] = v1 + v6;\n\t      p[row + 6] = v1 - v6;\n\t      p[row + 2] = v2 + v5;\n\t      p[row + 5] = v2 - v5;\n\t      p[row + 3] = v3 + v4;\n\t      p[row + 4] = v3 - v4;\n\t    }\n\t    for (var col = 0; col < 8; ++col) {\n\t      p0 = p[col];\n\t      p1 = p[col + 8];\n\t      p2 = p[col + 16];\n\t      p3 = p[col + 24];\n\t      p4 = p[col + 32];\n\t      p5 = p[col + 40];\n\t      p6 = p[col + 48];\n\t      p7 = p[col + 56];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t        t = dctSqrt2 * p0 + 8192 >> 14;\n\t        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n\t        blockData[blockBufferOffset + col] = t;\n\t        blockData[blockBufferOffset + col + 8] = t;\n\t        blockData[blockBufferOffset + col + 16] = t;\n\t        blockData[blockBufferOffset + col + 24] = t;\n\t        blockData[blockBufferOffset + col + 32] = t;\n\t        blockData[blockBufferOffset + col + 40] = t;\n\t        blockData[blockBufferOffset + col + 48] = t;\n\t        blockData[blockBufferOffset + col + 56] = t;\n\t        continue;\n\t      }\n\t      v0 = dctSqrt2 * p0 + 2048 >> 12;\n\t      v1 = dctSqrt2 * p4 + 2048 >> 12;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n\t      v5 = p3;\n\t      v6 = p5;\n\t      v0 = (v0 + v1 + 1 >> 1) + 4112;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p0 = v0 + v7;\n\t      p7 = v0 - v7;\n\t      p1 = v1 + v6;\n\t      p6 = v1 - v6;\n\t      p2 = v2 + v5;\n\t      p5 = v2 - v5;\n\t      p3 = v3 + v4;\n\t      p4 = v3 - v4;\n\t      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n\t      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n\t      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n\t      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n\t      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n\t      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n\t      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n\t      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n\t      blockData[blockBufferOffset + col] = p0;\n\t      blockData[blockBufferOffset + col + 8] = p1;\n\t      blockData[blockBufferOffset + col + 16] = p2;\n\t      blockData[blockBufferOffset + col + 24] = p3;\n\t      blockData[blockBufferOffset + col + 32] = p4;\n\t      blockData[blockBufferOffset + col + 40] = p5;\n\t      blockData[blockBufferOffset + col + 48] = p6;\n\t      blockData[blockBufferOffset + col + 56] = p7;\n\t    }\n\t  }\n\t  function buildComponentData(frame, component) {\n\t    var blocksPerLine = component.blocksPerLine;\n\t    var blocksPerColumn = component.blocksPerColumn;\n\t    var computationBuffer = new Int16Array(64);\n\t    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n\t      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n\t        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t        quantizeAndInverse(component, offset, computationBuffer);\n\t      }\n\t    }\n\t    return component.blockData;\n\t  }\n\t  function findNextFileMarker(data, currentPos, startPos) {\n\t    function peekUint16(pos) {\n\t      return data[pos] << 8 | data[pos + 1];\n\t    }\n\t    var maxPos = data.length - 1;\n\t    var newPos = startPos < currentPos ? startPos : currentPos;\n\t    if (currentPos >= maxPos) {\n\t      return null;\n\t    }\n\t    var currentMarker = peekUint16(currentPos);\n\t    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n\t      return {\n\t        invalid: null,\n\t        marker: currentMarker,\n\t        offset: currentPos\n\t      };\n\t    }\n\t    var newMarker = peekUint16(newPos);\n\t    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n\t      if (++newPos >= maxPos) {\n\t        return null;\n\t      }\n\t      newMarker = peekUint16(newPos);\n\t    }\n\t    return {\n\t      invalid: currentMarker.toString(16),\n\t      marker: newMarker,\n\t      offset: newPos\n\t    };\n\t  }\n\t  JpegImage.prototype = {\n\t    parse: function parse(data) {\n\t      function readUint16() {\n\t        var value = data[offset] << 8 | data[offset + 1];\n\t        offset += 2;\n\t        return value;\n\t      }\n\t      function readDataBlock() {\n\t        var length = readUint16();\n\t        var endOffset = offset + length - 2;\n\t        var fileMarker = findNextFileMarker(data, endOffset, offset);\n\t        if (fileMarker && fileMarker.invalid) {\n\t          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n\t          endOffset = fileMarker.offset;\n\t        }\n\t        var array = data.subarray(offset, endOffset);\n\t        offset += array.length;\n\t        return array;\n\t      }\n\t      function prepareComponents(frame) {\n\t        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n\t        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n\t        for (var i = 0; i < frame.components.length; i++) {\n\t          component = frame.components[i];\n\t          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n\t          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n\t          var blocksPerLineForMcu = mcusPerLine * component.h;\n\t          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\t          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n\t          component.blockData = new Int16Array(blocksBufferSize);\n\t          component.blocksPerLine = blocksPerLine;\n\t          component.blocksPerColumn = blocksPerColumn;\n\t        }\n\t        frame.mcusPerLine = mcusPerLine;\n\t        frame.mcusPerColumn = mcusPerColumn;\n\t      }\n\t      var offset = 0;\n\t      var jfif = null;\n\t      var adobe = null;\n\t      var frame, resetInterval;\n\t      var quantizationTables = [];\n\t      var huffmanTablesAC = [],\n\t          huffmanTablesDC = [];\n\t      var fileMarker = readUint16();\n\t      if (fileMarker !== 0xFFD8) {\n\t        throw new JpegError('SOI not found');\n\t      }\n\t      fileMarker = readUint16();\n\t      while (fileMarker !== 0xFFD9) {\n\t        var i, j, l;\n\t        switch (fileMarker) {\n\t          case 0xFFE0:\n\t          case 0xFFE1:\n\t          case 0xFFE2:\n\t          case 0xFFE3:\n\t          case 0xFFE4:\n\t          case 0xFFE5:\n\t          case 0xFFE6:\n\t          case 0xFFE7:\n\t          case 0xFFE8:\n\t          case 0xFFE9:\n\t          case 0xFFEA:\n\t          case 0xFFEB:\n\t          case 0xFFEC:\n\t          case 0xFFED:\n\t          case 0xFFEE:\n\t          case 0xFFEF:\n\t          case 0xFFFE:\n\t            var appData = readDataBlock();\n\t            if (fileMarker === 0xFFE0) {\n\t              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n\t                jfif = {\n\t                  version: {\n\t                    major: appData[5],\n\t                    minor: appData[6]\n\t                  },\n\t                  densityUnits: appData[7],\n\t                  xDensity: appData[8] << 8 | appData[9],\n\t                  yDensity: appData[10] << 8 | appData[11],\n\t                  thumbWidth: appData[12],\n\t                  thumbHeight: appData[13],\n\t                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n\t                };\n\t              }\n\t            }\n\t            if (fileMarker === 0xFFEE) {\n\t              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n\t                adobe = {\n\t                  version: appData[5] << 8 | appData[6],\n\t                  flags0: appData[7] << 8 | appData[8],\n\t                  flags1: appData[9] << 8 | appData[10],\n\t                  transformCode: appData[11]\n\t                };\n\t              }\n\t            }\n\t            break;\n\t          case 0xFFDB:\n\t            var quantizationTablesLength = readUint16();\n\t            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n\t            var z;\n\t            while (offset < quantizationTablesEnd) {\n\t              var quantizationTableSpec = data[offset++];\n\t              var tableData = new Uint16Array(64);\n\t              if (quantizationTableSpec >> 4 === 0) {\n\t                for (j = 0; j < 64; j++) {\n\t                  z = dctZigZag[j];\n\t                  tableData[z] = data[offset++];\n\t                }\n\t              } else if (quantizationTableSpec >> 4 === 1) {\n\t                for (j = 0; j < 64; j++) {\n\t                  z = dctZigZag[j];\n\t                  tableData[z] = readUint16();\n\t                }\n\t              } else {\n\t                throw new JpegError('DQT - invalid table spec');\n\t              }\n\t              quantizationTables[quantizationTableSpec & 15] = tableData;\n\t            }\n\t            break;\n\t          case 0xFFC0:\n\t          case 0xFFC1:\n\t          case 0xFFC2:\n\t            if (frame) {\n\t              throw new JpegError('Only single frame JPEGs supported');\n\t            }\n\t            readUint16();\n\t            frame = {};\n\t            frame.extended = fileMarker === 0xFFC1;\n\t            frame.progressive = fileMarker === 0xFFC2;\n\t            frame.precision = data[offset++];\n\t            frame.scanLines = readUint16();\n\t            frame.samplesPerLine = readUint16();\n\t            frame.components = [];\n\t            frame.componentIds = {};\n\t            var componentsCount = data[offset++],\n\t                componentId;\n\t            var maxH = 0,\n\t                maxV = 0;\n\t            for (i = 0; i < componentsCount; i++) {\n\t              componentId = data[offset];\n\t              var h = data[offset + 1] >> 4;\n\t              var v = data[offset + 1] & 15;\n\t              if (maxH < h) {\n\t                maxH = h;\n\t              }\n\t              if (maxV < v) {\n\t                maxV = v;\n\t              }\n\t              var qId = data[offset + 2];\n\t              l = frame.components.push({\n\t                h: h,\n\t                v: v,\n\t                quantizationId: qId,\n\t                quantizationTable: null\n\t              });\n\t              frame.componentIds[componentId] = l - 1;\n\t              offset += 3;\n\t            }\n\t            frame.maxH = maxH;\n\t            frame.maxV = maxV;\n\t            prepareComponents(frame);\n\t            break;\n\t          case 0xFFC4:\n\t            var huffmanLength = readUint16();\n\t            for (i = 2; i < huffmanLength;) {\n\t              var huffmanTableSpec = data[offset++];\n\t              var codeLengths = new Uint8Array(16);\n\t              var codeLengthSum = 0;\n\t              for (j = 0; j < 16; j++, offset++) {\n\t                codeLengthSum += codeLengths[j] = data[offset];\n\t              }\n\t              var huffmanValues = new Uint8Array(codeLengthSum);\n\t              for (j = 0; j < codeLengthSum; j++, offset++) {\n\t                huffmanValues[j] = data[offset];\n\t              }\n\t              i += 17 + codeLengthSum;\n\t              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n\t            }\n\t            break;\n\t          case 0xFFDD:\n\t            readUint16();\n\t            resetInterval = readUint16();\n\t            break;\n\t          case 0xFFDA:\n\t            readUint16();\n\t            var selectorsCount = data[offset++];\n\t            var components = [],\n\t                component;\n\t            for (i = 0; i < selectorsCount; i++) {\n\t              var componentIndex = frame.componentIds[data[offset++]];\n\t              component = frame.components[componentIndex];\n\t              var tableSpec = data[offset++];\n\t              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n\t              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n\t              components.push(component);\n\t            }\n\t            var spectralStart = data[offset++];\n\t            var spectralEnd = data[offset++];\n\t            var successiveApproximation = data[offset++];\n\t            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n\t            offset += processed;\n\t            break;\n\t          case 0xFFFF:\n\t            if (data[offset] !== 0xFF) {\n\t              offset--;\n\t            }\n\t            break;\n\t          default:\n\t            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n\t              offset -= 3;\n\t              break;\n\t            }\n\t            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n\t        }\n\t        fileMarker = readUint16();\n\t      }\n\t      this.width = frame.samplesPerLine;\n\t      this.height = frame.scanLines;\n\t      this.jfif = jfif;\n\t      this.adobe = adobe;\n\t      this.components = [];\n\t      for (i = 0; i < frame.components.length; i++) {\n\t        component = frame.components[i];\n\t        var quantizationTable = quantizationTables[component.quantizationId];\n\t        if (quantizationTable) {\n\t          component.quantizationTable = quantizationTable;\n\t        }\n\t        this.components.push({\n\t          output: buildComponentData(frame, component),\n\t          scaleX: component.h / frame.maxH,\n\t          scaleY: component.v / frame.maxV,\n\t          blocksPerLine: component.blocksPerLine,\n\t          blocksPerColumn: component.blocksPerColumn\n\t        });\n\t      }\n\t      this.numComponents = this.components.length;\n\t    },\n\t    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n\t      var scaleX = this.width / width,\n\t          scaleY = this.height / height;\n\t      var component, componentScaleX, componentScaleY, blocksPerScanline;\n\t      var x, y, i, j, k;\n\t      var index;\n\t      var offset = 0;\n\t      var output;\n\t      var numComponents = this.components.length;\n\t      var dataLength = width * height * numComponents;\n\t      var data = new Uint8ClampedArray(dataLength);\n\t      var xScaleBlockOffset = new Uint32Array(width);\n\t      var mask3LSB = 0xfffffff8;\n\t      for (i = 0; i < numComponents; i++) {\n\t        component = this.components[i];\n\t        componentScaleX = component.scaleX * scaleX;\n\t        componentScaleY = component.scaleY * scaleY;\n\t        offset = i;\n\t        output = component.output;\n\t        blocksPerScanline = component.blocksPerLine + 1 << 3;\n\t        for (x = 0; x < width; x++) {\n\t          j = 0 | x * componentScaleX;\n\t          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n\t        }\n\t        for (y = 0; y < height; y++) {\n\t          j = 0 | y * componentScaleY;\n\t          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n\t          for (x = 0; x < width; x++) {\n\t            data[offset] = output[index + xScaleBlockOffset[x]];\n\t            offset += numComponents;\n\t          }\n\t        }\n\t      }\n\t      var transform = this.decodeTransform;\n\t      if (transform) {\n\t        for (i = 0; i < dataLength;) {\n\t          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n\t            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n\t          }\n\t        }\n\t      }\n\t      return data;\n\t    },\n\t    _isColorConversionNeeded: function _isColorConversionNeeded() {\n\t      if (this.adobe) {\n\t        return !!this.adobe.transformCode;\n\t      }\n\t      if (this.numComponents === 3) {\n\t        if (this.colorTransform === 0) {\n\t          return false;\n\t        }\n\t        return true;\n\t      }\n\t      if (this.colorTransform === 1) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    _convertYccToRgb: function convertYccToRgb(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 3) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        data[i] = Y - 179.456 + 1.402 * Cr;\n\t        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n\t        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n\t      }\n\t      return data;\n\t    },\n\t    _convertYcckToRgb: function convertYcckToRgb(data) {\n\t      var Y, Cb, Cr, k;\n\t      var offset = 0;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        k = data[i + 3];\n\t        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n\t        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n\t        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n\t      }\n\t      return data;\n\t    },\n\t    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        data[i] = 434.456 - Y - 1.402 * Cr;\n\t        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n\t        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n\t      }\n\t      return data;\n\t    },\n\t    _convertCmykToRgb: function convertCmykToRgb(data) {\n\t      var c, m, y, k;\n\t      var offset = 0;\n\t      var scale = 1 / 255;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        c = data[i] * scale;\n\t        m = data[i + 1] * scale;\n\t        y = data[i + 2] * scale;\n\t        k = data[i + 3] * scale;\n\t        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n\t        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n\t        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n\t      }\n\t      return data;\n\t    },\n\t    getData: function getData(width, height, forceRGBoutput) {\n\t      if (this.numComponents > 4) {\n\t        throw new JpegError('Unsupported color mode');\n\t      }\n\t      var data = this._getLinearizedBlockData(width, height);\n\t      if (this.numComponents === 1 && forceRGBoutput) {\n\t        var dataLength = data.length;\n\t        var rgbData = new Uint8ClampedArray(dataLength * 3);\n\t        var offset = 0;\n\t        for (var i = 0; i < dataLength; i++) {\n\t          var grayColor = data[i];\n\t          rgbData[offset++] = grayColor;\n\t          rgbData[offset++] = grayColor;\n\t          rgbData[offset++] = grayColor;\n\t        }\n\t        return rgbData;\n\t      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n\t        return this._convertYccToRgb(data);\n\t      } else if (this.numComponents === 4) {\n\t        if (this._isColorConversionNeeded()) {\n\t          if (forceRGBoutput) {\n\t            return this._convertYcckToRgb(data);\n\t          }\n\t          return this._convertYcckToCmyk(data);\n\t        } else if (forceRGBoutput) {\n\t          return this._convertCmykToRgb(data);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t  };\n\t  return JpegImage;\n\t}();\n\texports.JpegImage = JpegImage;\n\n/***/ },\n\n/***/ 697:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpxStream = undefined;\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar _jpx = __webpack_require__(407);\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar JpxStream = function JpxStreamClosure() {\n\t  function JpxStream(stream, maybeLength, dict, params) {\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  Object.defineProperty(JpxStream.prototype, 'bytes', {\n\t    get: function JpxStream_bytes() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t    configurable: true\n\t  });\n\t  JpxStream.prototype.ensureBuffer = function (requested) {};\n\t  JpxStream.prototype.readBlock = function () {\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var jpxImage = new _jpx.JpxImage();\n\t    jpxImage.parse(this.bytes);\n\t    var width = jpxImage.width;\n\t    var height = jpxImage.height;\n\t    var componentsCount = jpxImage.componentsCount;\n\t    var tileCount = jpxImage.tiles.length;\n\t    if (tileCount === 1) {\n\t      this.buffer = jpxImage.tiles[0].items;\n\t    } else {\n\t      var data = new Uint8ClampedArray(width * height * componentsCount);\n\t      for (var k = 0; k < tileCount; k++) {\n\t        var tileComponents = jpxImage.tiles[k];\n\t        var tileWidth = tileComponents.width;\n\t        var tileHeight = tileComponents.height;\n\t        var tileLeft = tileComponents.left;\n\t        var tileTop = tileComponents.top;\n\t        var src = tileComponents.items;\n\t        var srcPosition = 0;\n\t        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n\t        var imgRowSize = width * componentsCount;\n\t        var tileRowSize = tileWidth * componentsCount;\n\t        for (var j = 0; j < tileHeight; j++) {\n\t          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n\t          data.set(rowBytes, dataPosition);\n\t          srcPosition += tileRowSize;\n\t          dataPosition += imgRowSize;\n\t        }\n\t      }\n\t      this.buffer = data;\n\t    }\n\t    this.bufferLength = this.buffer.length;\n\t    this.eof = true;\n\t  };\n\t  return JpxStream;\n\t}();\n\texports.JpxStream = JpxStream;\n\n/***/ },\n\n/***/ 698:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getMetrics = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Courier'] = 600;\n\t  t['Courier-Bold'] = 600;\n\t  t['Courier-BoldOblique'] = 600;\n\t  t['Courier-Oblique'] = 600;\n\t  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 278;\n\t    t['quotedbl'] = 355;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 667;\n\t    t['quoteright'] = 222;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 556;\n\t    t['at'] = 1015;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 278;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 278;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 222;\n\t    t['a'] = 556;\n\t    t['b'] = 556;\n\t    t['c'] = 500;\n\t    t['d'] = 556;\n\t    t['e'] = 556;\n\t    t['f'] = 278;\n\t    t['g'] = 556;\n\t    t['h'] = 556;\n\t    t['i'] = 222;\n\t    t['j'] = 222;\n\t    t['k'] = 500;\n\t    t['l'] = 222;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 556;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 333;\n\t    t['s'] = 500;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 334;\n\t    t['bar'] = 260;\n\t    t['braceright'] = 334;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 191;\n\t    t['quotedblleft'] = 333;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 537;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 222;\n\t    t['quotedblbase'] = 333;\n\t    t['quotedblright'] = 333;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 222;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 500;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 500;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 222;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 500;\n\t    t['scedilla'] = 500;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 500;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 643;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 500;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 260;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 556;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 222;\n\t    t['tcaron'] = 317;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 222;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 556;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 500;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 556;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 299;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 556;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 556;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 556;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 556;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 556;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 556;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 556;\n\t    t['eth'] = 556;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 474;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 722;\n\t    t['quoteright'] = 278;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 611;\n\t    t['at'] = 975;\n\t    t['A'] = 722;\n\t    t['B'] = 722;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 556;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 584;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 278;\n\t    t['a'] = 556;\n\t    t['b'] = 611;\n\t    t['c'] = 556;\n\t    t['d'] = 611;\n\t    t['e'] = 556;\n\t    t['f'] = 333;\n\t    t['g'] = 611;\n\t    t['h'] = 611;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 889;\n\t    t['n'] = 611;\n\t    t['o'] = 611;\n\t    t['p'] = 611;\n\t    t['q'] = 611;\n\t    t['r'] = 389;\n\t    t['s'] = 556;\n\t    t['t'] = 333;\n\t    t['u'] = 611;\n\t    t['v'] = 556;\n\t    t['w'] = 778;\n\t    t['x'] = 556;\n\t    t['y'] = 556;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 389;\n\t    t['bar'] = 280;\n\t    t['braceright'] = 389;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 238;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 611;\n\t    t['fl'] = 611;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 556;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 278;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 611;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 556;\n\t    t['scommaaccent'] = 556;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 611;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 556;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 556;\n\t    t['scedilla'] = 556;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 611;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 556;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 743;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 611;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 611;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 556;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 556;\n\t    t['nacute'] = 611;\n\t    t['umacron'] = 611;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 280;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 611;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 389;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 611;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 556;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 611;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 611;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 611;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 611;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 400;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 611;\n\t    t['ntilde'] = 611;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 611;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 611;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 611;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 611;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 611;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 611;\n\t    t['udieresis'] = 611;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 611;\n\t    t['eth'] = 611;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 611;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 474;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 722;\n\t    t['quoteright'] = 278;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 611;\n\t    t['at'] = 975;\n\t    t['A'] = 722;\n\t    t['B'] = 722;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 556;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 584;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 278;\n\t    t['a'] = 556;\n\t    t['b'] = 611;\n\t    t['c'] = 556;\n\t    t['d'] = 611;\n\t    t['e'] = 556;\n\t    t['f'] = 333;\n\t    t['g'] = 611;\n\t    t['h'] = 611;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 889;\n\t    t['n'] = 611;\n\t    t['o'] = 611;\n\t    t['p'] = 611;\n\t    t['q'] = 611;\n\t    t['r'] = 389;\n\t    t['s'] = 556;\n\t    t['t'] = 333;\n\t    t['u'] = 611;\n\t    t['v'] = 556;\n\t    t['w'] = 778;\n\t    t['x'] = 556;\n\t    t['y'] = 556;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 389;\n\t    t['bar'] = 280;\n\t    t['braceright'] = 389;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 238;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 611;\n\t    t['fl'] = 611;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 556;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 278;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 611;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 556;\n\t    t['scommaaccent'] = 556;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 611;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 556;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 556;\n\t    t['scedilla'] = 556;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 611;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 556;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 743;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 611;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 611;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 556;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 556;\n\t    t['nacute'] = 611;\n\t    t['umacron'] = 611;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 280;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 611;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 389;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 611;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 556;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 611;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 611;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 611;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 611;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 400;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 611;\n\t    t['ntilde'] = 611;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 611;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 611;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 611;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 611;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 611;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 611;\n\t    t['udieresis'] = 611;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 611;\n\t    t['eth'] = 611;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 611;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 278;\n\t    t['quotedbl'] = 355;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 667;\n\t    t['quoteright'] = 222;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 556;\n\t    t['at'] = 1015;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 278;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 278;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 222;\n\t    t['a'] = 556;\n\t    t['b'] = 556;\n\t    t['c'] = 500;\n\t    t['d'] = 556;\n\t    t['e'] = 556;\n\t    t['f'] = 278;\n\t    t['g'] = 556;\n\t    t['h'] = 556;\n\t    t['i'] = 222;\n\t    t['j'] = 222;\n\t    t['k'] = 500;\n\t    t['l'] = 222;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 556;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 333;\n\t    t['s'] = 500;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 334;\n\t    t['bar'] = 260;\n\t    t['braceright'] = 334;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 191;\n\t    t['quotedblleft'] = 333;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 537;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 222;\n\t    t['quotedblbase'] = 333;\n\t    t['quotedblright'] = 333;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 222;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 500;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 500;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 222;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 500;\n\t    t['scedilla'] = 500;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 500;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 643;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 500;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 260;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 556;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 222;\n\t    t['tcaron'] = 317;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 222;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 556;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 500;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 556;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 299;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 556;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 556;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 556;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 556;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 556;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 556;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 556;\n\t    t['eth'] = 556;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['universal'] = 713;\n\t    t['numbersign'] = 500;\n\t    t['existential'] = 549;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['suchthat'] = 439;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asteriskmath'] = 500;\n\t    t['plus'] = 549;\n\t    t['comma'] = 250;\n\t    t['minus'] = 549;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 549;\n\t    t['equal'] = 549;\n\t    t['greater'] = 549;\n\t    t['question'] = 444;\n\t    t['congruent'] = 549;\n\t    t['Alpha'] = 722;\n\t    t['Beta'] = 667;\n\t    t['Chi'] = 722;\n\t    t['Delta'] = 612;\n\t    t['Epsilon'] = 611;\n\t    t['Phi'] = 763;\n\t    t['Gamma'] = 603;\n\t    t['Eta'] = 722;\n\t    t['Iota'] = 333;\n\t    t['theta1'] = 631;\n\t    t['Kappa'] = 722;\n\t    t['Lambda'] = 686;\n\t    t['Mu'] = 889;\n\t    t['Nu'] = 722;\n\t    t['Omicron'] = 722;\n\t    t['Pi'] = 768;\n\t    t['Theta'] = 741;\n\t    t['Rho'] = 556;\n\t    t['Sigma'] = 592;\n\t    t['Tau'] = 611;\n\t    t['Upsilon'] = 690;\n\t    t['sigma1'] = 439;\n\t    t['Omega'] = 768;\n\t    t['Xi'] = 645;\n\t    t['Psi'] = 795;\n\t    t['Zeta'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['therefore'] = 863;\n\t    t['bracketright'] = 333;\n\t    t['perpendicular'] = 658;\n\t    t['underscore'] = 500;\n\t    t['radicalex'] = 500;\n\t    t['alpha'] = 631;\n\t    t['beta'] = 549;\n\t    t['chi'] = 549;\n\t    t['delta'] = 494;\n\t    t['epsilon'] = 439;\n\t    t['phi'] = 521;\n\t    t['gamma'] = 411;\n\t    t['eta'] = 603;\n\t    t['iota'] = 329;\n\t    t['phi1'] = 603;\n\t    t['kappa'] = 549;\n\t    t['lambda'] = 549;\n\t    t['mu'] = 576;\n\t    t['nu'] = 521;\n\t    t['omicron'] = 549;\n\t    t['pi'] = 549;\n\t    t['theta'] = 521;\n\t    t['rho'] = 549;\n\t    t['sigma'] = 603;\n\t    t['tau'] = 439;\n\t    t['upsilon'] = 576;\n\t    t['omega1'] = 713;\n\t    t['omega'] = 686;\n\t    t['xi'] = 493;\n\t    t['psi'] = 686;\n\t    t['zeta'] = 494;\n\t    t['braceleft'] = 480;\n\t    t['bar'] = 200;\n\t    t['braceright'] = 480;\n\t    t['similar'] = 549;\n\t    t['Euro'] = 750;\n\t    t['Upsilon1'] = 620;\n\t    t['minute'] = 247;\n\t    t['lessequal'] = 549;\n\t    t['fraction'] = 167;\n\t    t['infinity'] = 713;\n\t    t['florin'] = 500;\n\t    t['club'] = 753;\n\t    t['diamond'] = 753;\n\t    t['heart'] = 753;\n\t    t['spade'] = 753;\n\t    t['arrowboth'] = 1042;\n\t    t['arrowleft'] = 987;\n\t    t['arrowup'] = 603;\n\t    t['arrowright'] = 987;\n\t    t['arrowdown'] = 603;\n\t    t['degree'] = 400;\n\t    t['plusminus'] = 549;\n\t    t['second'] = 411;\n\t    t['greaterequal'] = 549;\n\t    t['multiply'] = 549;\n\t    t['proportional'] = 713;\n\t    t['partialdiff'] = 494;\n\t    t['bullet'] = 460;\n\t    t['divide'] = 549;\n\t    t['notequal'] = 549;\n\t    t['equivalence'] = 549;\n\t    t['approxequal'] = 549;\n\t    t['ellipsis'] = 1000;\n\t    t['arrowvertex'] = 603;\n\t    t['arrowhorizex'] = 1000;\n\t    t['carriagereturn'] = 658;\n\t    t['aleph'] = 823;\n\t    t['Ifraktur'] = 686;\n\t    t['Rfraktur'] = 795;\n\t    t['weierstrass'] = 987;\n\t    t['circlemultiply'] = 768;\n\t    t['circleplus'] = 768;\n\t    t['emptyset'] = 823;\n\t    t['intersection'] = 768;\n\t    t['union'] = 768;\n\t    t['propersuperset'] = 713;\n\t    t['reflexsuperset'] = 713;\n\t    t['notsubset'] = 713;\n\t    t['propersubset'] = 713;\n\t    t['reflexsubset'] = 713;\n\t    t['element'] = 713;\n\t    t['notelement'] = 713;\n\t    t['angle'] = 768;\n\t    t['gradient'] = 713;\n\t    t['registerserif'] = 790;\n\t    t['copyrightserif'] = 790;\n\t    t['trademarkserif'] = 890;\n\t    t['product'] = 823;\n\t    t['radical'] = 549;\n\t    t['dotmath'] = 250;\n\t    t['logicalnot'] = 713;\n\t    t['logicaland'] = 603;\n\t    t['logicalor'] = 603;\n\t    t['arrowdblboth'] = 1042;\n\t    t['arrowdblleft'] = 987;\n\t    t['arrowdblup'] = 603;\n\t    t['arrowdblright'] = 987;\n\t    t['arrowdbldown'] = 603;\n\t    t['lozenge'] = 494;\n\t    t['angleleft'] = 329;\n\t    t['registersans'] = 790;\n\t    t['copyrightsans'] = 790;\n\t    t['trademarksans'] = 786;\n\t    t['summation'] = 713;\n\t    t['parenlefttp'] = 384;\n\t    t['parenleftex'] = 384;\n\t    t['parenleftbt'] = 384;\n\t    t['bracketlefttp'] = 384;\n\t    t['bracketleftex'] = 384;\n\t    t['bracketleftbt'] = 384;\n\t    t['bracelefttp'] = 494;\n\t    t['braceleftmid'] = 494;\n\t    t['braceleftbt'] = 494;\n\t    t['braceex'] = 494;\n\t    t['angleright'] = 329;\n\t    t['integral'] = 274;\n\t    t['integraltp'] = 686;\n\t    t['integralex'] = 686;\n\t    t['integralbt'] = 686;\n\t    t['parenrighttp'] = 384;\n\t    t['parenrightex'] = 384;\n\t    t['parenrightbt'] = 384;\n\t    t['bracketrighttp'] = 384;\n\t    t['bracketrightex'] = 384;\n\t    t['bracketrightbt'] = 384;\n\t    t['bracerighttp'] = 494;\n\t    t['bracerightmid'] = 494;\n\t    t['bracerightbt'] = 494;\n\t    t['apple'] = 790;\n\t  });\n\t  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 408;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 564;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 564;\n\t    t['equal'] = 564;\n\t    t['greater'] = 564;\n\t    t['question'] = 444;\n\t    t['at'] = 921;\n\t    t['A'] = 722;\n\t    t['B'] = 667;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 611;\n\t    t['F'] = 556;\n\t    t['G'] = 722;\n\t    t['H'] = 722;\n\t    t['I'] = 333;\n\t    t['J'] = 389;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 889;\n\t    t['N'] = 722;\n\t    t['O'] = 722;\n\t    t['P'] = 556;\n\t    t['Q'] = 722;\n\t    t['R'] = 667;\n\t    t['S'] = 556;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 722;\n\t    t['W'] = 944;\n\t    t['X'] = 722;\n\t    t['Y'] = 722;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 444;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 500;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 500;\n\t    t['l'] = 278;\n\t    t['m'] = 778;\n\t    t['n'] = 500;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 333;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 500;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 444;\n\t    t['braceleft'] = 480;\n\t    t['bar'] = 200;\n\t    t['braceright'] = 480;\n\t    t['asciitilde'] = 541;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 180;\n\t    t['quotedblleft'] = 444;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 453;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 444;\n\t    t['quotedblright'] = 444;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 444;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 889;\n\t    t['ordfeminine'] = 276;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 889;\n\t    t['ordmasculine'] = 310;\n\t    t['ae'] = 667;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 333;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 444;\n\t    t['uhungarumlaut'] = 500;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 722;\n\t    t['divide'] = 564;\n\t    t['Yacute'] = 722;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 444;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 444;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 500;\n\t    t['Edieresis'] = 611;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 760;\n\t    t['Emacron'] = 611;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 444;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 444;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 444;\n\t    t['Edotaccent'] = 611;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 667;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 500;\n\t    t['acircumflex'] = 444;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 556;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 667;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 588;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 500;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 564;\n\t    t['uacute'] = 500;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 611;\n\t    t['adieresis'] = 444;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 500;\n\t    t['umacron'] = 500;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 333;\n\t    t['plusminus'] = 564;\n\t    t['brokenbar'] = 200;\n\t    t['registered'] = 760;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 333;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 611;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 326;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 444;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 444;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 500;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 611;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 344;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 980;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 333;\n\t    t['Imacron'] = 333;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 500;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 611;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 500;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 667;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 444;\n\t    t['Ecaron'] = 611;\n\t    t['Iogonek'] = 333;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 564;\n\t    t['Icircumflex'] = 333;\n\t    t['ncaron'] = 500;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 564;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 500;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 444;\n\t    t['ncommaaccent'] = 500;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 555;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 1000;\n\t    t['ampersand'] = 833;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 570;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 570;\n\t    t['equal'] = 570;\n\t    t['greater'] = 570;\n\t    t['question'] = 500;\n\t    t['at'] = 930;\n\t    t['A'] = 722;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 778;\n\t    t['I'] = 389;\n\t    t['J'] = 500;\n\t    t['K'] = 778;\n\t    t['L'] = 667;\n\t    t['M'] = 944;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 611;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 556;\n\t    t['T'] = 667;\n\t    t['U'] = 722;\n\t    t['V'] = 722;\n\t    t['W'] = 1000;\n\t    t['X'] = 722;\n\t    t['Y'] = 722;\n\t    t['Z'] = 667;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 581;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 556;\n\t    t['c'] = 444;\n\t    t['d'] = 556;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 556;\n\t    t['i'] = 278;\n\t    t['j'] = 333;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 500;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 444;\n\t    t['s'] = 389;\n\t    t['t'] = 333;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 444;\n\t    t['braceleft'] = 394;\n\t    t['bar'] = 220;\n\t    t['braceright'] = 394;\n\t    t['asciitilde'] = 520;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 278;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 540;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 300;\n\t    t['Lslash'] = 667;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 330;\n\t    t['ae'] = 722;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 556;\n\t    t['Idieresis'] = 389;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 722;\n\t    t['divide'] = 570;\n\t    t['Yacute'] = 722;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 747;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 667;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 444;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 667;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 672;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 570;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 667;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 389;\n\t    t['plusminus'] = 570;\n\t    t['brokenbar'] = 220;\n\t    t['registered'] = 747;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 389;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 444;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 667;\n\t    t['Zcaron'] = 667;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 416;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 444;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 394;\n\t    t['Kcommaaccent'] = 778;\n\t    t['Lacute'] = 667;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 389;\n\t    t['Imacron'] = 389;\n\t    t['Lcaron'] = 667;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 444;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 667;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 444;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 389;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 570;\n\t    t['Icircumflex'] = 389;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 570;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 444;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 389;\n\t    t['quotedbl'] = 555;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 570;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 570;\n\t    t['equal'] = 570;\n\t    t['greater'] = 570;\n\t    t['question'] = 500;\n\t    t['at'] = 832;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 667;\n\t    t['G'] = 722;\n\t    t['H'] = 778;\n\t    t['I'] = 389;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 611;\n\t    t['M'] = 889;\n\t    t['N'] = 722;\n\t    t['O'] = 722;\n\t    t['P'] = 611;\n\t    t['Q'] = 722;\n\t    t['R'] = 667;\n\t    t['S'] = 556;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 889;\n\t    t['X'] = 667;\n\t    t['Y'] = 611;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 570;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 556;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 500;\n\t    t['l'] = 278;\n\t    t['m'] = 778;\n\t    t['n'] = 556;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 389;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 444;\n\t    t['w'] = 667;\n\t    t['x'] = 500;\n\t    t['y'] = 444;\n\t    t['z'] = 389;\n\t    t['braceleft'] = 348;\n\t    t['bar'] = 220;\n\t    t['braceright'] = 348;\n\t    t['asciitilde'] = 570;\n\t    t['exclamdown'] = 389;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 278;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 500;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 944;\n\t    t['ordfeminine'] = 266;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 944;\n\t    t['ordmasculine'] = 300;\n\t    t['ae'] = 722;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 389;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 611;\n\t    t['divide'] = 570;\n\t    t['Yacute'] = 611;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 444;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 747;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 667;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 667;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 608;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 570;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 444;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 389;\n\t    t['plusminus'] = 570;\n\t    t['brokenbar'] = 220;\n\t    t['registered'] = 747;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 389;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 366;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 389;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 576;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 382;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 389;\n\t    t['Imacron'] = 389;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 667;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 389;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 389;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 606;\n\t    t['Icircumflex'] = 389;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 606;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 389;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 420;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 675;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 675;\n\t    t['equal'] = 675;\n\t    t['greater'] = 675;\n\t    t['question'] = 500;\n\t    t['at'] = 920;\n\t    t['A'] = 611;\n\t    t['B'] = 611;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 611;\n\t    t['F'] = 611;\n\t    t['G'] = 722;\n\t    t['H'] = 722;\n\t    t['I'] = 333;\n\t    t['J'] = 444;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 667;\n\t    t['O'] = 722;\n\t    t['P'] = 611;\n\t    t['Q'] = 722;\n\t    t['R'] = 611;\n\t    t['S'] = 500;\n\t    t['T'] = 556;\n\t    t['U'] = 722;\n\t    t['V'] = 611;\n\t    t['W'] = 833;\n\t    t['X'] = 611;\n\t    t['Y'] = 556;\n\t    t['Z'] = 556;\n\t    t['bracketleft'] = 389;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 389;\n\t    t['asciicircum'] = 422;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 278;\n\t    t['g'] = 500;\n\t    t['h'] = 500;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 444;\n\t    t['l'] = 278;\n\t    t['m'] = 722;\n\t    t['n'] = 500;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 389;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 500;\n\t    t['v'] = 444;\n\t    t['w'] = 667;\n\t    t['x'] = 444;\n\t    t['y'] = 444;\n\t    t['z'] = 389;\n\t    t['braceleft'] = 400;\n\t    t['bar'] = 275;\n\t    t['braceright'] = 400;\n\t    t['asciitilde'] = 541;\n\t    t['exclamdown'] = 389;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 214;\n\t    t['quotedblleft'] = 556;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 523;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 556;\n\t    t['quotedblright'] = 556;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 889;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 889;\n\t    t['AE'] = 889;\n\t    t['ordfeminine'] = 276;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 944;\n\t    t['ordmasculine'] = 310;\n\t    t['ae'] = 667;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 667;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 333;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 500;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 556;\n\t    t['divide'] = 675;\n\t    t['Yacute'] = 556;\n\t    t['Acircumflex'] = 611;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 444;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 500;\n\t    t['Edieresis'] = 611;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 760;\n\t    t['Emacron'] = 611;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 667;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 556;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 611;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 611;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 500;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 611;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 556;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 611;\n\t    t['Sacute'] = 500;\n\t    t['dcaron'] = 544;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 500;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 611;\n\t    t['Abreve'] = 611;\n\t    t['multiply'] = 675;\n\t    t['uacute'] = 500;\n\t    t['Tcaron'] = 556;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 444;\n\t    t['Nacute'] = 667;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 611;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 500;\n\t    t['umacron'] = 500;\n\t    t['Ncaron'] = 667;\n\t    t['Iacute'] = 333;\n\t    t['plusminus'] = 675;\n\t    t['brokenbar'] = 275;\n\t    t['registered'] = 760;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 333;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 611;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 556;\n\t    t['Zcaron'] = 556;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 300;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 611;\n\t    t['Adieresis'] = 611;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 389;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 500;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 611;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 500;\n\t    t['lcaron'] = 300;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 980;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 333;\n\t    t['Imacron'] = 333;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 500;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 611;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 500;\n\t    t['Scommaaccent'] = 500;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 500;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 667;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 611;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 611;\n\t    t['Aogonek'] = 611;\n\t    t['Aring'] = 611;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 389;\n\t    t['Ecaron'] = 611;\n\t    t['Iogonek'] = 333;\n\t    t['kcommaaccent'] = 444;\n\t    t['minus'] = 675;\n\t    t['Icircumflex'] = 333;\n\t    t['ncaron'] = 500;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 675;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 500;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 389;\n\t    t['ncommaaccent'] = 500;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['a1'] = 974;\n\t    t['a2'] = 961;\n\t    t['a202'] = 974;\n\t    t['a3'] = 980;\n\t    t['a4'] = 719;\n\t    t['a5'] = 789;\n\t    t['a119'] = 790;\n\t    t['a118'] = 791;\n\t    t['a117'] = 690;\n\t    t['a11'] = 960;\n\t    t['a12'] = 939;\n\t    t['a13'] = 549;\n\t    t['a14'] = 855;\n\t    t['a15'] = 911;\n\t    t['a16'] = 933;\n\t    t['a105'] = 911;\n\t    t['a17'] = 945;\n\t    t['a18'] = 974;\n\t    t['a19'] = 755;\n\t    t['a20'] = 846;\n\t    t['a21'] = 762;\n\t    t['a22'] = 761;\n\t    t['a23'] = 571;\n\t    t['a24'] = 677;\n\t    t['a25'] = 763;\n\t    t['a26'] = 760;\n\t    t['a27'] = 759;\n\t    t['a28'] = 754;\n\t    t['a6'] = 494;\n\t    t['a7'] = 552;\n\t    t['a8'] = 537;\n\t    t['a9'] = 577;\n\t    t['a10'] = 692;\n\t    t['a29'] = 786;\n\t    t['a30'] = 788;\n\t    t['a31'] = 788;\n\t    t['a32'] = 790;\n\t    t['a33'] = 793;\n\t    t['a34'] = 794;\n\t    t['a35'] = 816;\n\t    t['a36'] = 823;\n\t    t['a37'] = 789;\n\t    t['a38'] = 841;\n\t    t['a39'] = 823;\n\t    t['a40'] = 833;\n\t    t['a41'] = 816;\n\t    t['a42'] = 831;\n\t    t['a43'] = 923;\n\t    t['a44'] = 744;\n\t    t['a45'] = 723;\n\t    t['a46'] = 749;\n\t    t['a47'] = 790;\n\t    t['a48'] = 792;\n\t    t['a49'] = 695;\n\t    t['a50'] = 776;\n\t    t['a51'] = 768;\n\t    t['a52'] = 792;\n\t    t['a53'] = 759;\n\t    t['a54'] = 707;\n\t    t['a55'] = 708;\n\t    t['a56'] = 682;\n\t    t['a57'] = 701;\n\t    t['a58'] = 826;\n\t    t['a59'] = 815;\n\t    t['a60'] = 789;\n\t    t['a61'] = 789;\n\t    t['a62'] = 707;\n\t    t['a63'] = 687;\n\t    t['a64'] = 696;\n\t    t['a65'] = 689;\n\t    t['a66'] = 786;\n\t    t['a67'] = 787;\n\t    t['a68'] = 713;\n\t    t['a69'] = 791;\n\t    t['a70'] = 785;\n\t    t['a71'] = 791;\n\t    t['a72'] = 873;\n\t    t['a73'] = 761;\n\t    t['a74'] = 762;\n\t    t['a203'] = 762;\n\t    t['a75'] = 759;\n\t    t['a204'] = 759;\n\t    t['a76'] = 892;\n\t    t['a77'] = 892;\n\t    t['a78'] = 788;\n\t    t['a79'] = 784;\n\t    t['a81'] = 438;\n\t    t['a82'] = 138;\n\t    t['a83'] = 277;\n\t    t['a84'] = 415;\n\t    t['a97'] = 392;\n\t    t['a98'] = 392;\n\t    t['a99'] = 668;\n\t    t['a100'] = 668;\n\t    t['a89'] = 390;\n\t    t['a90'] = 390;\n\t    t['a93'] = 317;\n\t    t['a94'] = 317;\n\t    t['a91'] = 276;\n\t    t['a92'] = 276;\n\t    t['a205'] = 509;\n\t    t['a85'] = 509;\n\t    t['a206'] = 410;\n\t    t['a86'] = 410;\n\t    t['a87'] = 234;\n\t    t['a88'] = 234;\n\t    t['a95'] = 334;\n\t    t['a96'] = 334;\n\t    t['a101'] = 732;\n\t    t['a102'] = 544;\n\t    t['a103'] = 544;\n\t    t['a104'] = 910;\n\t    t['a106'] = 667;\n\t    t['a107'] = 760;\n\t    t['a108'] = 760;\n\t    t['a112'] = 776;\n\t    t['a111'] = 595;\n\t    t['a110'] = 694;\n\t    t['a109'] = 626;\n\t    t['a120'] = 788;\n\t    t['a121'] = 788;\n\t    t['a122'] = 788;\n\t    t['a123'] = 788;\n\t    t['a124'] = 788;\n\t    t['a125'] = 788;\n\t    t['a126'] = 788;\n\t    t['a127'] = 788;\n\t    t['a128'] = 788;\n\t    t['a129'] = 788;\n\t    t['a130'] = 788;\n\t    t['a131'] = 788;\n\t    t['a132'] = 788;\n\t    t['a133'] = 788;\n\t    t['a134'] = 788;\n\t    t['a135'] = 788;\n\t    t['a136'] = 788;\n\t    t['a137'] = 788;\n\t    t['a138'] = 788;\n\t    t['a139'] = 788;\n\t    t['a140'] = 788;\n\t    t['a141'] = 788;\n\t    t['a142'] = 788;\n\t    t['a143'] = 788;\n\t    t['a144'] = 788;\n\t    t['a145'] = 788;\n\t    t['a146'] = 788;\n\t    t['a147'] = 788;\n\t    t['a148'] = 788;\n\t    t['a149'] = 788;\n\t    t['a150'] = 788;\n\t    t['a151'] = 788;\n\t    t['a152'] = 788;\n\t    t['a153'] = 788;\n\t    t['a154'] = 788;\n\t    t['a155'] = 788;\n\t    t['a156'] = 788;\n\t    t['a157'] = 788;\n\t    t['a158'] = 788;\n\t    t['a159'] = 788;\n\t    t['a160'] = 894;\n\t    t['a161'] = 838;\n\t    t['a163'] = 1016;\n\t    t['a164'] = 458;\n\t    t['a196'] = 748;\n\t    t['a165'] = 924;\n\t    t['a192'] = 748;\n\t    t['a166'] = 918;\n\t    t['a167'] = 927;\n\t    t['a168'] = 928;\n\t    t['a169'] = 928;\n\t    t['a170'] = 834;\n\t    t['a171'] = 873;\n\t    t['a172'] = 828;\n\t    t['a173'] = 924;\n\t    t['a162'] = 924;\n\t    t['a174'] = 917;\n\t    t['a175'] = 930;\n\t    t['a176'] = 931;\n\t    t['a177'] = 463;\n\t    t['a178'] = 883;\n\t    t['a179'] = 836;\n\t    t['a193'] = 836;\n\t    t['a180'] = 867;\n\t    t['a199'] = 867;\n\t    t['a181'] = 696;\n\t    t['a200'] = 696;\n\t    t['a182'] = 874;\n\t    t['a201'] = 874;\n\t    t['a183'] = 760;\n\t    t['a184'] = 946;\n\t    t['a197'] = 771;\n\t    t['a185'] = 865;\n\t    t['a194'] = 771;\n\t    t['a198'] = 888;\n\t    t['a186'] = 967;\n\t    t['a195'] = 888;\n\t    t['a187'] = 831;\n\t    t['a188'] = 873;\n\t    t['a189'] = 927;\n\t    t['a190'] = 970;\n\t    t['a191'] = 918;\n\t  });\n\t});\n\texports.getMetrics = getMetrics;\n\n/***/ },\n\n/***/ 699:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.MurmurHash3_64 = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n\t  var MASK_HIGH = 0xffff0000;\n\t  var MASK_LOW = 0xffff;\n\t  function MurmurHash3_64(seed) {\n\t    var SEED = 0xc3d2e1f0;\n\t    this.h1 = seed ? seed & 0xffffffff : SEED;\n\t    this.h2 = seed ? seed & 0xffffffff : SEED;\n\t  }\n\t  MurmurHash3_64.prototype = {\n\t    update: function MurmurHash3_64_update(input) {\n\t      var data = void 0,\n\t          length = void 0;\n\t      if ((0, _util.isString)(input)) {\n\t        data = new Uint8Array(input.length * 2);\n\t        length = 0;\n\t        for (var i = 0, ii = input.length; i < ii; i++) {\n\t          var code = input.charCodeAt(i);\n\t          if (code <= 0xff) {\n\t            data[length++] = code;\n\t          } else {\n\t            data[length++] = code >>> 8;\n\t            data[length++] = code & 0xff;\n\t          }\n\t        }\n\t      } else if ((0, _util.isArrayBuffer)(input)) {\n\t        data = input;\n\t        length = data.byteLength;\n\t      } else {\n\t        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n\t      }\n\t      var blockCounts = length >> 2;\n\t      var tailLength = length - blockCounts * 4;\n\t      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n\t      var k1 = 0;\n\t      var k2 = 0;\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      var C1 = 0xcc9e2d51;\n\t      var C2 = 0x1b873593;\n\t      var C1_LOW = C1 & MASK_LOW;\n\t      var C2_LOW = C2 & MASK_LOW;\n\t      for (var _i = 0; _i < blockCounts; _i++) {\n\t        if (_i & 1) {\n\t          k1 = dataUint32[_i];\n\t          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t          k1 = k1 << 15 | k1 >>> 17;\n\t          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t          h1 ^= k1;\n\t          h1 = h1 << 13 | h1 >>> 19;\n\t          h1 = h1 * 5 + 0xe6546b64;\n\t        } else {\n\t          k2 = dataUint32[_i];\n\t          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n\t          k2 = k2 << 15 | k2 >>> 17;\n\t          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n\t          h2 ^= k2;\n\t          h2 = h2 << 13 | h2 >>> 19;\n\t          h2 = h2 * 5 + 0xe6546b64;\n\t        }\n\t      }\n\t      k1 = 0;\n\t      switch (tailLength) {\n\t        case 3:\n\t          k1 ^= data[blockCounts * 4 + 2] << 16;\n\t        case 2:\n\t          k1 ^= data[blockCounts * 4 + 1] << 8;\n\t        case 1:\n\t          k1 ^= data[blockCounts * 4];\n\t          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t          k1 = k1 << 15 | k1 >>> 17;\n\t          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t          if (blockCounts & 1) {\n\t            h1 ^= k1;\n\t          } else {\n\t            h2 ^= k1;\n\t          }\n\t      }\n\t      this.h1 = h1;\n\t      this.h2 = h2;\n\t      return this;\n\t    },\n\t    hexdigest: function MurmurHash3_64_hexdigest() {\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n\t      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n\t      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n\t        var hex = (arr[i] >>> 0).toString(16);\n\t        while (hex.length < 8) {\n\t          hex = '0' + hex;\n\t        }\n\t        str += hex;\n\t      }\n\t      return str;\n\t    }\n\t  };\n\t  return MurmurHash3_64;\n\t}();\n\texports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ },\n\n/***/ 700:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getTilingPatternIR = exports.Pattern = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _colorspace = __webpack_require__(97);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar ShadingType = {\n\t  FUNCTION_BASED: 1,\n\t  AXIAL: 2,\n\t  RADIAL: 3,\n\t  FREE_FORM_MESH: 4,\n\t  LATTICE_FORM_MESH: 5,\n\t  COONS_PATCH_MESH: 6,\n\t  TENSOR_PATCH_MESH: 7\n\t};\n\tvar Pattern = function PatternClosure() {\n\t  function Pattern() {\n\t    (0, _util.unreachable)('should not call Pattern constructor');\n\t  }\n\t  Pattern.prototype = {\n\t    getPattern: function Pattern_getPattern(ctx) {\n\t      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n\t    }\n\t  };\n\t  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n\t    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n\t    var type = dict.get('ShadingType');\n\t    try {\n\t      switch (type) {\n\t        case ShadingType.AXIAL:\n\t        case ShadingType.RADIAL:\n\t          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n\t        case ShadingType.FREE_FORM_MESH:\n\t        case ShadingType.LATTICE_FORM_MESH:\n\t        case ShadingType.COONS_PATCH_MESH:\n\t        case ShadingType.TENSOR_PATCH_MESH:\n\t          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n\t        default:\n\t          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n\t      }\n\t    } catch (ex) {\n\t      if (ex instanceof _util.MissingDataException) {\n\t        throw ex;\n\t      }\n\t      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n\t      (0, _util.warn)(ex);\n\t      return new Shadings.Dummy();\n\t    }\n\t  };\n\t  return Pattern;\n\t}();\n\tvar Shadings = {};\n\tShadings.SMALL_NUMBER = 1e-6;\n\tShadings.RadialAxial = function RadialAxialClosure() {\n\t  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n\t    this.matrix = matrix;\n\t    this.coordsArr = dict.getArray('Coords');\n\t    this.shadingType = dict.get('ShadingType');\n\t    this.type = 'Pattern';\n\t    var cs = dict.get('ColorSpace', 'CS');\n\t    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n\t    this.cs = cs;\n\t    var t0 = 0.0,\n\t        t1 = 1.0;\n\t    if (dict.has('Domain')) {\n\t      var domainArr = dict.getArray('Domain');\n\t      t0 = domainArr[0];\n\t      t1 = domainArr[1];\n\t    }\n\t    var extendStart = false,\n\t        extendEnd = false;\n\t    if (dict.has('Extend')) {\n\t      var extendArr = dict.getArray('Extend');\n\t      extendStart = extendArr[0];\n\t      extendEnd = extendArr[1];\n\t    }\n\t    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n\t      var x1 = this.coordsArr[0];\n\t      var y1 = this.coordsArr[1];\n\t      var r1 = this.coordsArr[2];\n\t      var x2 = this.coordsArr[3];\n\t      var y2 = this.coordsArr[4];\n\t      var r2 = this.coordsArr[5];\n\t      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\t      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n\t        (0, _util.warn)('Unsupported radial gradient.');\n\t      }\n\t    }\n\t    this.extendStart = extendStart;\n\t    this.extendEnd = extendEnd;\n\t    var fnObj = dict.get('Function');\n\t    var fn = pdfFunctionFactory.createFromArray(fnObj);\n\t    var diff = t1 - t0;\n\t    var step = diff / 10;\n\t    var colorStops = this.colorStops = [];\n\t    if (t0 >= t1 || step <= 0) {\n\t      (0, _util.info)('Bad shading domain.');\n\t      return;\n\t    }\n\t    var color = new Float32Array(cs.numComps),\n\t        ratio = new Float32Array(1);\n\t    var rgbColor;\n\t    for (var i = t0; i <= t1; i += step) {\n\t      ratio[0] = i;\n\t      fn(ratio, 0, color, 0);\n\t      rgbColor = cs.getRgb(color, 0);\n\t      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t      colorStops.push([(i - t0) / diff, cssColor]);\n\t    }\n\t    var background = 'transparent';\n\t    if (dict.has('Background')) {\n\t      rgbColor = cs.getRgb(dict.get('Background'), 0);\n\t      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t    }\n\t    if (!extendStart) {\n\t      colorStops.unshift([0, background]);\n\t      colorStops[1][0] += Shadings.SMALL_NUMBER;\n\t    }\n\t    if (!extendEnd) {\n\t      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n\t      colorStops.push([1, background]);\n\t    }\n\t    this.colorStops = colorStops;\n\t  }\n\t  RadialAxial.prototype = {\n\t    getIR: function RadialAxial_getIR() {\n\t      var coordsArr = this.coordsArr;\n\t      var shadingType = this.shadingType;\n\t      var type, p0, p1, r0, r1;\n\t      if (shadingType === ShadingType.AXIAL) {\n\t        p0 = [coordsArr[0], coordsArr[1]];\n\t        p1 = [coordsArr[2], coordsArr[3]];\n\t        r0 = null;\n\t        r1 = null;\n\t        type = 'axial';\n\t      } else if (shadingType === ShadingType.RADIAL) {\n\t        p0 = [coordsArr[0], coordsArr[1]];\n\t        p1 = [coordsArr[3], coordsArr[4]];\n\t        r0 = coordsArr[2];\n\t        r1 = coordsArr[5];\n\t        type = 'radial';\n\t      } else {\n\t        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n\t      }\n\t      var matrix = this.matrix;\n\t      if (matrix) {\n\t        p0 = _util.Util.applyTransform(p0, matrix);\n\t        p1 = _util.Util.applyTransform(p1, matrix);\n\t        if (shadingType === ShadingType.RADIAL) {\n\t          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n\t          r0 *= scale[0];\n\t          r1 *= scale[1];\n\t        }\n\t      }\n\t      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n\t    }\n\t  };\n\t  return RadialAxial;\n\t}();\n\tShadings.Mesh = function MeshClosure() {\n\t  function MeshStreamReader(stream, context) {\n\t    this.stream = stream;\n\t    this.context = context;\n\t    this.buffer = 0;\n\t    this.bufferLength = 0;\n\t    var numComps = context.numComps;\n\t    this.tmpCompsBuf = new Float32Array(numComps);\n\t    var csNumComps = context.colorSpace.numComps;\n\t    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n\t  }\n\t  MeshStreamReader.prototype = {\n\t    get hasData() {\n\t      if (this.stream.end) {\n\t        return this.stream.pos < this.stream.end;\n\t      }\n\t      if (this.bufferLength > 0) {\n\t        return true;\n\t      }\n\t      var nextByte = this.stream.getByte();\n\t      if (nextByte < 0) {\n\t        return false;\n\t      }\n\t      this.buffer = nextByte;\n\t      this.bufferLength = 8;\n\t      return true;\n\t    },\n\t    readBits: function MeshStreamReader_readBits(n) {\n\t      var buffer = this.buffer;\n\t      var bufferLength = this.bufferLength;\n\t      if (n === 32) {\n\t        if (bufferLength === 0) {\n\t          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n\t        }\n\t        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n\t        var nextByte = this.stream.getByte();\n\t        this.buffer = nextByte & (1 << bufferLength) - 1;\n\t        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n\t      }\n\t      if (n === 8 && bufferLength === 0) {\n\t        return this.stream.getByte();\n\t      }\n\t      while (bufferLength < n) {\n\t        buffer = buffer << 8 | this.stream.getByte();\n\t        bufferLength += 8;\n\t      }\n\t      bufferLength -= n;\n\t      this.bufferLength = bufferLength;\n\t      this.buffer = buffer & (1 << bufferLength) - 1;\n\t      return buffer >> bufferLength;\n\t    },\n\t    align: function MeshStreamReader_align() {\n\t      this.buffer = 0;\n\t      this.bufferLength = 0;\n\t    },\n\t    readFlag: function MeshStreamReader_readFlag() {\n\t      return this.readBits(this.context.bitsPerFlag);\n\t    },\n\t    readCoordinate: function MeshStreamReader_readCoordinate() {\n\t      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n\t      var xi = this.readBits(bitsPerCoordinate);\n\t      var yi = this.readBits(bitsPerCoordinate);\n\t      var decode = this.context.decode;\n\t      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n\t      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n\t    },\n\t    readComponents: function MeshStreamReader_readComponents() {\n\t      var numComps = this.context.numComps;\n\t      var bitsPerComponent = this.context.bitsPerComponent;\n\t      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n\t      var decode = this.context.decode;\n\t      var components = this.tmpCompsBuf;\n\t      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n\t        var ci = this.readBits(bitsPerComponent);\n\t        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n\t      }\n\t      var color = this.tmpCsCompsBuf;\n\t      if (this.context.colorFn) {\n\t        this.context.colorFn(components, 0, color, 0);\n\t      }\n\t      return this.context.colorSpace.getRgb(color, 0);\n\t    }\n\t  };\n\t  function decodeType4Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var operators = [];\n\t    var ps = [];\n\t    var verticesLeft = 0;\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      if (verticesLeft === 0) {\n\t        if (!(0 <= f && f <= 2)) {\n\t          throw new _util.FormatError('Unknown type4 flag');\n\t        }\n\t        switch (f) {\n\t          case 0:\n\t            verticesLeft = 3;\n\t            break;\n\t          case 1:\n\t            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n\t            verticesLeft = 1;\n\t            break;\n\t          case 2:\n\t            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n\t            verticesLeft = 1;\n\t            break;\n\t        }\n\t        operators.push(f);\n\t      }\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t      verticesLeft--;\n\t      reader.align();\n\t    }\n\t    mesh.figures.push({\n\t      type: 'triangles',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps)\n\t    });\n\t  }\n\t  function decodeType5Shading(mesh, reader, verticesPerRow) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = [];\n\t    while (reader.hasData) {\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t    }\n\t    mesh.figures.push({\n\t      type: 'lattice',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps),\n\t      verticesPerRow: verticesPerRow\n\t    });\n\t  }\n\t  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n\t  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n\t  var TRIANGLE_DENSITY = 20;\n\t  var getB = function getBClosure() {\n\t    function buildB(count) {\n\t      var lut = [];\n\t      for (var i = 0; i <= count; i++) {\n\t        var t = i / count,\n\t            t_ = 1 - t;\n\t        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n\t      }\n\t      return lut;\n\t    }\n\t    var cache = [];\n\t    return function getB(count) {\n\t      if (!cache[count]) {\n\t        cache[count] = buildB(count);\n\t      }\n\t      return cache[count];\n\t    };\n\t  }();\n\t  function buildFigureFromPatch(mesh, index) {\n\t    var figure = mesh.figures[index];\n\t    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n\t    var coords = mesh.coords,\n\t        colors = mesh.colors;\n\t    var pi = figure.coords;\n\t    var ci = figure.colors;\n\t    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n\t    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n\t    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n\t    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n\t    var verticesPerRow = splitXBy + 1;\n\t    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t    var k = 0;\n\t    var cl = new Uint8Array(3),\n\t        cr = new Uint8Array(3);\n\t    var c0 = colors[ci[0]],\n\t        c1 = colors[ci[1]],\n\t        c2 = colors[ci[2]],\n\t        c3 = colors[ci[3]];\n\t    var bRow = getB(splitYBy),\n\t        bCol = getB(splitXBy);\n\t    for (var row = 0; row <= splitYBy; row++) {\n\t      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n\t      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n\t      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n\t      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n\t      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n\t      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n\t      for (var col = 0; col <= splitXBy; col++, k++) {\n\t        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n\t          continue;\n\t        }\n\t        var x = 0,\n\t            y = 0;\n\t        var q = 0;\n\t        for (var i = 0; i <= 3; i++) {\n\t          for (var j = 0; j <= 3; j++, q++) {\n\t            var m = bRow[row][i] * bCol[col][j];\n\t            x += coords[pi[q]][0] * m;\n\t            y += coords[pi[q]][1] * m;\n\t          }\n\t        }\n\t        figureCoords[k] = coords.length;\n\t        coords.push([x, y]);\n\t        figureColors[k] = colors.length;\n\t        var newColor = new Uint8Array(3);\n\t        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n\t        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n\t        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n\t        colors.push(newColor);\n\t      }\n\t    }\n\t    figureCoords[0] = pi[0];\n\t    figureColors[0] = ci[0];\n\t    figureCoords[splitXBy] = pi[3];\n\t    figureColors[splitXBy] = ci[1];\n\t    figureCoords[verticesPerRow * splitYBy] = pi[12];\n\t    figureColors[verticesPerRow * splitYBy] = ci[2];\n\t    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n\t    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n\t    mesh.figures[index] = {\n\t      type: 'lattice',\n\t      coords: figureCoords,\n\t      colors: figureColors,\n\t      verticesPerRow: verticesPerRow\n\t    };\n\t  }\n\t  function decodeType6Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = new Int32Array(16);\n\t    var cs = new Int32Array(4);\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      if (!(0 <= f && f <= 3)) {\n\t        throw new _util.FormatError('Unknown type6 flag');\n\t      }\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n\t        coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t        colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t        case 0:\n\t          ps[12] = pi + 3;\n\t          ps[13] = pi + 4;\n\t          ps[14] = pi + 5;\n\t          ps[15] = pi + 6;\n\t          ps[8] = pi + 2;\n\t          ps[11] = pi + 7;\n\t          ps[4] = pi + 1;\n\t          ps[7] = pi + 8;\n\t          ps[0] = pi;\n\t          ps[1] = pi + 11;\n\t          ps[2] = pi + 10;\n\t          ps[3] = pi + 9;\n\t          cs[2] = ci + 1;\n\t          cs[3] = ci + 2;\n\t          cs[0] = ci;\n\t          cs[1] = ci + 3;\n\t          break;\n\t        case 1:\n\t          tmp1 = ps[12];\n\t          tmp2 = ps[13];\n\t          tmp3 = ps[14];\n\t          tmp4 = ps[15];\n\t          ps[12] = tmp4;\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = tmp3;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[2];\n\t          tmp2 = cs[3];\n\t          cs[2] = tmp2;\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 2:\n\t          tmp1 = ps[15];\n\t          tmp2 = ps[11];\n\t          ps[12] = ps[3];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[7];\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[3];\n\t          cs[2] = cs[1];\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 3:\n\t          ps[12] = ps[0];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[1];\n\t          ps[11] = pi + 3;\n\t          ps[4] = ps[2];\n\t          ps[7] = pi + 4;\n\t          ps[0] = ps[3];\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          cs[2] = cs[0];\n\t          cs[3] = ci;\n\t          cs[0] = cs[1];\n\t          cs[1] = ci + 1;\n\t          break;\n\t      }\n\t      ps[5] = coords.length;\n\t      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n\t      ps[6] = coords.length;\n\t      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n\t      ps[9] = coords.length;\n\t      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n\t      ps[10] = coords.length;\n\t      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n\t      mesh.figures.push({\n\t        type: 'patch',\n\t        coords: new Int32Array(ps),\n\t        colors: new Int32Array(cs)\n\t      });\n\t    }\n\t  }\n\t  function decodeType7Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = new Int32Array(16);\n\t    var cs = new Int32Array(4);\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      if (!(0 <= f && f <= 3)) {\n\t        throw new _util.FormatError('Unknown type7 flag');\n\t      }\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n\t        coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t        colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t        case 0:\n\t          ps[12] = pi + 3;\n\t          ps[13] = pi + 4;\n\t          ps[14] = pi + 5;\n\t          ps[15] = pi + 6;\n\t          ps[8] = pi + 2;\n\t          ps[9] = pi + 13;\n\t          ps[10] = pi + 14;\n\t          ps[11] = pi + 7;\n\t          ps[4] = pi + 1;\n\t          ps[5] = pi + 12;\n\t          ps[6] = pi + 15;\n\t          ps[7] = pi + 8;\n\t          ps[0] = pi;\n\t          ps[1] = pi + 11;\n\t          ps[2] = pi + 10;\n\t          ps[3] = pi + 9;\n\t          cs[2] = ci + 1;\n\t          cs[3] = ci + 2;\n\t          cs[0] = ci;\n\t          cs[1] = ci + 3;\n\t          break;\n\t        case 1:\n\t          tmp1 = ps[12];\n\t          tmp2 = ps[13];\n\t          tmp3 = ps[14];\n\t          tmp4 = ps[15];\n\t          ps[12] = tmp4;\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = tmp3;\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[2];\n\t          tmp2 = cs[3];\n\t          cs[2] = tmp2;\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 2:\n\t          tmp1 = ps[15];\n\t          tmp2 = ps[11];\n\t          ps[12] = ps[3];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[7];\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[3];\n\t          cs[2] = cs[1];\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 3:\n\t          ps[12] = ps[0];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[1];\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = ps[2];\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = ps[3];\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          cs[2] = cs[0];\n\t          cs[3] = ci;\n\t          cs[0] = cs[1];\n\t          cs[1] = ci + 1;\n\t          break;\n\t      }\n\t      mesh.figures.push({\n\t        type: 'patch',\n\t        coords: new Int32Array(ps),\n\t        colors: new Int32Array(cs)\n\t      });\n\t    }\n\t  }\n\t  function updateBounds(mesh) {\n\t    var minX = mesh.coords[0][0],\n\t        minY = mesh.coords[0][1],\n\t        maxX = minX,\n\t        maxY = minY;\n\t    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n\t      var x = mesh.coords[i][0],\n\t          y = mesh.coords[i][1];\n\t      minX = minX > x ? x : minX;\n\t      minY = minY > y ? y : minY;\n\t      maxX = maxX < x ? x : maxX;\n\t      maxY = maxY < y ? y : maxY;\n\t    }\n\t    mesh.bounds = [minX, minY, maxX, maxY];\n\t  }\n\t  function packData(mesh) {\n\t    var i, ii, j, jj;\n\t    var coords = mesh.coords;\n\t    var coordsPacked = new Float32Array(coords.length * 2);\n\t    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n\t      var xy = coords[i];\n\t      coordsPacked[j++] = xy[0];\n\t      coordsPacked[j++] = xy[1];\n\t    }\n\t    mesh.coords = coordsPacked;\n\t    var colors = mesh.colors;\n\t    var colorsPacked = new Uint8Array(colors.length * 3);\n\t    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n\t      var c = colors[i];\n\t      colorsPacked[j++] = c[0];\n\t      colorsPacked[j++] = c[1];\n\t      colorsPacked[j++] = c[2];\n\t    }\n\t    mesh.colors = colorsPacked;\n\t    var figures = mesh.figures;\n\t    for (i = 0, ii = figures.length; i < ii; i++) {\n\t      var figure = figures[i],\n\t          ps = figure.coords,\n\t          cs = figure.colors;\n\t      for (j = 0, jj = ps.length; j < jj; j++) {\n\t        ps[j] *= 2;\n\t        cs[j] *= 3;\n\t      }\n\t    }\n\t  }\n\t  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n\t    if (!(0, _primitives.isStream)(stream)) {\n\t      throw new _util.FormatError('Mesh data is not a stream');\n\t    }\n\t    var dict = stream.dict;\n\t    this.matrix = matrix;\n\t    this.shadingType = dict.get('ShadingType');\n\t    this.type = 'Pattern';\n\t    this.bbox = dict.getArray('BBox');\n\t    var cs = dict.get('ColorSpace', 'CS');\n\t    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n\t    this.cs = cs;\n\t    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n\t    var fnObj = dict.get('Function');\n\t    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n\t    this.coords = [];\n\t    this.colors = [];\n\t    this.figures = [];\n\t    var decodeContext = {\n\t      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n\t      bitsPerComponent: dict.get('BitsPerComponent'),\n\t      bitsPerFlag: dict.get('BitsPerFlag'),\n\t      decode: dict.getArray('Decode'),\n\t      colorFn: fn,\n\t      colorSpace: cs,\n\t      numComps: fn ? 1 : cs.numComps\n\t    };\n\t    var reader = new MeshStreamReader(stream, decodeContext);\n\t    var patchMesh = false;\n\t    switch (this.shadingType) {\n\t      case ShadingType.FREE_FORM_MESH:\n\t        decodeType4Shading(this, reader);\n\t        break;\n\t      case ShadingType.LATTICE_FORM_MESH:\n\t        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n\t        if (verticesPerRow < 2) {\n\t          throw new _util.FormatError('Invalid VerticesPerRow');\n\t        }\n\t        decodeType5Shading(this, reader, verticesPerRow);\n\t        break;\n\t      case ShadingType.COONS_PATCH_MESH:\n\t        decodeType6Shading(this, reader);\n\t        patchMesh = true;\n\t        break;\n\t      case ShadingType.TENSOR_PATCH_MESH:\n\t        decodeType7Shading(this, reader);\n\t        patchMesh = true;\n\t        break;\n\t      default:\n\t        (0, _util.unreachable)('Unsupported mesh type.');\n\t        break;\n\t    }\n\t    if (patchMesh) {\n\t      updateBounds(this);\n\t      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n\t        buildFigureFromPatch(this, i);\n\t      }\n\t    }\n\t    updateBounds(this);\n\t    packData(this);\n\t  }\n\t  Mesh.prototype = {\n\t    getIR: function Mesh_getIR() {\n\t      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n\t    }\n\t  };\n\t  return Mesh;\n\t}();\n\tShadings.Dummy = function DummyClosure() {\n\t  function Dummy() {\n\t    this.type = 'Pattern';\n\t  }\n\t  Dummy.prototype = {\n\t    getIR: function Dummy_getIR() {\n\t      return ['Dummy'];\n\t    }\n\t  };\n\t  return Dummy;\n\t}();\n\tfunction getTilingPatternIR(operatorList, dict, args) {\n\t  var matrix = dict.getArray('Matrix');\n\t  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n\t  var xstep = dict.get('XStep');\n\t  var ystep = dict.get('YStep');\n\t  var paintType = dict.get('PaintType');\n\t  var tilingType = dict.get('TilingType');\n\t  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n\t    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n\t  }\n\t  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n\t}\n\texports.Pattern = Pattern;\n\texports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ },\n\n/***/ 701:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _chunked_stream = __webpack_require__(404);\n\t\n\tvar _document = __webpack_require__(689);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar BasePdfManager = function BasePdfManagerClosure() {\n\t  function BasePdfManager() {\n\t    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n\t  }\n\t  BasePdfManager.prototype = {\n\t    get docId() {\n\t      return this._docId;\n\t    },\n\t    get password() {\n\t      return this._password;\n\t    },\n\t    get docBaseUrl() {\n\t      var docBaseUrl = null;\n\t      if (this._docBaseUrl) {\n\t        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n\t        if (absoluteUrl) {\n\t          docBaseUrl = absoluteUrl.href;\n\t        } else {\n\t          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n\t    },\n\t    onLoadedStream: function BasePdfManager_onLoadedStream() {\n\t      throw new _util.NotImplementedException();\n\t    },\n\t    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n\t      return this.ensure(this.pdfDocument, prop, args);\n\t    },\n\t    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n\t      return this.ensure(this.pdfDocument.xref, prop, args);\n\t    },\n\t    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n\t      return this.ensure(this.pdfDocument.catalog, prop, args);\n\t    },\n\t    getPage: function BasePdfManager_getPage(pageIndex) {\n\t      return this.pdfDocument.getPage(pageIndex);\n\t    },\n\t    cleanup: function BasePdfManager_cleanup() {\n\t      return this.pdfDocument.cleanup();\n\t    },\n\t    ensure: function BasePdfManager_ensure(obj, prop, args) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    requestRange: function BasePdfManager_requestRange(begin, end) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    updatePassword: function BasePdfManager_updatePassword(password) {\n\t      this._password = password;\n\t    },\n\t    terminate: function BasePdfManager_terminate() {\n\t      return new _util.NotImplementedException();\n\t    }\n\t  };\n\t  return BasePdfManager;\n\t}();\n\tvar LocalPdfManager = function LocalPdfManagerClosure() {\n\t  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n\t    this._docId = docId;\n\t    this._password = password;\n\t    this._docBaseUrl = docBaseUrl;\n\t    this.evaluatorOptions = evaluatorOptions;\n\t    var stream = new _stream.Stream(data);\n\t    this.pdfDocument = new _document.PDFDocument(this, stream);\n\t    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n\t    this._loadedStreamCapability.resolve(stream);\n\t  }\n\t  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n\t    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n\t      return new Promise(function (resolve, reject) {\n\t        try {\n\t          var value = obj[prop];\n\t          var result;\n\t          if (typeof value === 'function') {\n\t            result = value.apply(obj, args);\n\t          } else {\n\t            result = value;\n\t          }\n\t          resolve(result);\n\t        } catch (e) {\n\t          reject(e);\n\t        }\n\t      });\n\t    },\n\t    requestRange: function LocalPdfManager_requestRange(begin, end) {\n\t      return Promise.resolve();\n\t    },\n\t    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n\t    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    terminate: function LocalPdfManager_terminate() {}\n\t  });\n\t  return LocalPdfManager;\n\t}();\n\tvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n\t  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n\t    this._docId = docId;\n\t    this._password = args.password;\n\t    this._docBaseUrl = docBaseUrl;\n\t    this.msgHandler = args.msgHandler;\n\t    this.evaluatorOptions = evaluatorOptions;\n\t    var params = {\n\t      msgHandler: args.msgHandler,\n\t      url: args.url,\n\t      length: args.length,\n\t      disableAutoFetch: args.disableAutoFetch,\n\t      rangeChunkSize: args.rangeChunkSize\n\t    };\n\t    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n\t    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n\t  }\n\t  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n\t    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n\t      var pdfManager = this;\n\t      return new Promise(function (resolve, reject) {\n\t        function ensureHelper() {\n\t          try {\n\t            var result;\n\t            var value = obj[prop];\n\t            if (typeof value === 'function') {\n\t              result = value.apply(obj, args);\n\t            } else {\n\t              result = value;\n\t            }\n\t            resolve(result);\n\t          } catch (e) {\n\t            if (!(e instanceof _util.MissingDataException)) {\n\t              reject(e);\n\t              return;\n\t            }\n\t            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n\t          }\n\t        }\n\t        ensureHelper();\n\t      });\n\t    },\n\t    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n\t      return this.streamManager.requestRange(begin, end);\n\t    },\n\t    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n\t      this.streamManager.requestAllChunks();\n\t    },\n\t    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n\t      this.streamManager.onReceiveData({ chunk: chunk });\n\t    },\n\t    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n\t      return this.streamManager.onLoadedStream();\n\t    },\n\t    terminate: function NetworkPdfManager_terminate() {\n\t      this.streamManager.abort();\n\t    }\n\t  });\n\t  return NetworkPdfManager;\n\t}();\n\texports.LocalPdfManager = LocalPdfManager;\n\texports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ },\n\n/***/ 702:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PostScriptParser = exports.PostScriptLexer = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tvar PostScriptParser = function PostScriptParserClosure() {\n\t  function PostScriptParser(lexer) {\n\t    this.lexer = lexer;\n\t    this.operators = [];\n\t    this.token = null;\n\t    this.prev = null;\n\t  }\n\t  PostScriptParser.prototype = {\n\t    nextToken: function PostScriptParser_nextToken() {\n\t      this.prev = this.token;\n\t      this.token = this.lexer.getToken();\n\t    },\n\t    accept: function PostScriptParser_accept(type) {\n\t      if (this.token.type === type) {\n\t        this.nextToken();\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    expect: function PostScriptParser_expect(type) {\n\t      if (this.accept(type)) {\n\t        return true;\n\t      }\n\t      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n\t    },\n\t    parse: function PostScriptParser_parse() {\n\t      this.nextToken();\n\t      this.expect(PostScriptTokenTypes.LBRACE);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      return this.operators;\n\t    },\n\t    parseBlock: function PostScriptParser_parseBlock() {\n\t      while (true) {\n\t        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n\t          this.operators.push(this.prev.value);\n\t        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n\t          this.operators.push(this.prev.value);\n\t        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t          this.parseCondition();\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t    },\n\t    parseCondition: function PostScriptParser_parseCondition() {\n\t      var conditionLocation = this.operators.length;\n\t      this.operators.push(null, null);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      if (this.accept(PostScriptTokenTypes.IF)) {\n\t        this.operators[conditionLocation] = this.operators.length;\n\t        this.operators[conditionLocation + 1] = 'jz';\n\t      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t        var jumpLocation = this.operators.length;\n\t        this.operators.push(null, null);\n\t        var endOfTrue = this.operators.length;\n\t        this.parseBlock();\n\t        this.expect(PostScriptTokenTypes.RBRACE);\n\t        this.expect(PostScriptTokenTypes.IFELSE);\n\t        this.operators[jumpLocation] = this.operators.length;\n\t        this.operators[jumpLocation + 1] = 'j';\n\t        this.operators[conditionLocation] = endOfTrue;\n\t        this.operators[conditionLocation + 1] = 'jz';\n\t      } else {\n\t        throw new _util.FormatError('PS Function: error parsing conditional.');\n\t      }\n\t    }\n\t  };\n\t  return PostScriptParser;\n\t}();\n\tvar PostScriptTokenTypes = {\n\t  LBRACE: 0,\n\t  RBRACE: 1,\n\t  NUMBER: 2,\n\t  OPERATOR: 3,\n\t  IF: 4,\n\t  IFELSE: 5\n\t};\n\tvar PostScriptToken = function PostScriptTokenClosure() {\n\t  function PostScriptToken(type, value) {\n\t    this.type = type;\n\t    this.value = value;\n\t  }\n\t  var opCache = Object.create(null);\n\t  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n\t    var opValue = opCache[op];\n\t    if (opValue) {\n\t      return opValue;\n\t    }\n\t    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n\t  };\n\t  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n\t  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n\t  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n\t  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n\t  return PostScriptToken;\n\t}();\n\tvar PostScriptLexer = function PostScriptLexerClosure() {\n\t  function PostScriptLexer(stream) {\n\t    this.stream = stream;\n\t    this.nextChar();\n\t    this.strBuf = [];\n\t  }\n\t  PostScriptLexer.prototype = {\n\t    nextChar: function PostScriptLexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    getToken: function PostScriptLexer_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          return _primitives.EOF;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (!(0, _util.isSpace)(ch)) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t        case 0x38:\n\t        case 0x39:\n\t        case 0x2B:\n\t        case 0x2D:\n\t        case 0x2E:\n\t          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n\t        case 0x7B:\n\t          this.nextChar();\n\t          return PostScriptToken.LBRACE;\n\t        case 0x7D:\n\t          this.nextChar();\n\t          return PostScriptToken.RBRACE;\n\t      }\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n\t        strBuf.push(String.fromCharCode(ch));\n\t      }\n\t      var str = strBuf.join('');\n\t      switch (str.toLowerCase()) {\n\t        case 'if':\n\t          return PostScriptToken.IF;\n\t        case 'ifelse':\n\t          return PostScriptToken.IFELSE;\n\t        default:\n\t          return PostScriptToken.getOperator(str);\n\t      }\n\t    },\n\t    getNumber: function PostScriptLexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0) {\n\t        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n\t          strBuf.push(String.fromCharCode(ch));\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      var value = parseFloat(strBuf.join(''));\n\t      if (isNaN(value)) {\n\t        throw new _util.FormatError('Invalid floating point number: ' + value);\n\t      }\n\t      return value;\n\t    }\n\t  };\n\t  return PostScriptLexer;\n\t}();\n\texports.PostScriptLexer = PostScriptLexer;\n\texports.PostScriptParser = PostScriptParser;\n\n/***/ },\n\n/***/ 703:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Type1Parser = undefined;\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _encodings = __webpack_require__(98);\n\t\n\tvar _stream = __webpack_require__(24);\n\t\n\tvar HINTING_ENABLED = false;\n\tvar Type1CharString = function Type1CharStringClosure() {\n\t  var COMMAND_MAP = {\n\t    'hstem': [1],\n\t    'vstem': [3],\n\t    'vmoveto': [4],\n\t    'rlineto': [5],\n\t    'hlineto': [6],\n\t    'vlineto': [7],\n\t    'rrcurveto': [8],\n\t    'callsubr': [10],\n\t    'flex': [12, 35],\n\t    'drop': [12, 18],\n\t    'endchar': [14],\n\t    'rmoveto': [21],\n\t    'hmoveto': [22],\n\t    'vhcurveto': [30],\n\t    'hvcurveto': [31]\n\t  };\n\t  function Type1CharString() {\n\t    this.width = 0;\n\t    this.lsb = 0;\n\t    this.flexing = false;\n\t    this.output = [];\n\t    this.stack = [];\n\t  }\n\t  Type1CharString.prototype = {\n\t    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n\t      var count = encoded.length;\n\t      var error = false;\n\t      var wx, sbx, subrNumber;\n\t      for (var i = 0; i < count; i++) {\n\t        var value = encoded[i];\n\t        if (value < 32) {\n\t          if (value === 12) {\n\t            value = (value << 8) + encoded[++i];\n\t          }\n\t          switch (value) {\n\t            case 1:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t              break;\n\t            case 3:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t              break;\n\t            case 4:\n\t              if (this.flexing) {\n\t                if (this.stack.length < 1) {\n\t                  error = true;\n\t                  break;\n\t                }\n\t                var dy = this.stack.pop();\n\t                this.stack.push(0, dy);\n\t                break;\n\t              }\n\t              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n\t              break;\n\t            case 5:\n\t              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n\t              break;\n\t            case 6:\n\t              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n\t              break;\n\t            case 7:\n\t              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n\t              break;\n\t            case 8:\n\t              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n\t              break;\n\t            case 9:\n\t              this.stack = [];\n\t              break;\n\t            case 10:\n\t              if (this.stack.length < 1) {\n\t                error = true;\n\t                break;\n\t              }\n\t              subrNumber = this.stack.pop();\n\t              if (!subrs[subrNumber]) {\n\t                error = true;\n\t                break;\n\t              }\n\t              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n\t              break;\n\t            case 11:\n\t              return error;\n\t            case 13:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              wx = this.stack.pop();\n\t              sbx = this.stack.pop();\n\t              this.lsb = sbx;\n\t              this.width = wx;\n\t              this.stack.push(wx, sbx);\n\t              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n\t              break;\n\t            case 14:\n\t              this.output.push(COMMAND_MAP.endchar[0]);\n\t              break;\n\t            case 21:\n\t              if (this.flexing) {\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n\t              break;\n\t            case 22:\n\t              if (this.flexing) {\n\t                this.stack.push(0);\n\t                break;\n\t              }\n\t              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n\t              break;\n\t            case 30:\n\t              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n\t              break;\n\t            case 31:\n\t              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n\t              break;\n\t            case (12 << 8) + 0:\n\t              this.stack = [];\n\t              break;\n\t            case (12 << 8) + 1:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t              break;\n\t            case (12 << 8) + 2:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t              break;\n\t            case (12 << 8) + 6:\n\t              if (seacAnalysisEnabled) {\n\t                this.seac = this.stack.splice(-4, 4);\n\t                error = this.executeCommand(0, COMMAND_MAP.endchar);\n\t              } else {\n\t                error = this.executeCommand(4, COMMAND_MAP.endchar);\n\t              }\n\t              break;\n\t            case (12 << 8) + 7:\n\t              if (this.stack.length < 4) {\n\t                error = true;\n\t                break;\n\t              }\n\t              this.stack.pop();\n\t              wx = this.stack.pop();\n\t              var sby = this.stack.pop();\n\t              sbx = this.stack.pop();\n\t              this.lsb = sbx;\n\t              this.width = wx;\n\t              this.stack.push(wx, sbx, sby);\n\t              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n\t              break;\n\t            case (12 << 8) + 12:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              var num2 = this.stack.pop();\n\t              var num1 = this.stack.pop();\n\t              this.stack.push(num1 / num2);\n\t              break;\n\t            case (12 << 8) + 16:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              subrNumber = this.stack.pop();\n\t              var numArgs = this.stack.pop();\n\t              if (subrNumber === 0 && numArgs === 3) {\n\t                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n\t                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n\t                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n\t                this.flexing = false;\n\t                this.stack.push(flexArgs[15], flexArgs[16]);\n\t              } else if (subrNumber === 1 && numArgs === 0) {\n\t                this.flexing = true;\n\t              }\n\t              break;\n\t            case (12 << 8) + 17:\n\t              break;\n\t            case (12 << 8) + 33:\n\t              this.stack = [];\n\t              break;\n\t            default:\n\t              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n\t              break;\n\t          }\n\t          if (error) {\n\t            break;\n\t          }\n\t          continue;\n\t        } else if (value <= 246) {\n\t          value = value - 139;\n\t        } else if (value <= 250) {\n\t          value = (value - 247) * 256 + encoded[++i] + 108;\n\t        } else if (value <= 254) {\n\t          value = -((value - 251) * 256) - encoded[++i] - 108;\n\t        } else {\n\t          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n\t        }\n\t        this.stack.push(value);\n\t      }\n\t      return error;\n\t    },\n\t    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n\t      var stackLength = this.stack.length;\n\t      if (howManyArgs > stackLength) {\n\t        return true;\n\t      }\n\t      var start = stackLength - howManyArgs;\n\t      for (var i = start; i < stackLength; i++) {\n\t        var value = this.stack[i];\n\t        if (Number.isInteger(value)) {\n\t          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n\t        } else {\n\t          value = 65536 * value | 0;\n\t          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n\t        }\n\t      }\n\t      this.output.push.apply(this.output, command);\n\t      if (keepStack) {\n\t        this.stack.splice(start, howManyArgs);\n\t      } else {\n\t        this.stack.length = 0;\n\t      }\n\t      return false;\n\t    }\n\t  };\n\t  return Type1CharString;\n\t}();\n\tvar Type1Parser = function Type1ParserClosure() {\n\t  var EEXEC_ENCRYPT_KEY = 55665;\n\t  var CHAR_STRS_ENCRYPT_KEY = 4330;\n\t  function isHexDigit(code) {\n\t    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n\t  }\n\t  function decrypt(data, key, discardNumber) {\n\t    if (discardNumber >= data.length) {\n\t      return new Uint8Array(0);\n\t    }\n\t    var r = key | 0,\n\t        c1 = 52845,\n\t        c2 = 22719,\n\t        i,\n\t        j;\n\t    for (i = 0; i < discardNumber; i++) {\n\t      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n\t    }\n\t    var count = data.length - discardNumber;\n\t    var decrypted = new Uint8Array(count);\n\t    for (i = discardNumber, j = 0; j < count; i++, j++) {\n\t      var value = data[i];\n\t      decrypted[j] = value ^ r >> 8;\n\t      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t    }\n\t    return decrypted;\n\t  }\n\t  function decryptAscii(data, key, discardNumber) {\n\t    var r = key | 0,\n\t        c1 = 52845,\n\t        c2 = 22719;\n\t    var count = data.length,\n\t        maybeLength = count >>> 1;\n\t    var decrypted = new Uint8Array(maybeLength);\n\t    var i, j;\n\t    for (i = 0, j = 0; i < count; i++) {\n\t      var digit1 = data[i];\n\t      if (!isHexDigit(digit1)) {\n\t        continue;\n\t      }\n\t      i++;\n\t      var digit2;\n\t      while (i < count && !isHexDigit(digit2 = data[i])) {\n\t        i++;\n\t      }\n\t      if (i < count) {\n\t        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n\t        decrypted[j++] = value ^ r >> 8;\n\t        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t      }\n\t    }\n\t    return Array.prototype.slice.call(decrypted, discardNumber, j);\n\t  }\n\t  function isSpecial(c) {\n\t    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n\t  }\n\t  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n\t    if (encrypted) {\n\t      var data = stream.getBytes();\n\t      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n\t      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n\t    }\n\t    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t    this.stream = stream;\n\t    this.nextChar();\n\t  }\n\t  Type1Parser.prototype = {\n\t    readNumberArray: function Type1Parser_readNumberArray() {\n\t      this.getToken();\n\t      var array = [];\n\t      while (true) {\n\t        var token = this.getToken();\n\t        if (token === null || token === ']' || token === '}') {\n\t          break;\n\t        }\n\t        array.push(parseFloat(token || 0));\n\t      }\n\t      return array;\n\t    },\n\t    readNumber: function Type1Parser_readNumber() {\n\t      var token = this.getToken();\n\t      return parseFloat(token || 0);\n\t    },\n\t    readInt: function Type1Parser_readInt() {\n\t      var token = this.getToken();\n\t      return parseInt(token || 0, 10) | 0;\n\t    },\n\t    readBoolean: function Type1Parser_readBoolean() {\n\t      var token = this.getToken();\n\t      return token === 'true' ? 1 : 0;\n\t    },\n\t    nextChar: function Type1_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    getToken: function Type1Parser_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch === -1) {\n\t          return null;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (!(0, _util.isSpace)(ch)) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      if (isSpecial(ch)) {\n\t        this.nextChar();\n\t        return String.fromCharCode(ch);\n\t      }\n\t      var token = '';\n\t      do {\n\t        token += String.fromCharCode(ch);\n\t        ch = this.nextChar();\n\t      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n\t      return token;\n\t    },\n\t    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n\t      if (lenIV === -1) {\n\t        return bytes;\n\t      }\n\t      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t    },\n\t    extractFontProgram: function Type1Parser_extractFontProgram() {\n\t      var stream = this.stream;\n\t      var subrs = [],\n\t          charstrings = [];\n\t      var privateData = Object.create(null);\n\t      privateData['lenIV'] = 4;\n\t      var program = {\n\t        subrs: [],\n\t        charstrings: [],\n\t        properties: { 'privateData': privateData }\n\t      };\n\t      var token, length, data, lenIV, encoded;\n\t      while ((token = this.getToken()) !== null) {\n\t        if (token !== '/') {\n\t          continue;\n\t        }\n\t        token = this.getToken();\n\t        switch (token) {\n\t          case 'CharStrings':\n\t            this.getToken();\n\t            this.getToken();\n\t            this.getToken();\n\t            this.getToken();\n\t            while (true) {\n\t              token = this.getToken();\n\t              if (token === null || token === 'end') {\n\t                break;\n\t              }\n\t              if (token !== '/') {\n\t                continue;\n\t              }\n\t              var glyph = this.getToken();\n\t              length = this.readInt();\n\t              this.getToken();\n\t              data = stream.makeSubStream(stream.pos, length);\n\t              lenIV = program.properties.privateData['lenIV'];\n\t              encoded = this.readCharStrings(data.getBytes(), lenIV);\n\t              stream.skip(length);\n\t              this.nextChar();\n\t              token = this.getToken();\n\t              if (token === 'noaccess') {\n\t                this.getToken();\n\t              }\n\t              charstrings.push({\n\t                glyph: glyph,\n\t                encoded: encoded\n\t              });\n\t            }\n\t            break;\n\t          case 'Subrs':\n\t            this.readInt();\n\t            this.getToken();\n\t            while (this.getToken() === 'dup') {\n\t              var index = this.readInt();\n\t              length = this.readInt();\n\t              this.getToken();\n\t              data = stream.makeSubStream(stream.pos, length);\n\t              lenIV = program.properties.privateData['lenIV'];\n\t              encoded = this.readCharStrings(data.getBytes(), lenIV);\n\t              stream.skip(length);\n\t              this.nextChar();\n\t              token = this.getToken();\n\t              if (token === 'noaccess') {\n\t                this.getToken();\n\t              }\n\t              subrs[index] = encoded;\n\t            }\n\t            break;\n\t          case 'BlueValues':\n\t          case 'OtherBlues':\n\t          case 'FamilyBlues':\n\t          case 'FamilyOtherBlues':\n\t            var blueArray = this.readNumberArray();\n\t            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n\t              program.properties.privateData[token] = blueArray;\n\t            }\n\t            break;\n\t          case 'StemSnapH':\n\t          case 'StemSnapV':\n\t            program.properties.privateData[token] = this.readNumberArray();\n\t            break;\n\t          case 'StdHW':\n\t          case 'StdVW':\n\t            program.properties.privateData[token] = this.readNumberArray()[0];\n\t            break;\n\t          case 'BlueShift':\n\t          case 'lenIV':\n\t          case 'BlueFuzz':\n\t          case 'BlueScale':\n\t          case 'LanguageGroup':\n\t          case 'ExpansionFactor':\n\t            program.properties.privateData[token] = this.readNumber();\n\t            break;\n\t          case 'ForceBold':\n\t            program.properties.privateData[token] = this.readBoolean();\n\t            break;\n\t        }\n\t      }\n\t      for (var i = 0; i < charstrings.length; i++) {\n\t        glyph = charstrings[i].glyph;\n\t        encoded = charstrings[i].encoded;\n\t        var charString = new Type1CharString();\n\t        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n\t        var output = charString.output;\n\t        if (error) {\n\t          output = [14];\n\t        }\n\t        program.charstrings.push({\n\t          glyphName: glyph,\n\t          charstring: output,\n\t          width: charString.width,\n\t          lsb: charString.lsb,\n\t          seac: charString.seac\n\t        });\n\t      }\n\t      return program;\n\t    },\n\t    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n\t      var token;\n\t      while ((token = this.getToken()) !== null) {\n\t        if (token !== '/') {\n\t          continue;\n\t        }\n\t        token = this.getToken();\n\t        switch (token) {\n\t          case 'FontMatrix':\n\t            var matrix = this.readNumberArray();\n\t            properties.fontMatrix = matrix;\n\t            break;\n\t          case 'Encoding':\n\t            var encodingArg = this.getToken();\n\t            var encoding;\n\t            if (!/^\\d+$/.test(encodingArg)) {\n\t              encoding = (0, _encodings.getEncoding)(encodingArg);\n\t            } else {\n\t              encoding = [];\n\t              var size = parseInt(encodingArg, 10) | 0;\n\t              this.getToken();\n\t              for (var j = 0; j < size; j++) {\n\t                token = this.getToken();\n\t                while (token !== 'dup' && token !== 'def') {\n\t                  token = this.getToken();\n\t                  if (token === null) {\n\t                    return;\n\t                  }\n\t                }\n\t                if (token === 'def') {\n\t                  break;\n\t                }\n\t                var index = this.readInt();\n\t                this.getToken();\n\t                var glyph = this.getToken();\n\t                encoding[index] = glyph;\n\t                this.getToken();\n\t              }\n\t            }\n\t            properties.builtInEncoding = encoding;\n\t            break;\n\t          case 'FontBBox':\n\t            var fontBBox = this.readNumberArray();\n\t            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t            properties.ascentScaled = true;\n\t            break;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  return Type1Parser;\n\t}();\n\texports.Type1Parser = Type1Parser;\n\n/***/ },\n\n/***/ 704:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __webpack_require__(11);\n\t\n\tvar _pdf_manager = __webpack_require__(701);\n\t\n\tvar _is_node = __webpack_require__(123);\n\t\n\tvar _is_node2 = _interopRequireDefault(_is_node);\n\t\n\tvar _primitives = __webpack_require__(20);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar WorkerTask = function WorkerTaskClosure() {\n\t  function WorkerTask(name) {\n\t    this.name = name;\n\t    this.terminated = false;\n\t    this._capability = (0, _util.createPromiseCapability)();\n\t  }\n\t  WorkerTask.prototype = {\n\t    get finished() {\n\t      return this._capability.promise;\n\t    },\n\t    finish: function finish() {\n\t      this._capability.resolve();\n\t    },\n\t    terminate: function terminate() {\n\t      this.terminated = true;\n\t    },\n\t    ensureNotTerminated: function ensureNotTerminated() {\n\t      if (this.terminated) {\n\t        throw new Error('Worker task was terminated');\n\t      }\n\t    }\n\t  };\n\t  return WorkerTask;\n\t}();\n\t;\n\tvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n\t  function PDFWorkerStream(msgHandler) {\n\t    this._msgHandler = msgHandler;\n\t    this._contentLength = null;\n\t    this._fullRequestReader = null;\n\t    this._rangeRequestReaders = [];\n\t  }\n\t  PDFWorkerStream.prototype = {\n\t    getFullReader: function getFullReader() {\n\t      (0, _util.assert)(!this._fullRequestReader);\n\t      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n\t      return this._fullRequestReader;\n\t    },\n\t    getRangeReader: function getRangeReader(begin, end) {\n\t      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n\t      this._rangeRequestReaders.push(reader);\n\t      return reader;\n\t    },\n\t    cancelAllRequests: function cancelAllRequests(reason) {\n\t      if (this._fullRequestReader) {\n\t        this._fullRequestReader.cancel(reason);\n\t      }\n\t      var readers = this._rangeRequestReaders.slice(0);\n\t      readers.forEach(function (reader) {\n\t        reader.cancel(reason);\n\t      });\n\t    }\n\t  };\n\t  function PDFWorkerStreamReader(msgHandler) {\n\t    var _this = this;\n\t\n\t    this._msgHandler = msgHandler;\n\t    this._contentLength = null;\n\t    this._isRangeSupported = false;\n\t    this._isStreamingSupported = false;\n\t    var readableStream = this._msgHandler.sendWithStream('GetReader');\n\t    this._reader = readableStream.getReader();\n\t    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n\t      _this._isStreamingSupported = data.isStreamingSupported;\n\t      _this._isRangeSupported = data.isRangeSupported;\n\t      _this._contentLength = data.contentLength;\n\t    });\n\t  }\n\t  PDFWorkerStreamReader.prototype = {\n\t    get headersReady() {\n\t      return this._headersReady;\n\t    },\n\t    get contentLength() {\n\t      return this._contentLength;\n\t    },\n\t    get isStreamingSupported() {\n\t      return this._isStreamingSupported;\n\t    },\n\t    get isRangeSupported() {\n\t      return this._isRangeSupported;\n\t    },\n\t    read: function read() {\n\t      return this._reader.read().then(function (_ref) {\n\t        var value = _ref.value,\n\t            done = _ref.done;\n\t\n\t        if (done) {\n\t          return {\n\t            value: undefined,\n\t            done: true\n\t          };\n\t        }\n\t        return {\n\t          value: value.buffer,\n\t          done: false\n\t        };\n\t      });\n\t    },\n\t    cancel: function cancel(reason) {\n\t      this._reader.cancel(reason);\n\t    }\n\t  };\n\t  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n\t    this._msgHandler = msgHandler;\n\t    this.onProgress = null;\n\t    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n\t      begin: begin,\n\t      end: end\n\t    });\n\t    this._reader = readableStream.getReader();\n\t  }\n\t  PDFWorkerStreamRangeReader.prototype = {\n\t    get isStreamingSupported() {\n\t      return false;\n\t    },\n\t    read: function read() {\n\t      return this._reader.read().then(function (_ref2) {\n\t        var value = _ref2.value,\n\t            done = _ref2.done;\n\t\n\t        if (done) {\n\t          return {\n\t            value: undefined,\n\t            done: true\n\t          };\n\t        }\n\t        return {\n\t          value: value.buffer,\n\t          done: false\n\t        };\n\t      });\n\t    },\n\t    cancel: function cancel(reason) {\n\t      this._reader.cancel(reason);\n\t    }\n\t  };\n\t  return PDFWorkerStream;\n\t}();\n\tvar WorkerMessageHandler = {\n\t  setup: function setup(handler, port) {\n\t    var testMessageProcessed = false;\n\t    handler.on('test', function wphSetupTest(data) {\n\t      if (testMessageProcessed) {\n\t        return;\n\t      }\n\t      testMessageProcessed = true;\n\t      if (!(data instanceof Uint8Array)) {\n\t        handler.send('test', 'main', false);\n\t        return;\n\t      }\n\t      var supportTransfers = data[0] === 255;\n\t      handler.postMessageTransfers = supportTransfers;\n\t      var xhr = new XMLHttpRequest();\n\t      var responseExists = 'response' in xhr;\n\t      try {\n\t        xhr.responseType;\n\t      } catch (e) {\n\t        responseExists = false;\n\t      }\n\t      if (!responseExists) {\n\t        handler.send('test', false);\n\t        return;\n\t      }\n\t      handler.send('test', {\n\t        supportTypedArray: true,\n\t        supportTransfers: supportTransfers\n\t      });\n\t    });\n\t    handler.on('configure', function wphConfigure(data) {\n\t      (0, _util.setVerbosityLevel)(data.verbosity);\n\t    });\n\t    handler.on('GetDocRequest', function wphSetupDoc(data) {\n\t      return WorkerMessageHandler.createDocumentHandler(data, port);\n\t    });\n\t  },\n\t  createDocumentHandler: function createDocumentHandler(docParams, port) {\n\t    var pdfManager;\n\t    var terminated = false;\n\t    var cancelXHRs = null;\n\t    var WorkerTasks = [];\n\t    var apiVersion = docParams.apiVersion;\n\t    var workerVersion = '2.0.305';\n\t    if (apiVersion !== null && apiVersion !== workerVersion) {\n\t      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n\t    }\n\t    var docId = docParams.docId;\n\t    var docBaseUrl = docParams.docBaseUrl;\n\t    var workerHandlerName = docParams.docId + '_worker';\n\t    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n\t    handler.postMessageTransfers = docParams.postMessageTransfers;\n\t    function ensureNotTerminated() {\n\t      if (terminated) {\n\t        throw new Error('Worker was terminated');\n\t      }\n\t    }\n\t    function startWorkerTask(task) {\n\t      WorkerTasks.push(task);\n\t    }\n\t    function finishWorkerTask(task) {\n\t      task.finish();\n\t      var i = WorkerTasks.indexOf(task);\n\t      WorkerTasks.splice(i, 1);\n\t    }\n\t    function loadDocument(recoveryMode) {\n\t      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n\t      var parseSuccess = function parseSuccess() {\n\t        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n\t          var _ref4 = _slicedToArray(_ref3, 2),\n\t              numPages = _ref4[0],\n\t              fingerprint = _ref4[1];\n\t\n\t          loadDocumentCapability.resolve({\n\t            numPages: numPages,\n\t            fingerprint: fingerprint\n\t          });\n\t        }, parseFailure);\n\t      };\n\t      var parseFailure = function parseFailure(e) {\n\t        loadDocumentCapability.reject(e);\n\t      };\n\t      pdfManager.ensureDoc('checkHeader', []).then(function () {\n\t        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n\t          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n\t        }, parseFailure);\n\t      }, parseFailure);\n\t      return loadDocumentCapability.promise;\n\t    }\n\t    function getPdfManager(data, evaluatorOptions) {\n\t      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n\t      var pdfManager;\n\t      var source = data.source;\n\t      if (source.data) {\n\t        try {\n\t          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n\t          pdfManagerCapability.resolve(pdfManager);\n\t        } catch (ex) {\n\t          pdfManagerCapability.reject(ex);\n\t        }\n\t        return pdfManagerCapability.promise;\n\t      }\n\t      var pdfStream,\n\t          cachedChunks = [];\n\t      try {\n\t        pdfStream = new PDFWorkerStream(handler);\n\t      } catch (ex) {\n\t        pdfManagerCapability.reject(ex);\n\t        return pdfManagerCapability.promise;\n\t      }\n\t      var fullRequest = pdfStream.getFullReader();\n\t      fullRequest.headersReady.then(function () {\n\t        if (!fullRequest.isRangeSupported) {\n\t          return;\n\t        }\n\t        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n\t        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n\t          msgHandler: handler,\n\t          url: source.url,\n\t          password: source.password,\n\t          length: fullRequest.contentLength,\n\t          disableAutoFetch: disableAutoFetch,\n\t          rangeChunkSize: source.rangeChunkSize\n\t        }, evaluatorOptions, docBaseUrl);\n\t        for (var i = 0; i < cachedChunks.length; i++) {\n\t          pdfManager.sendProgressiveData(cachedChunks[i]);\n\t        }\n\t        cachedChunks = [];\n\t        pdfManagerCapability.resolve(pdfManager);\n\t        cancelXHRs = null;\n\t      }).catch(function (reason) {\n\t        pdfManagerCapability.reject(reason);\n\t        cancelXHRs = null;\n\t      });\n\t      var loaded = 0;\n\t      var flushChunks = function flushChunks() {\n\t        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n\t        if (source.length && pdfFile.length !== source.length) {\n\t          (0, _util.warn)('reported HTTP length is different from actual');\n\t        }\n\t        try {\n\t          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n\t          pdfManagerCapability.resolve(pdfManager);\n\t        } catch (ex) {\n\t          pdfManagerCapability.reject(ex);\n\t        }\n\t        cachedChunks = [];\n\t      };\n\t      var readPromise = new Promise(function (resolve, reject) {\n\t        var readChunk = function readChunk(chunk) {\n\t          try {\n\t            ensureNotTerminated();\n\t            if (chunk.done) {\n\t              if (!pdfManager) {\n\t                flushChunks();\n\t              }\n\t              cancelXHRs = null;\n\t              return;\n\t            }\n\t            var data = chunk.value;\n\t            loaded += (0, _util.arrayByteLength)(data);\n\t            if (!fullRequest.isStreamingSupported) {\n\t              handler.send('DocProgress', {\n\t                loaded: loaded,\n\t                total: Math.max(loaded, fullRequest.contentLength || 0)\n\t              });\n\t            }\n\t            if (pdfManager) {\n\t              pdfManager.sendProgressiveData(data);\n\t            } else {\n\t              cachedChunks.push(data);\n\t            }\n\t            fullRequest.read().then(readChunk, reject);\n\t          } catch (e) {\n\t            reject(e);\n\t          }\n\t        };\n\t        fullRequest.read().then(readChunk, reject);\n\t      });\n\t      readPromise.catch(function (e) {\n\t        pdfManagerCapability.reject(e);\n\t        cancelXHRs = null;\n\t      });\n\t      cancelXHRs = function cancelXHRs() {\n\t        pdfStream.cancelAllRequests('abort');\n\t      };\n\t      return pdfManagerCapability.promise;\n\t    }\n\t    function setupDoc(data) {\n\t      function onSuccess(doc) {\n\t        ensureNotTerminated();\n\t        handler.send('GetDoc', { pdfInfo: doc });\n\t      }\n\t      function onFailure(e) {\n\t        ensureNotTerminated();\n\t        if (e instanceof _util.PasswordException) {\n\t          var task = new WorkerTask('PasswordException: response ' + e.code);\n\t          startWorkerTask(task);\n\t          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n\t            finishWorkerTask(task);\n\t            pdfManager.updatePassword(data.password);\n\t            pdfManagerReady();\n\t          }).catch(function (ex) {\n\t            finishWorkerTask(task);\n\t            handler.send('PasswordException', ex);\n\t          }.bind(null, e));\n\t        } else if (e instanceof _util.InvalidPDFException) {\n\t          handler.send('InvalidPDF', e);\n\t        } else if (e instanceof _util.MissingPDFException) {\n\t          handler.send('MissingPDF', e);\n\t        } else if (e instanceof _util.UnexpectedResponseException) {\n\t          handler.send('UnexpectedResponse', e);\n\t        } else {\n\t          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n\t        }\n\t      }\n\t      function pdfManagerReady() {\n\t        ensureNotTerminated();\n\t        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n\t          ensureNotTerminated();\n\t          if (!(ex instanceof _util.XRefParseException)) {\n\t            onFailure(ex);\n\t            return;\n\t          }\n\t          pdfManager.requestLoadedStream();\n\t          pdfManager.onLoadedStream().then(function () {\n\t            ensureNotTerminated();\n\t            loadDocument(true).then(onSuccess, onFailure);\n\t          });\n\t        }, onFailure);\n\t      }\n\t      ensureNotTerminated();\n\t      var evaluatorOptions = {\n\t        forceDataSchema: data.disableCreateObjectURL,\n\t        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n\t        disableFontFace: data.disableFontFace,\n\t        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n\t        ignoreErrors: data.ignoreErrors,\n\t        isEvalSupported: data.isEvalSupported\n\t      };\n\t      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n\t        if (terminated) {\n\t          newPdfManager.terminate();\n\t          throw new Error('Worker was terminated');\n\t        }\n\t        pdfManager = newPdfManager;\n\t        handler.send('PDFManagerReady', null);\n\t        pdfManager.onLoadedStream().then(function (stream) {\n\t          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n\t        });\n\t      }).then(pdfManagerReady, onFailure);\n\t    }\n\t    handler.on('GetPage', function wphSetupGetPage(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t        var rotatePromise = pdfManager.ensure(page, 'rotate');\n\t        var refPromise = pdfManager.ensure(page, 'ref');\n\t        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n\t        var viewPromise = pdfManager.ensure(page, 'view');\n\t        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n\t          return {\n\t            rotate: results[0],\n\t            ref: results[1],\n\t            userUnit: results[2],\n\t            view: results[3]\n\t          };\n\t        });\n\t      });\n\t    });\n\t    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n\t      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n\t      var catalog = pdfManager.pdfDocument.catalog;\n\t      return catalog.getPageIndex(ref);\n\t    });\n\t    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n\t      return pdfManager.ensureCatalog('destinations');\n\t    });\n\t    handler.on('GetDestination', function wphSetupGetDestination(data) {\n\t      return pdfManager.ensureCatalog('getDestination', [data.id]);\n\t    });\n\t    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n\t      return pdfManager.ensureCatalog('pageLabels');\n\t    });\n\t    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n\t      return pdfManager.ensureCatalog('pageMode');\n\t    });\n\t    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n\t      return pdfManager.ensureCatalog('attachments');\n\t    });\n\t    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n\t      return pdfManager.ensureCatalog('javaScript');\n\t    });\n\t    handler.on('GetOutline', function wphSetupGetOutline(data) {\n\t      return pdfManager.ensureCatalog('documentOutline');\n\t    });\n\t    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n\t      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n\t    });\n\t    handler.on('GetData', function wphSetupGetData(data) {\n\t      pdfManager.requestLoadedStream();\n\t      return pdfManager.onLoadedStream().then(function (stream) {\n\t        return stream.bytes;\n\t      });\n\t    });\n\t    handler.on('GetStats', function wphSetupGetStats(data) {\n\t      return pdfManager.pdfDocument.xref.stats;\n\t    });\n\t    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n\t      });\n\t    });\n\t    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n\t      var pageIndex = data.pageIndex;\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n\t        startWorkerTask(task);\n\t        var pageNum = pageIndex + 1;\n\t        var start = Date.now();\n\t        page.getOperatorList({\n\t          handler: handler,\n\t          task: task,\n\t          intent: data.intent,\n\t          renderInteractiveForms: data.renderInteractiveForms\n\t        }).then(function (operatorList) {\n\t          finishWorkerTask(task);\n\t          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n\t        }, function (e) {\n\t          finishWorkerTask(task);\n\t          if (task.terminated) {\n\t            return;\n\t          }\n\t          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n\t          var wrappedException;\n\t          if (typeof e === 'string') {\n\t            wrappedException = {\n\t              message: e,\n\t              stack: minimumStackMessage\n\t            };\n\t          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n\t            wrappedException = {\n\t              message: e.message || e.toString(),\n\t              stack: e.stack || minimumStackMessage\n\t            };\n\t          } else {\n\t            wrappedException = {\n\t              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n\t              stack: minimumStackMessage\n\t            };\n\t          }\n\t          handler.send('PageError', {\n\t            pageNum: pageNum,\n\t            error: wrappedException,\n\t            intent: data.intent\n\t          });\n\t        });\n\t      });\n\t    }, this);\n\t    handler.on('GetTextContent', function wphExtractText(data, sink) {\n\t      var pageIndex = data.pageIndex;\n\t      sink.onPull = function (desiredSize) {};\n\t      sink.onCancel = function (reason) {};\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n\t        startWorkerTask(task);\n\t        var pageNum = pageIndex + 1;\n\t        var start = Date.now();\n\t        page.extractTextContent({\n\t          handler: handler,\n\t          task: task,\n\t          sink: sink,\n\t          normalizeWhitespace: data.normalizeWhitespace,\n\t          combineTextItems: data.combineTextItems\n\t        }).then(function () {\n\t          finishWorkerTask(task);\n\t          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n\t          sink.close();\n\t        }, function (reason) {\n\t          finishWorkerTask(task);\n\t          if (task.terminated) {\n\t            return;\n\t          }\n\t          sink.error(reason);\n\t          throw reason;\n\t        });\n\t      });\n\t    });\n\t    handler.on('Cleanup', function wphCleanup(data) {\n\t      return pdfManager.cleanup();\n\t    });\n\t    handler.on('Terminate', function wphTerminate(data) {\n\t      terminated = true;\n\t      if (pdfManager) {\n\t        pdfManager.terminate();\n\t        pdfManager = null;\n\t      }\n\t      if (cancelXHRs) {\n\t        cancelXHRs();\n\t      }\n\t      var waitOn = [];\n\t      WorkerTasks.forEach(function (task) {\n\t        waitOn.push(task.finished);\n\t        task.terminate();\n\t      });\n\t      return Promise.all(waitOn).then(function () {\n\t        handler.destroy();\n\t        handler = null;\n\t      });\n\t    });\n\t    handler.on('Ready', function wphReady(data) {\n\t      setupDoc(docParams);\n\t      docParams = null;\n\t    });\n\t    return workerHandlerName;\n\t  },\n\t  initializeFromPort: function initializeFromPort(port) {\n\t    var handler = new _util.MessageHandler('worker', 'main', port);\n\t    WorkerMessageHandler.setup(handler, port);\n\t    handler.send('ready', null);\n\t  }\n\t};\n\tfunction isMessagePort(maybePort) {\n\t  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n\t}\n\tif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n\t  WorkerMessageHandler.initializeFromPort(self);\n\t}\n\texports.WorkerTask = WorkerTask;\n\texports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ },\n\n/***/ 716:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @licstart The following is the entire license notice for the\n\t * Javascript code in this page\n\t *\n\t * Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @licend The above is the entire license notice for the\n\t * Javascript code in this page\n\t */\n\t'use strict';\n\t\n\tvar pdfjsVersion = '2.0.305';\n\tvar pdfjsBuild = '9c6a8801';\n\tvar pdfjsCoreWorker = __webpack_require__(704);\n\texports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.96ea1852.chunk.js","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/primitives.js\n// module id = 20\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/stream.js\n// module id = 24\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/colorspace.js\n// module id = 97\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/encodings.js\n// module id = 98\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/parser.js\n// module id = 122\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/glyphlist.js\n// module id = 179\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/jpeg_stream.js\n// module id = 180\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/operator_list.js\n// module id = 181\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/arithmetic_decoder.js\n// module id = 401\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/ccitt.js\n// module id = 402\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/cff_parser.js\n// module id = 403\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/chunked_stream.js\n// module id = 404\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/crypto.js\n// module id = 405\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/function.js\n// module id = 406\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/jpx.js\n// module id = 407\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/obj.js\n// module id = 408\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/standard_fonts.js\n// module id = 409\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/unicode.js\n// module id = 410\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/annotation.js\n// module id = 684\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/bidi.js\n// module id = 685\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/ccitt_stream.js\n// module id = 686\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/charsets.js\n// module id = 687\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/cmap.js\n// module id = 688\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/document.js\n// module id = 689\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/evaluator.js\n// module id = 690\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/font_renderer.js\n// module id = 691\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/fonts.js\n// module id = 692\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/image.js\n// module id = 693\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/jbig2.js\n// module id = 694\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/jbig2_stream.js\n// module id = 695\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/jpg.js\n// module id = 696\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/jpx_stream.js\n// module id = 697\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/metrics.js\n// module id = 698\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/murmurhash3.js\n// module id = 699\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/pattern.js\n// module id = 700\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/pdf_manager.js\n// module id = 701\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/ps_parser.js\n// module id = 702\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/type1_parser.js\n// module id = 703\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.305';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/core/worker.js\n// module id = 704\n// module chunks = 1","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.305';\nvar pdfjsBuild = '9c6a8801';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/lib/pdf.worker.js\n// module id = 716\n// module chunks = 1"],"sourceRoot":""}